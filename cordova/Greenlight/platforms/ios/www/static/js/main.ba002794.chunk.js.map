{"version":3,"sources":["locales/en/messages.js","locales/es/messages.js","data/geo_data sync /^/.//.*/.json$","initializers/honeybadger.ts","env.ts","initializers/reactn-devtools.ts","models/Model.ts","logger.ts","util.ts","misc/colors.ts","misc/CutoffTime.ts","models/GreenlightStatus.ts","models/LocationAccount.ts","models/UserSettings.ts","models/Location.ts","models/User.ts","models/MedicalEvent.ts","models/index.ts","api/stores.ts","api/index.ts","i18n.ts","misc/CookieJar.ts","initializers/providers.ts","pages/NotFoundPage.tsx","components/If.tsx","data/releases.ts","misc/Version.ts","components/ReleaseCard.tsx","components/UserJDenticon.tsx","pages/DashboardPage.tsx","pages/SplashPage.tsx","components/EmailOrPhoneListInput.tsx","pages/SignInPage.tsx","pages/MagicSignInPage.tsx","images/welcome-doctor.svg","components/Case.tsx","errors.ts","pages/welcome/WelcomePage.tsx","pages/welcome/WelcomeChildPage.tsx","pages/welcome/WelcomeReviewPage.tsx","images/welcome-secure.svg","pages/welcome/WelcomePasswordPage.tsx","images/symptoms/fever.svg","images/symptoms/fever-bright.svg","images/symptoms/cough.svg","images/symptoms/cough-bright.svg","images/symptoms/chills.svg","images/symptoms/chills-bright.svg","images/symptoms/difficulty-breathing.svg","images/symptoms/difficulty-breathing-bright.svg","images/symptoms/taste-smell.svg","images/symptoms/taste-smell-bright.svg","components/DatedYesNoButton.tsx","pages/SurveyNewPage.tsx","data/giphySchedule.ts","components/Giphy.tsx","misc/reasons.ts","images/doctors.svg","pages/SurveyThankYouPage.tsx","pages/MagicSignInAuthPage.tsx","pages/GiphySchedulePage.tsx","components/StatusJDenticon.tsx","pages/UserGreenlightPassPage.tsx","pages/admin/AdminUsersPage.tsx","images/online-checkup.svg","pages/welcome/WelcomeSurveyPage.tsx","pages/ReleaseNotesPage.tsx","pages/CovidCountyMapPage.tsx","pages/AboutPage.tsx","misc/SubmissionHandler.ts","pages/UserEditPage.tsx","components/FormikInput.tsx","components/FormikItem.tsx","components/EmailLink.tsx","pages/LoadingPage.tsx","pages/LocationPage.tsx","pages/MobileVerificationPage.tsx","pages/LocationRegistrationPage.tsx","pages/LocationForm.tsx","pages/UsersForm.tsx","pages/UsersNewPage.tsx","routes.ts","pages/SettingsPage.tsx","pages/NotificationsPage.tsx","pages/DebugPage.tsx","pages/DukeScheduleTestPage.tsx","pages/NCStatewideStatsPage.tsx","pages/OpenSourceLicensesPage.tsx","pages/LocationsNewPage.tsx","pages/CHWRequestPage.tsx","initializers/GL.ts","ErrorBoundary.tsx","components/OnlineStatus.tsx","components/SupportedBrowserBar.tsx","components/FlashMessage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","messages","one","other","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","Honeybadger","configure","apiKey","process","env","isDevelopment","isProduction","API_URL","herokuAppName","REACT_APP_HEROKU_APP_NAME","key","backup","value","required","then","tools","default","STRING","name","NUMBER","BOOLEAN","DATE","serialize","x","toFormat","deserialize","DateTime","fromISO","DATETIME","ATTR_METADATA_KEY","Symbol","attribute","definiton","attrDefinition","target","propertyKey","allMetadata","Reflect","getMetadata","currAttributes","forEach","defineMetadata","REL_METADATA_KEY","relationship","relDefinition","hasOne","model","definition","type","hasMany","ModelRegistry","models","this","m","lowerCaseFirstLetter","modelName","Model","_data","_relationships","_included","resourceType","constructor","getPrototypeOf","prototype","undefined","relationshipMetadata","attributes","entries","attributeMetadata","property","initialize","entity","data","_deserialize","deserializeJSONAPI","record","modelFor","this_","attrMeta","relMeta","attrDef","relDef","Array","isArray","debug","v","obj","JSON","stringify","k","str","charAt","toLowerCase","slice","logger","notify","log","console","warn","error","dev","devReturn","args","today","local","setZone","startOf","assertArray","assertNotArray","assertNotUndefined","assertNotNull","isBlank","isPresent","resolvePath","path","substitutions","query","matches","match","queryString","qs","length","i","replace","String","substitutionsKeys","subtitutionKey","esExclaim","getGlobal","locale","greeting","time","hours","Date","getHours","timeOfDay","i18n","_","joinWords","words","conjunction","twoWordsConnector","lastWordConnector","wordsConnector","join","ping","url","timeout","Promise","isOffline","xhr","XMLHttpRequest","onerror","ontimeout","onreadystatechange","readyState","HEADERS_RECEIVED","status","open","send","sortBy","ary","fn","el","sort","e1","e2","deleteBlanks","propName","EMAIL_REGEX","validEmail","email","test","formatPhone","number","parsed","parsePhoneNumberFromString","formatNational","validPhone","phoneNumber","country","isValid","haveEqualAttrs","a","b","aProps","getOwnPropertyNames","bProps","transformForAPI","isPrimitiveType","isDateTime","toISO","transformed","colors","greenLight","green","greenFade","greenDark","yellow","pink","goldLight","gold","blue","gray","secondsSinceMidnight","diff","seconds","toDateTime","dt","fromJSDate","fromMillis","fromRFC2822","fromSQL","fromHTTP","attempt","conversion","GreenlightStatusTypes","CUTOFF_TIME","cutoff","otherSeconds","compare","isSame","isBefore","isAfter","PermissionLevels","GREENLIGHT_COLORS","cleared","hex","pending","recovery","absent","unknown","GreenlightStatus","attr","UNKNOWN","ABSENT","CLEARED","PENDING","RECOVERY","date","submissionDate","expirationDate","followUpDate","isUnknown","isValidForDate","plus","days","DailyReminderType","LocationAccount","permissionLevel","ADMIN","OWNER","LocationCategories","UserSettings","dailyReminderTime","TEXT","User","u1","u2","reversedName","lastName","firstName","children","locationAccounts","la","location","filter","l","hasChildren","completedWelcomeAt","lastGreenlightStatus","isValidForToday","newUnknown","isValidForTomorrow","greenlightStatus","isCleared","usersExpectedToSubmit","u","every","hasLocationThatRequiresSurvey","greenlightStatusTomorrow","users","sortedChildren","child","hasNotSubmittedOwnSurvey","push","hasNotSubmittedOwnSurveyForTomorrow","settings","usersNotSubmitted","yourself__HACK","usersNotSubmittedForTomorrow","adminLocations","isAdmin","SCHOOOL","RESTAUARNT","ENTERTAINMENT","NONPROFIT","RETAIL","SERVICES","BUSINESS","OTHER","MedicalEventTypes","Location","MedicalEvent","SYMPTOMS","FEVER","NEW_COUGH","LOST_TASTE_SMELL","DIFFICULTY_BREATHING","CHILLS","NONE","register","recordStore","ids","records","findRecord","entities","findEntity","r","uuid","res","included","writeRecords","transformRelationship","relationshipName","includes","hasRelationship","d","foundEntities","findEntities","foundRecords","findRecords","xs","ys","zipped","Math","min","zipTwo","tranformRelationships","foundEntity","foundRecord","relationships","transformRecord","transformRecordResponse","BASE_URL","v1","axios","create","baseURL","withCredentials","interceptors","request","use","method","response","setGlobal","currentUser","isAPIOnline","isInternetOnline","navigator","onLine","store","createSession","emailOrMobile","password","rememberMe","post","deleteSession","delete","createMagicSignIn","magicSignIn","token","getLocation","getResource","createLocation","attrs","joinLocation","getCurrentUser","user","setContext","userId","getUser","updateUser","updates","patch","completeWelcomeUser","put","createUserAndSignIn","updateUserSettings","getUsersForLocation","locationId","getResources","createSymptomSurvey","medicalEvents","payload","get","writeRecordResponse","loadLocaleData","plurals","load","en","es","Cookie","CookieJar","Cookies","set","remove","isSignedIn","reloadCurrentUser","signOut","resetContext","window","cookieLocale","LOCALE","flashMessage","activate","addReducer","global","dispatch","NotFoundPage","title","strong","If","fromFormat","releaseData","version","notesEn","notesEs","whatsNewEn","whatsNewEs","bugFixesEn","bugFixesEs","Version","major","minor","parseInt","ReleaseCard","useReducer","forceUpdate","rawLastVersion","LAST_VERSION","lastVersion","latestVersion","diffNow","showNewRelease","className","style","width","display","textAlign","onClick","f7","fontSize","href","paths","releasesPath","configs","hues","lightness","color","grayscale","saturation","backColor","UserJDenticon","size","jdenticon","borderRadius","background","btoa","backgroundPosition","height","lineHeight","fontWeight","UserList","accordionItem","link","after","slot","dynamicPaths","userGreenlightPassPath","userSurveysNewPath","single","DashboardPage","settingsPath","showSubmissionPanelForToday","userSeqSurveysNewPath","usersNotSubmittedText","showSubmissionPanelForTomorrow","usersNotSubmittedForTomorrowText","footer","dukeScheduleTestPath","external","chwRequestPath","ncStatewideStatsPath","$f7router","navigate","rootPath","ReactNComponent","SplashPage","noToolbar","noNavbar","noSwipeback","loginScreen","outline","signInPath","newUserPath","durhamRegistationPath","border","getFullYear","React","Component","EmailOrPhoneListInput","listInput","createRef","state","inputType","seenInput","errorMessage","errorMessageForce","props","setState","validate","ref","validateOnBlur","onBlur","bind","onChange","placeholder","onInput","displayName","SignInPage","emailOrMobileRef","passwordRef","passwordValid","$f7","input","validateInputs","emailOrMobileValid","current","dialog","preloader","close","currentUserHomePath","alert","marginTop","form","checkbox","checked","fill","submit","magicSignInPath","MagicSignInPage","submitted","alertTitle","When","Case","toArray","NoCurrentUserError","message","WelcomePage","termsOpened","locations__HACK","reduce","y","fillForSelf","fillForChildren","locationCount","totalLocations","whoDoYouFillSurveysFor","alt","src","welcomeDoctorImage","tag","large","welcomeReviewPath","opened","onSheetClosed","sheetClose","physicianName","physicianPhoneNumber","needsPhysician","rawId","$f7route","params","childIndex","hasNextChild","names","welcomeChildIndexPath","welcomeSurveyPath","childrenNames","noHairlines","smartSelect","smartSelectParams","openIn","defaultValue","header","label","nextChild","WelcomeReviewUserPage","originalEmail","originalPhone","mobileNumber","updatedUser","clone","showMobileNumberError","userAttrs","extractUpdateAttrs","updatedUserAttrs","welcomePasswordPath","noHairlinesMd","disabled","info","showErrorMessage","isPasswordHidden","afterWelcomePasswordPath","toggleReveal","passwordImage","DatedYesNoButton","yesNo","showErrors","setYesNo","margin","visibility","calendarParams","minDate","minus","toJSDate","maxDate","monthPicker","yearPicker","closeOnSelect","touchMove","direction","onCalendarChange","setDate","readonly","buttonImages","cough","coughBright","fever","feverBright","chills","chillsBright","difficultyBreathing","difficultyBreathingBright","tasteSmell","tasteSmellBright","SymptomButton","image","selected","dangerouslySetInnerHTML","__html","SurveyNewPage","isSequence","targetUser","isLoaded","hasFever","hasChills","hasNewCough","hasDifficultyBreathing","hasLossTasteSmell","diagnosisDate","hadDiagnosis","contactDate","hadContact","showConfirmation","redirect","events","eventType","occurredAt","COVID_DIAGNOSIS","COVID_EXPOSURE","submittingFor","symptom","submitClicked","reloadCurrent","ignoreCache","refreshPage","surveysThankYouPath","dashboardPath","fullName","isSubmittingForSelf","toggleSymptom","setContacted","setContactDate","setDiagnosed","setDiagnosisDate","hasNextUser","submit1","nextUser","submit2","giphySchedule","giphyEmbedURL","giphyVideoURL","giphyGifURL","Giphy","mode","paddingBottom","position","frameBorder","allowFullScreen","autoPlay","loop","GiphyForToday","toLocaleString","DATE_SHORT","values","floor","random","randomGiphyId","REASON_REPLACEMENTS","submittingUser","count","REASONS","recovery_asymptomatic_covid_exposure","recovery_covid_exposure","recovery_diagnosed_asymptomatic","recovery_from_diagnosis","pending_needs_diagnosis","recovery_not_covid_has_fever","recovery_return_tomorrow","interpolate","replacer","reasonMessage","bundle","reason","SurveyThankYouPage","some","areUsersCleared","doctorsImage","reasonTitle","anyMissing","renderStatusBreakdownNotSubmitted","allCleared","renderAllCleared","renderStatusBreakdown","renderStatus","MagicSignInAuthPage","hasReceivedResponse","isSuccess","remember","authorize","backLink","dateString","DATE_HUGE","StatusJDenticon","UserGreenlightPassPage","text","toUpperCase","createdAt","DATETIME_SHORT","UsersList","grouped","letter","route","groupByLetter","inner","searchContainer","searchIn","reload","contactsList","groupTitle","userItem","AdminUsersPage","locatonId","show","fetchUsers","finally","hide","WelcomeSurveyPage","onlineCheckupImage","Release","whatsNew","bugFixes","notes","item","MapPage","mapRef","useRef","useEffect","stateInfo","states","find","stateItem","geoData","require","echarts","registerMap","option","flex","SettingsPage","noChevron","openSourcePath","SubmissionHandler","options","onSubmitMessage","onErrorTitle","onErrorMessage","onSuccess","onError","action","schema","Yup","shape","zipCode","excludeEmptyString","UserEditPage","f7route","f7router","useGlobal","submissionHandler","notFoundPath","formik","useFormik","validationSchema","validateOnChange","initialValues","birthDate","onSubmit","dirty","back","handleSubmit","handleChange","errors","handleBlur","clearButton","routableModals","FormikInput","useField","field","meta","toString","newProps","autocomplete","autocorrect","autocapitalize","spellcheck","touched","FormikItem","SUPPORT_EMAIL","EmailLink","LoadingPage","LocationPage","useState","setLocation","setError","catch","medium","category","website","mobileCarrier","MobileVerificationPage","isCodeSent","setCodeSent","verificationCodeInput","setVerificationCodeInput","fields","originalValue","onComplete","registrationCode","LocationRegistrationPage","LocationInput","permalink","employeeCount","dailyReminderHour","dailyReminderAMPM","remindMon","remindTue","remindWed","remindThu","remindFri","remindSat","remindSun","LocationForm","almostFinished","setAlmostFinished","cantBeBlankMessage","nullable","preventDefault","LocationBlock","LocationNotificationsBlock","ownerCount","submitForm","accordionList","max","UserInput","physicanName","UserForm","revealPassword","setRevealPassword","phone","UsersNewPage","page","setPage","setTermsOpened","error2","setError2","myPermalink","setMyPermalink","myCode","setMyCode","hasCompletedWelcome","beforeEnter","requireSignIn","routeTo","routeFrom","reject","redirectHomeIfSignedIn","routeMap","component","magicSignInAuthPath","sliding","editUserPath","isAdminSomewhere","adminUsersPath","notificationsPath","aboutPath","AboutPage","settingsReified","dailyReminderType","overrideLocationReminders","valuesToSubmit","EMAIL","welcomePath","splashPath","WelcomeReviewPage","WelcomePasswordPage","welcomeChildPath","WelcomeChildPage","locationPath","locationRegistrationPath","mobileVerificationPath","debugPath","tabbar","bottom","tabLink","tabLinkActive","tabActive","scrolling","giphySchedulePath","releases","release","setLocale","DATE_FULL","hasNotes","hasWhatsNew","whatsNewList","hasBugFixes","bugFixesList","licenses","author","licenseType","mapPath","CovidCountyMapPage","newLocationUserPath","editChildrenPath","catchAllPath","pathsDynamized","index","userSurveysNewIndexPath","GL","api","ErrorBoundary","hasError","errorInfo","HAS_ONLINE_SUPPORT","testInternet","OnlineStatus","setIsAPIOnline","setIsInternetOnline","checkConnection","checkApi","internetStatus","timerId","func","ms","wrapped","setTimeout","setIntervalSafely","CHECK_AFTER_SECS","clearTimeout","supportedBrowsers","SupportedBrowserBar","hidden","setHidden","userAgent","FlashMessage","I18nWatchLocale","useLingui","f7params","theme","routes","Main","globalI18n","main","view","pushState","pushStateSeparator","Boolean","hostname","startApp","err","ReactDOM","render","document","getElementById","Framework7","Framework7React","cordova","addEventListener","codePush","sync","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ba002794.chunk.js","sourcesContent":["/*eslint-disable*/module.exports={messages:{\"API.greenlight_status.invalid_email\":\"No account was found for the email you provided.\",\"API.sessions.invalid_email\":\"No account was found for the email you provided.\",\"API.sessions.invalid_password\":\"That password is incorrect. Please try again.\",\"API.sessions.invalid_phone\":\"No account was found for the phone number you provided.\",\"AboutPage.greenlight_version\":\"Greenlight Version\",\"AboutPage.open_source_licenses\":\"Open Source Licenses\",\"AboutPage.privacy_policy\":\"Privacy Policy\",\"AboutPage.terms_of_service\":\"Terms of Service\",\"AboutPage.title\":\"About\",\"AboutPage.visit_our_site\":\"Visit our Website\",\"AboutPage.visit_the_blog\":\"Visit the Blog\",\"Common.back\":\"Back\",\"Common.back_home\":\"Back Home\",\"Common.close\":\"Close\",\"Common.continue\":\"Continue\",\"Common.hide\":\"Hide\",\"Common.register\":\"Register\",\"Common.send_code\":\"Send Code\",\"Common.sign_out\":\"Sign Out\",\"Common.somethings_wrong\":\"Something went wrong\",\"Common.submission_failed\":\"Submission Failed\",\"Common.submit\":\"Submit\",\"Common.submitting\":\"Submitting...\",\"Common.toggle_locale\":\"En Espa\\xF1ol\",\"Common.version\":\"Version\",\"DailyReminder.disable_all\":\"Disable All Reminders\",\"DailyReminder.send_via_email\":\"Send Reminders via Email\",\"DailyReminder.send_via_text\":\"Send Reminders via Text\",\"DashboardPage.affafa\":\"COVID-19 maps and statistics from across the state\",\"DashboardPage.asfff\":\"Connect to Care\",\"DashboardPage.child_care_footer\":\"Child care referrals available 8am-5pm Monday-Friday\",\"DashboardPage.child_care_title\":\"Child Care Hotline\",\"DashboardPage.duke_testing_footer\":\"Connect to streamlined testing 8am to 5pm any day\",\"DashboardPage.duke_testing_title\":\"Testing at Duke\",\"DashboardPage.ffasfa\":\"NC COVID-19 Data\",\"DashboardPage.go_to_check_in\":\"Go to Check-In\",\"DashboardPage.greenlight_pass\":\"Greenlight Pass\",\"DashboardPage.needs_to_submit\":[\"How are you today? You still need to fill out surveys for \",[\"0\"],\".\"],\"DashboardPage.needs_to_submit_for_tomorrow\":[\"Get ready for tomorrow! You need to fill out surveys for\",[\"0\"],\".\"],\"DashboardPage.resources_title\":\"Resources For You\",\"DashboardPage.submit_check_in\":\"Submit Daily Check-In\",\"DashboardPage.support_footer\":\"Need help? Email our support team.\",\"DashboardPage.support_footerss\":\"Have any questions? Message our support team.\",\"DashboardPage.support_title\":\"Email Support\",\"DashboardPage.support_titless\":\"Contact Support\",\"DashboardPage.testing_footer\":\"Testing Sites Near You\",\"DashboardPage.testing_title\":\"Find other Testing\",\"DashboardPage.triage_footer\":\"Call 7am-11pm any day\",\"DashboardPage.triage_title\":\"Contact COVID-19 Triage\",\"DashboardPage.your_children\":\"Your Children\",\"DashboardPage.your_family\":\"Your Family\",\"DatedYesNoButton.date_missing\":\"Please set the date.\",\"DatedYesNoButton.no\":\"No\",\"DatedYesNoButton.select_date\":\"Select date\",\"DatedYesNoButton.yes\":\"Yes\",\"DatedYesNoButton.yes_no_missing\":\"Please choose yes or no.\",\"DukeScheduleTestPage.instructions1\":\"From 8:00am to 5pm, please call the number below to schedule a test. Dial 2 when you here the automated voice to reach the patient line.\",\"DukeScheduleTestPage.instructions2\":\"Call <0>919-385-0429</0>, then Dial 2\",\"DukeScheduleTestPage.instructions3\":\"Tell whomever you speak with that you need to schedule a test and you use the Greenlight app.\",\"DukeScheduleTestPage.instructions4\":\"You should be scheduled within 24 hours and recieve a result the following day. You should not need to schedule an appointment before the test.\",\"DukeScheduleTestPage.resources_title\":\"More resources:\",\"DukeScheduleTestPage.steps_after_test\":\"Steps to take after a test\",\"DukeScheduleTestPage.support\":\"Still need help? Contact Greenlight support <0>help@greenlightready.com</0>\",\"DukeScheduleTestPage.supporting_child\":\"Supporting Your Child During COVID-19 Nasal Swab Testing\",\"DukeScheduleTestPage.title\":\"Schedule a Test\",\"EditUserPage.cant_be_changed\":\"Can't be changed at this time.\",\"EditUserPage.date_of_birth_label\":\"Date of Birth\",\"EditUserPage.email_label\":\"Email\",\"EditUserPage.first_name_label\":\"First Name\",\"EditUserPage.first_name_missing\":\"Please enter your first name.\",\"EditUserPage.invalid_zip_code\":\"Zip code should be 5 digits\",\"EditUserPage.last_name_label\":\"Last Name\",\"EditUserPage.last_name_missing\":\"Please enter your last name.\",\"EditUserPage.mobile_number_label\":\"Mobile Number\",\"EditUserPage.need_help_finding_physician\":\"Need help finding a physician?\",\"EditUserPage.primary_care_physician_name_label\":\"Primary Care Physician Name\",\"EditUserPage.primary_care_physician_phone_number_label\":\"Primary Care Physician Phone Number\",\"EditUserPage.title\":\"Edit User\",\"EditUserPage.zip_code_label\":\"Zip Code\",\"EmailOrPhoneListInput.email_or_phone_invalid\":\"Invalid email or mobile number.\",\"EmailOrPhoneListInput.email_or_phone_missing\":\"Please enter your email or mobile number.\",\"EmailOrPhoneListInput.email_or_phone_placeholder\":\"Email or mobile phone number.\",\"ErrorBoundary.error_message\":\"Error Message:\",\"ErrorBoundary.return_home\":\"Return Home\",\"ErrorBoundary.something_went_wrong\":\"Something went wrong.\",\"ForgotPasswordPage.instructions\":\"Enter your email or mobile number, and we'll send you a link to reset your password.\",\"Form.error_blank\":\"Can't be blank\",\"Form.error_invalid\":\"Is invalid\",\"Form.error_invalid2\":\"only lowercase letters, dashes for spaces, and numbers\",\"Forms.email\":\"Email\",\"Forms.first_name\":\"First Name\",\"Forms.last_name\":\"Last Name\",\"Forms.location_id\":\"Location ID (Used for Links)\",\"Forms.location_name\":\"Location Name\",\"Forms.mobile_number\":\"Mobile Number\",\"Forms.password\":\"Password\",\"Forms.zip_code\":\"Zip Code\",\"GreenlightStatus.absent\":\"Absent\",\"GreenlightStatus.cleared\":\"Cleared\",\"GreenlightStatus.not_submitted\":\"Not Submitted\",\"GreenlightStatus.pending\":\"Pending\",\"GreenlightStatus.recovery\":\"Recovery\",\"LoadingPage.message\":\"Stuck here for too long? Try refreshing the page. If you still need help please email us at <0/>.\",\"LoadingPage.title\":\"Loading...\",\"Location.register\":\"Register\",\"LocationForm.create_location\":\"Create Your Location\",\"LocationRegistrationPage.email\":\"Email\",\"LocationRegistrationPage.first_name\":\"First Name\",\"LocationRegistrationPage.first_name_required\":\"Please input first name\",\"LocationRegistrationPage.invalid_email\":\"Please input valid email address\",\"LocationRegistrationPage.last_name\":\"Last Name\",\"LocationRegistrationPage.last_name_required\":\"Please input last name\",\"LocationRegistrationPage.registration_code\":\"Registration Code\",\"LocationRegistrationPage.registration_code_required\":\"Please input registration code\",\"LocationRegistrationPage.title\":\"GreenLight Cafe Registration\",\"LocationsNewPage.days_to_remind\":\"What days would you like send survey reminders?\",\"LocationsNewPage.days_to_remind_footer\":\"We send daily reminders to you and your employees to fill out their symptom surveys. We recommend that they fill them out daily. After employees sign up, they can change the time and days they're notified.\",\"LocationsNewPage.time_to_remind\":\"What time would you like send survey reminders?\",\"LocationsNewPage.title\":\"Greenlight Durham\",\"MagicSignInAuthPage.title\":\"Magic Sign In\",\"MagicSignInPage.directions\":\"Enter your email or mobile number, and we'll send you a magic sign in link.\",\"MagicSignInPage.failed_setup\":\"We couldn't set up a magic sign for that info.\",\"MagicSignInPage.remember_me\":\"Remember Me\",\"MagicSignInPage.request_magic_link\":\"Request Magic Link\",\"MagicSignInPage.sign_in_failed\":\"Magic Sign In Failed\",\"MagicSignInPage.sign_in_sent\":\"Magic Sign In Sent\",\"MagicSignInPage.title\":\"Magic Sign In\",\"MagicSignInPage.will_get_email\":\"You should receive an email shortly with a magic sign in link.\",\"MagicSignInPage.will_get_text\":\"You should receive a text shortly with a magic sign in link.\",\"MobileVerificationPage.click_here_to_resend\":\"Click here to try again\",\"MobileVerificationPage.code_not_received\":\"Didn't receive one?\",\"MobileVerificationPage.invalid_phone_number\":\"Invalid Phone Number\",\"MobileVerificationPage.mobile_carrier_label\":\"Mobile Carrier\",\"MobileVerificationPage.mobile_number_label\":\"Mobile Number\",\"MobileVerificationPage.title\":\"Mobile Verification\",\"MobileVerificationPage.verification_code\":\"Verification Code\",\"MobileVerificationPage.verification_code_required\":\"Verification Code is Required\",\"NCStatewideStatsPage.nc_statewide_stats_title\":\"NC COVID-19 Statistics\",\"NotFoundPage.not_found\":\"Requested content not found.\",\"NotFoundPage.sorry\":\"Sorry\",\"NotificationsPage.daily_reminders_title\":\"Daily Reminders\",\"NotificationsPage.days_to_remind\":\"What days would you like to be reminded?\",\"NotificationsPage.how_to_remind\":\"How should we send you reminders?\",\"NotificationsPage.override_location_reminders_footer\":\"Set my own reminder times\",\"NotificationsPage.override_location_reminders_title\":\"Set my own reminder times\",\"NotificationsPage.title\":\"Notifications\",\"OnlineStatus.api_offline\":\"Can't connect to Greenlight.<0>Retry</0>\",\"OnlineStatus.internet_offline\":\"You're internet is disconnected.\",\"OpenSourceLicensesPage.message\":\"Greenlight is built using a lot of free and open source software. As such, we want to give credit to all of the wonderful projects we use. We've tried our best to list them all below.\",\"OpenSourceLicensesPage.title\":\"Open Source Licenses\",\"ReleaseCard.action\":\"See What's New \\uD83C\\uDF89\",\"ReleaseCard.title\":[\"You're updated to v\",[\"0\"],\"!\"],\"ReleaseNotesPage.bug_fixes\":\"Bug Fixes\",\"ReleaseNotesPage.title\":\"Greenlight Release Notes\",\"ReleaseNotesPage.whats_new\":\"What's New\",\"SettingsPage.about\":\"About\",\"SettingsPage.my_children\":\"My Children\",\"SettingsPage.notifications\":\"Notifications\",\"SettingsPage.profile\":\"Profile\",\"SettingsPage.support\":\"Support\",\"SettingsPage.title\":\"Settings\",\"SettingsPage.what_new\":\"Whats New\",\"SignInAuthPage.magic_link_failed\":\"That magic sign in link didn't work. It may have expired.\",\"SignInAuthPage.signing_in\":\"Signing in...\",\"SignInAuthPage.try_again\":\"Try again?\",\"SignInPage.credentials_incorrect\":\"The credentials your provided are incorrect.\",\"SignInPage.forgot_password\":\"Forgot password?\",\"SignInPage.password_missing\":\"Please enter your password.\",\"SignInPage.password_placeholder\":\"Password\",\"SignInPage.remember_me\":\"Remember me\",\"SignInPage.sign_in\":\"Sign In\",\"SignInPage.sign_in_failed\":\"Sign In Failed\",\"SignInPage.signing_you_in\":\"Signing you in...\",\"SignInPage.title\":\"Sign In\",\"SplashPage.choose_language\":\"En Espa\\xF1ol\",\"SplashPage.create_account\":\"Create Account\",\"SplashPage.magic_sign_in\":\"Magic Sign In\",\"SplashPage.register_business\":\"Register Business\",\"SplashPage.register_location\":\"Register Location\",\"SplashPage.sign_in\":\"Sign In\",\"SplashPage.welcome\":\"Welcome to\",\"SupportedBrowserBar.error\":\"Your browser isn't supported. Some things might not work!\",\"SurveyNewPage.already_submitted_message\":\"All surveys have already been submitted for today. Please check back later!\",\"SurveyNewPage.already_submitted_title\":\"Already Submitted\",\"SurveyNewPage.any_symptoms\":\"Do you have any of these symptoms?\",\"SurveyNewPage.any_symptoms_child\":[\"Does\",[\"0\"],\"have any of these symptoms?\"],\"SurveyNewPage.chills\":\"Chills\",\"SurveyNewPage.confirmation\":\"Are you sure?\",\"SurveyNewPage.continue\":[\"Continue to \",[\"0\"]],\"SurveyNewPage.covid_contact\":\"Have you had close contact\\u2014within 6 feet for at least 15 minutes\\u2014with someone diagnosed with COVID-19?\",\"SurveyNewPage.covid_contact_child\":[\"Has \",[\"0\"],\"had close contact\\u2014within 6 feet for at least 15 minutes\\u2014with someone diagnosed with COVID-19?\"],\"SurveyNewPage.covid_contact_title\":\"COVID Contact?\",\"SurveyNewPage.covid_diagnosis\":\"Have you been diagnosed with or tested positive for COVID-19?\",\"SurveyNewPage.covid_diagnosis_child\":[\"Has \",[\"0\"],\"been diagnosed with or tested positive for COVID-19?\"],\"SurveyNewPage.covid_diagnosis_title\":\"COVID Diagnosis?\",\"SurveyNewPage.difficulty_breathing\":\"Difficulty<br />Breathing\",\"SurveyNewPage.fever\":\"Fever\",\"SurveyNewPage.finish\":\"Finish\",\"SurveyNewPage.loss_of_smell\":\"Loss of<br />Taste/Smell\",\"SurveyNewPage.new_cough\":\"New Cough\",\"SurveyNewPage.submission_failed_message\":\"Something went wrong. Maybe someone already submitted?\",\"SurveyNewPage.submission_failed_title\":\"Submission Failed\",\"SurveyNewPage.submitting\":\"Submitting...\",\"SurveyNewPage.title\":[\"Symptom Survey: \",[\"0\"]],\"SurveyThankYouPage.cleared_title\":\"All Clear!\",\"SurveyThankYouPage.more_to_submit_message\":\"You still have more surveys to submit.\",\"SurveyThankYouPage.more_to_submit_title\":\"More to Submit\",\"SurveyThankYouPage.not_all_cleared_heading\":\"Not everyone was cleared.\",\"SurveyThankYouPage.not_all_cleared_message\":\"Your surveys indicates that someone should stay home and seek attention. To schedule an appointment and a test, contact the Duke triage hotline from your home screen.\",\"SurveyThankYouPage.not_all_cleared_title\":\"Connect to Services\",\"SurveyThankYouPage.thank_you\":\"Thanks for submitting your survey! Here's something we hope will make you smile. \\uD83D\\uDE03\",\"UserGreenlightPassPage.not_submitted\":\"Status has not been submitted for today.\",\"UserGreenlightPassPage.pass_title\":\"Greenlight Pass\",\"UserGreenlightPassPage.submitted\":[\"Submitted at \",[\"0\"]],\"Weekday.friday\":\"Friday\",\"Weekday.monday\":\"Monday\",\"Weekday.saturday\":\"Saturday\",\"Weekday.sunday\":\"Sunday\",\"Weekday.thursday\":\"Thursday\",\"Weekday.tuesday\":\"Tuesday\",\"Weekday.wednesday\":\"Wednesday\",\"WelcomeChildPage.continue\":\"Continue\",\"WelcomeChildPage.continue_to_child\":[\"Continue to \",[\"0\"]],\"WelcomeChildPage.doctor_footer\":[\"Who is \",[\"0\"],\"'s primary care doctor?\"],\"WelcomeChildPage.doctor_name_label\":\"Primary Care Doctor\",\"WelcomeChildPage.doctor_name_placeholder\":[[\"0\"],\"'s doctor's name\"],\"WelcomeChildPage.doctor_phone_label\":\"Primary Care Doctor Phone\",\"WelcomeChildPage.doctor_phone_placeholder\":[[\"0\"],\"'s doctor's phone\"],\"WelcomeChildPage.doctor_title\":[[\"0\"],\"'s Primary Care (Optional)\"],\"WelcomeChildPage.find_doctor\":\"Get help finding one\",\"WelcomeChildPage.in_person\":\"In Person\",\"WelcomeChildPage.no_doctor\":\"Don't have a primary care doctor?\",\"WelcomeChildPage.review_child\":[\"Take a moment to review \",[\"0\"],\"'s information.\"],\"WelcomeChildPage.review_child_last\":[\"Finally, take a moment to review \",[\"0\"],\"'s information.\"],\"WelcomeChildPage.review_child_title\":[\"Review \",[\"0\"],\"'s Info\"],\"WelcomeChildPage.review_children\":[\"We've found \",[\"0\"],\"associated with you: \",[\"1\"],\". Let's take a moment to review their information.\"],\"WelcomeChildPage.review_schools\":[\"Review the schools \",[\"0\"],\" will be attending.\"],\"WelcomeChildPage.review_schools_title\":[[\"0\"],\"'s Schools and Places\"],\"WelcomeChildPage.somethings_wrong\":\"Something went wrong\",\"WelcomeChildPage.submitting_changes\":\"Submitting changes...\",\"WelcomeChildPage.update_failed\":\"Update Failed\",\"WelcomePage.account_misconfigured\":\"Your account hasn't been configured properly. Please contact us at help@greenlightready.com.\",\"WelcomePage.fill_children\":[\"Every day you'll need to fill out symptom surveys for your \",[\"0\"],\".\"],\"WelcomePage.fill_for_no_one_error\":\"It looks like your account has not been set up properly. Please contact greenlight at <0>help@greenlightready.com</0>.\",\"WelcomePage.fill_for_self\":\"Every day you'll need to fill out symptom surveys for yourself.\",\"WelcomePage.fill_for_self_and_children\":[\"Every day you'll need to fill out symptom surveys for you and your \",[\"0\"],\".\"],\"WelcomePage.instructions\":[[\"0\"],\"We will not share any data without your permission.\"],\"WelcomePage.terms_and_conditions\":\"By continuing, you accept Greenlight's <0> Terms and Conditions</0>.\",\"WelcomePage.toggle_locale\":\"En Espa\\xF1ol\",\"WelcomePage.welcome\":[\"Hi \",[\"0\"],\"! You've been added by \",[\"1\"],\" to Greenlight's secure COVID-19 monitoring platform.\"],\"WelcomePassword.reveal_password\":\"Reveal Password\",\"WelcomePasswordPage.next_children\":\"Next you'll review your children.\",\"WelcomePasswordPage.next_survey\":\"Next you'll fill out your first survey!\",\"WelcomePasswordPage.password_label\":\"Password\",\"WelcomePasswordPage.password_placeholder\":\"Password\",\"WelcomePasswordPage.security_alt_text\":\"Greenlight gives security the highest importance.\",\"WelcomePasswordPage.set_password\":\"Set Your Password\",\"WelcomePasswordPage.set_password_instructions\":\"You can sign in with your email address or mobile number and this password. It must be at least 8 characters long.\",\"WelcomePasswordPage.short_password\":\"Password is too short.\",\"WelcomePasswordPage.somethings_wrong\":\"Something went wrong\",\"WelcomePasswordPage.submitting_changes\":\"Submitting changes...\",\"WelcomePasswordPage.update_failed\":\"Update Failed\",\"WelcomeReviewPage.email_failed_to_change\":\"Can't be changed at this time.\",\"WelcomeReviewPage.email_label\":\"Email\",\"WelcomeReviewPage.email_placeholder\":\"Your email\",\"WelcomeReviewPage.english\":\"English\",\"WelcomeReviewPage.first_name_label\":\"First Name\",\"WelcomeReviewPage.first_name_placeholder\":\"Your first name\",\"WelcomeReviewPage.info_on_file\":\"Here is the information we have on file for you. Feel free to make any changes.\",\"WelcomeReviewPage.language_label\":\"Language\",\"WelcomeReviewPage.language_placeholder\":\"Please choose...\",\"WelcomeReviewPage.last_name_label\":\"Last Name\",\"WelcomeReviewPage.last_name_placeholder\":\"Your last name\",\"WelcomeReviewPage.next_password\":\"Next you'll set your password.\",\"WelcomeReviewPage.phone_failed_to_change\":\"Can't be changed at this time.\",\"WelcomeReviewPage.phone_label\":\"Mobile Number\",\"WelcomeReviewPage.phone_placeholder\":\"Your mobile number\",\"WelcomeReviewPage.review_info\":\"Review Your Info\",\"WelcomeReviewPage.security_alt_text\":\"Greenlight gives security the highest importance.\",\"WelcomeReviewPage.somethings_wrong\":\"Something went wrong\",\"WelcomeReviewPage.spanish\":\"Espa\\xF1ol\",\"WelcomeReviewPage.submitting_changes\":\"Submitting changes...\",\"WelcomeReviewPage.update_failed\":\"Update Failed\",\"WelcomeSurveyPage.continue\":\"Continue to Surveys\",\"WelcomeSurveyPage.heading\":\"Your First Symptom Check-In\",\"WelcomeSurveyPage.next_screen\":\"On the next screen, you'll fill out your first survey.\",\"WelcomeSurveyPage.thank_you\":\"Thanks for providing that information!\",\"WelcomeSurveyPage.title\":\"Symptom Surveys\",\"WelcomeSurvyePage.instructions\":\"Greenlight helps keep your community safe by monitoring everyone's health. We need your help! You should fill out this survey every day especially.\",\"asdf\":\"Send a care request to a community health worker.\",\"util.good_afternoon\":\"Good afternoon\",\"util.good_evening\":\"Good evening\",\"util.good_morning\":\"Good morning\",\"util.last_word_and\":\", and \",\"util.last_word_or\":\", or \",\"util.two_words_and\":\" and \",\"util.two_words_or\":\" or \",\"util.words_connector\":\", \",\"{0, plural, one {# location} other {# locations}}\":[[\"0\",\"plural\",{one:[\"#\",\" location\"],other:[\"#\",\" locations\"]}]],\"{0, plural, one {child} other {children}}\":[[\"0\",\"plural\",{one:\"child\",other:\"children\"}]]}};","/*eslint-disable*/module.exports={messages:{\"API.greenlight_status.invalid_email\":\"API.greenlight_status.invalid_email\",\"API.sessions.invalid_email\":\"API.sessions.invalid_email\",\"API.sessions.invalid_password\":\"API.sessions.invalid_password\",\"API.sessions.invalid_phone\":\"API.sessions.invalid_phone\",\"AboutPage.greenlight_version\":\"AboutPage.greenlight_version\",\"AboutPage.open_source_licenses\":\"AboutPage.open_source_licenses\",\"AboutPage.privacy_policy\":\"AboutPage.privacy_policy\",\"AboutPage.terms_of_service\":\"AboutPage.terms_of_service\",\"AboutPage.title\":\"AboutPage.title\",\"AboutPage.visit_our_site\":\"AboutPage.visit_our_site\",\"AboutPage.visit_the_blog\":\"AboutPage.visit_the_blog\",\"Common.back\":\"Common.back\",\"Common.back_home\":\"Common.back_home\",\"Common.close\":\"Common.close\",\"Common.continue\":\"Common.continue\",\"Common.hide\":\"Common.hide\",\"Common.register\":\"Common.register\",\"Common.send_code\":\"Common.send_code\",\"Common.sign_out\":\"Common.sign_out\",\"Common.somethings_wrong\":\"Common.somethings_wrong\",\"Common.submission_failed\":\"Common.submission_failed\",\"Common.submit\":\"Common.submit\",\"Common.submitting\":\"Common.submitting\",\"Common.toggle_locale\":\"Common.toggle_locale\",\"Common.version\":\"Common.version\",\"DailyReminder.disable_all\":\"DailyReminder.disable_all\",\"DailyReminder.send_via_email\":\"DailyReminder.send_via_email\",\"DailyReminder.send_via_text\":\"DailyReminder.send_via_text\",\"DashboardPage.affafa\":\"DashboardPage.affafa\",\"DashboardPage.asfff\":\"DashboardPage.asfff\",\"DashboardPage.child_care_footer\":\"Referencias de cuidado infantil de 8am a 5pm lunes a viernes\",\"DashboardPage.child_care_title\":\"Cuidado Infantil\",\"DashboardPage.duke_testing_footer\":\"DashboardPage.duke_testing_footer\",\"DashboardPage.duke_testing_title\":\"DashboardPage.duke_testing_title\",\"DashboardPage.ffasfa\":\"DashboardPage.ffasfa\",\"DashboardPage.go_to_check_in\":\"DashboardPage.go_to_check_in\",\"DashboardPage.greenlight_pass\":\"Pase Greenlight\",\"DashboardPage.needs_to_submit\":\"DashboardPage.needs_to_submit\",\"DashboardPage.needs_to_submit_for_tomorrow\":\"DashboardPage.needs_to_submit_for_tomorrow\",\"DashboardPage.resources_title\":\"DashboardPage.resources_title\",\"DashboardPage.submit_check_in\":\"DashboardPage.submit_check_in\",\"DashboardPage.support_footer\":\"DashboardPage.support_footer\",\"DashboardPage.support_footerss\":\"DashboardPage.support_footerss\",\"DashboardPage.support_title\":\"DashboardPage.support_title\",\"DashboardPage.support_titless\":\"DashboardPage.support_titless\",\"DashboardPage.testing_footer\":\"Sitios de prueba cerca de ti\",\"DashboardPage.testing_title\":\"Buscar Pruebas\",\"DashboardPage.triage_footer\":\"Llama de 7:00 a 23:00 cualquier d\\xEDa\",\"DashboardPage.triage_title\":\"Llama a la ayuda de COVD-19\",\"DashboardPage.your_children\":\"DashboardPage.your_children\",\"DashboardPage.your_family\":\"DashboardPage.your_family\",\"DatedYesNoButton.date_missing\":\"DatedYesNoButton.date_missing\",\"DatedYesNoButton.no\":\"DatedYesNoButton.no\",\"DatedYesNoButton.select_date\":\"Selecciona una fecha\",\"DatedYesNoButton.yes\":\"S\\xED\",\"DatedYesNoButton.yes_no_missing\":\"Elija s\\xED o no\",\"DukeScheduleTestPage.instructions1\":\"Desde las 8 de la ma\\xF1ana hasta las 5 de la tarde, llama al n\\xFAmero que aparece a continuaci\\xF3n para programar una prueba. Marque 2 cuando escuche la voz automatizada para comunicarse con la l\\xEDnea del paciente.\",\"DukeScheduleTestPage.instructions2\":\"Llame al <0>919-385-0429</0>, luego marque 2\",\"DukeScheduleTestPage.instructions3\":\"D\\xEDgale a quienquiera que hable que necesita programar una prueba y que usa la aplicaci\\xF3n Greenlight.\",\"DukeScheduleTestPage.instructions4\":\"Debe tener una cita para una prueba dentro de las 24 horas y recibir un resultado al d\\xEDa siguiente. Si tiene s\\xEDntomas, es posible que deba programar una visita virtual a trav\\xE9s de ese n\\xFAmero antes de la prueba.\",\"DukeScheduleTestPage.resources_title\":\"M\\xE1s recursos:\",\"DukeScheduleTestPage.steps_after_test\":\"Pasos a seguir despu\\xE9s de una prueba\",\"DukeScheduleTestPage.support\":\"\\xBFA\\xFAn necesitas ayuda? P\\xF3ngase en contacto con el soporte de Greenlight <0>help@greenlightready.com</0>\",\"DukeScheduleTestPage.supporting_child\":\"Apoyar a su hijo durante la prueba de frotis nasal COVID-19\",\"DukeScheduleTestPage.title\":\"Programar una prueba\",\"EditUserPage.cant_be_changed\":\"EditUserPage.cant_be_changed\",\"EditUserPage.date_of_birth_label\":\"EditUserPage.date_of_birth_label\",\"EditUserPage.email_label\":\"EditUserPage.email_label\",\"EditUserPage.first_name_label\":\"EditUserPage.first_name_label\",\"EditUserPage.first_name_missing\":\"EditUserPage.first_name_missing\",\"EditUserPage.invalid_zip_code\":\"EditUserPage.invalid_zip_code\",\"EditUserPage.last_name_label\":\"EditUserPage.last_name_label\",\"EditUserPage.last_name_missing\":\"EditUserPage.last_name_missing\",\"EditUserPage.mobile_number_label\":\"EditUserPage.mobile_number_label\",\"EditUserPage.need_help_finding_physician\":\"EditUserPage.need_help_finding_physician\",\"EditUserPage.primary_care_physician_name_label\":\"EditUserPage.primary_care_physician_name_label\",\"EditUserPage.primary_care_physician_phone_number_label\":\"EditUserPage.primary_care_physician_phone_number_label\",\"EditUserPage.title\":\"EditUserPage.title\",\"EditUserPage.zip_code_label\":\"EditUserPage.zip_code_label\",\"EmailOrPhoneListInput.email_or_phone_invalid\":\"Proporciona un tel\\xE9fono o correo electr\\xF3nico v\\xE1lido\",\"EmailOrPhoneListInput.email_or_phone_missing\":\"Proporciona un tel\\xE9fono o correo electr\\xF3nico\",\"EmailOrPhoneListInput.email_or_phone_placeholder\":\"Correo electr\\xF3nico o n\\xFAmero de tel\\xE9fono m\\xF3vil\",\"ErrorBoundary.error_message\":\"ErrorBoundary.error_message\",\"ErrorBoundary.return_home\":\"ErrorBoundary.return_home\",\"ErrorBoundary.something_went_wrong\":\"ErrorBoundary.something_went_wrong\",\"ForgotPasswordPage.instructions\":\"ForgotPasswordPage.instructions\",\"Form.error_blank\":\"Form.error_blank\",\"Form.error_invalid\":\"Form.error_invalid\",\"Form.error_invalid2\":\"Form.error_invalid2\",\"Forms.email\":\"Forms.email\",\"Forms.first_name\":\"Forms.first_name\",\"Forms.last_name\":\"Forms.last_name\",\"Forms.location_id\":\"Forms.location_id\",\"Forms.location_name\":\"Forms.location_name\",\"Forms.mobile_number\":\"Forms.mobile_number\",\"Forms.password\":\"Forms.password\",\"Forms.zip_code\":\"Forms.zip_code\",\"GreenlightStatus.absent\":\"Ausente\",\"GreenlightStatus.cleared\":\"Aprobado\",\"GreenlightStatus.not_submitted\":\"No Enviado\",\"GreenlightStatus.pending\":\"Pendiente\",\"GreenlightStatus.recovery\":\"Recuperaci\\xF3n\",\"LoadingPage.message\":\"LoadingPage.message\",\"LoadingPage.title\":\"LoadingPage.title\",\"Location.register\":\"Location.register\",\"LocationForm.create_location\":\"LocationForm.create_location\",\"LocationRegistrationPage.email\":\"LocationRegistrationPage.email\",\"LocationRegistrationPage.first_name\":\"LocationRegistrationPage.first_name\",\"LocationRegistrationPage.first_name_required\":\"LocationRegistrationPage.first_name_required\",\"LocationRegistrationPage.invalid_email\":\"LocationRegistrationPage.invalid_email\",\"LocationRegistrationPage.last_name\":\"LocationRegistrationPage.last_name\",\"LocationRegistrationPage.last_name_required\":\"LocationRegistrationPage.last_name_required\",\"LocationRegistrationPage.registration_code\":\"LocationRegistrationPage.registration_code\",\"LocationRegistrationPage.registration_code_required\":\"LocationRegistrationPage.registration_code_required\",\"LocationRegistrationPage.title\":\"LocationRegistrationPage.title\",\"LocationsNewPage.days_to_remind\":\"LocationsNewPage.days_to_remind\",\"LocationsNewPage.days_to_remind_footer\":\"LocationsNewPage.days_to_remind_footer\",\"LocationsNewPage.time_to_remind\":\"LocationsNewPage.time_to_remind\",\"LocationsNewPage.title\":\"LocationsNewPage.title\",\"MagicSignInAuthPage.title\":\"Inicio con M\\xE1gico\",\"MagicSignInPage.directions\":\"MagicSignInPage.directions\",\"MagicSignInPage.failed_setup\":\"No pudimos enviar un enlace m\\xE1gico para esa informaci\\xF3n.\",\"MagicSignInPage.remember_me\":\"Recu\\xE9rdame\",\"MagicSignInPage.request_magic_link\":\"MagicSignInPage.request_magic_link\",\"MagicSignInPage.sign_in_failed\":\"Error en el inicio con m\\xE1gico\",\"MagicSignInPage.sign_in_sent\":\"Enlace m\\xE1gico enviado\",\"MagicSignInPage.title\":\"Inicio con M\\xE1gico\",\"MagicSignInPage.will_get_email\":\"Deber\\xEDa recibir un correo electr\\xF3nico con un enlace m\\xE1gico para iniciar sesi\\xF3n\",\"MagicSignInPage.will_get_text\":\"Deber\\xEDa recibir un mensaje de texto con un enlace m\\xE1gico para inciiar sesi\\xF3n.\",\"MobileVerificationPage.click_here_to_resend\":\"MobileVerificationPage.click_here_to_resend\",\"MobileVerificationPage.code_not_received\":\"MobileVerificationPage.code_not_received\",\"MobileVerificationPage.invalid_phone_number\":\"MobileVerificationPage.invalid_phone_number\",\"MobileVerificationPage.mobile_carrier_label\":\"MobileVerificationPage.mobile_carrier_label\",\"MobileVerificationPage.mobile_number_label\":\"MobileVerificationPage.mobile_number_label\",\"MobileVerificationPage.title\":\"MobileVerificationPage.title\",\"MobileVerificationPage.verification_code\":\"MobileVerificationPage.verification_code\",\"MobileVerificationPage.verification_code_required\":\"MobileVerificationPage.verification_code_required\",\"NCStatewideStatsPage.nc_statewide_stats_title\":\"NCStatewideStatsPage.nc_statewide_stats_title\",\"NotFoundPage.not_found\":\"NotFoundPage.not_found\",\"NotFoundPage.sorry\":\"NotFoundPage.sorry\",\"NotificationsPage.daily_reminders_title\":\"NotificationsPage.daily_reminders_title\",\"NotificationsPage.days_to_remind\":\"NotificationsPage.days_to_remind\",\"NotificationsPage.how_to_remind\":\"NotificationsPage.how_to_remind\",\"NotificationsPage.override_location_reminders_footer\":\"NotificationsPage.override_location_reminders_footer\",\"NotificationsPage.override_location_reminders_title\":\"NotificationsPage.override_location_reminders_title\",\"NotificationsPage.title\":\"NotificationsPage.title\",\"OnlineStatus.api_offline\":\"OnlineStatus.api_offline\",\"OnlineStatus.internet_offline\":\"OnlineStatus.internet_offline\",\"OpenSourceLicensesPage.message\":\"OpenSourceLicensesPage.message\",\"OpenSourceLicensesPage.title\":\"OpenSourceLicensesPage.title\",\"ReleaseCard.action\":\"ReleaseCard.action\",\"ReleaseCard.title\":\"ReleaseCard.title\",\"ReleaseNotesPage.bug_fixes\":\"ReleaseNotesPage.bug_fixes\",\"ReleaseNotesPage.title\":\"ReleaseNotesPage.title\",\"ReleaseNotesPage.whats_new\":\"ReleaseNotesPage.whats_new\",\"SettingsPage.about\":\"SettingsPage.about\",\"SettingsPage.my_children\":\"SettingsPage.my_children\",\"SettingsPage.notifications\":\"SettingsPage.notifications\",\"SettingsPage.profile\":\"SettingsPage.profile\",\"SettingsPage.support\":\"SettingsPage.support\",\"SettingsPage.title\":\"SettingsPage.title\",\"SettingsPage.what_new\":\"SettingsPage.what_new\",\"SignInAuthPage.magic_link_failed\":\"SignInAuthPage.magic_link_failed\",\"SignInAuthPage.signing_in\":\"SignInAuthPage.signing_in\",\"SignInAuthPage.try_again\":\"SignInAuthPage.try_again\",\"SignInPage.credentials_incorrect\":\"Las credenciales que proporcionaste son incorrectas\",\"SignInPage.forgot_password\":\"SignInPage.forgot_password\",\"SignInPage.password_missing\":\"Por favor ingrese su contrase\\xF1a.\",\"SignInPage.password_placeholder\":\"Contrase\\xF1a\",\"SignInPage.remember_me\":\"Recu\\xE9rdame\",\"SignInPage.sign_in\":\"SignInPage.sign_in\",\"SignInPage.sign_in_failed\":\"Error al iniciar sesi\\xF3n\",\"SignInPage.signing_you_in\":\"Iniciando sesi\\xF3n...\",\"SignInPage.title\":\"Iniciar sesi\\xF3n\",\"SplashPage.choose_language\":\"SplashPage.choose_language\",\"SplashPage.create_account\":\"SplashPage.create_account\",\"SplashPage.magic_sign_in\":\"SplashPage.magic_sign_in\",\"SplashPage.register_business\":\"SplashPage.register_business\",\"SplashPage.register_location\":\"SplashPage.register_location\",\"SplashPage.sign_in\":\"SplashPage.sign_in\",\"SplashPage.welcome\":\"SplashPage.welcome\",\"SupportedBrowserBar.error\":\"SupportedBrowserBar.error\",\"SurveyNewPage.already_submitted_message\":\"SurveyNewPage.already_submitted_message\",\"SurveyNewPage.already_submitted_title\":\"SurveyNewPage.already_submitted_title\",\"SurveyNewPage.any_symptoms\":\"SurveyNewPage.any_symptoms\",\"SurveyNewPage.any_symptoms_child\":\"SurveyNewPage.any_symptoms_child\",\"SurveyNewPage.chills\":\"Escalofr\\xEDos\",\"SurveyNewPage.confirmation\":\"SurveyNewPage.confirmation\",\"SurveyNewPage.continue\":\"SurveyNewPage.continue\",\"SurveyNewPage.covid_contact\":\"SurveyNewPage.covid_contact\",\"SurveyNewPage.covid_contact_child\":\"SurveyNewPage.covid_contact_child\",\"SurveyNewPage.covid_contact_title\":\"SurveyNewPage.covid_contact_title\",\"SurveyNewPage.covid_diagnosis\":\"SurveyNewPage.covid_diagnosis\",\"SurveyNewPage.covid_diagnosis_child\":\"SurveyNewPage.covid_diagnosis_child\",\"SurveyNewPage.covid_diagnosis_title\":\"SurveyNewPage.covid_diagnosis_title\",\"SurveyNewPage.difficulty_breathing\":\"Respiraci\\xF3n<br />dificultosa\",\"SurveyNewPage.fever\":\"Fiebre\",\"SurveyNewPage.finish\":\"SurveyNewPage.finish\",\"SurveyNewPage.loss_of_smell\":\"P\\xE9rdida del<br />gusto/olfato\",\"SurveyNewPage.new_cough\":\"Nueva tos\",\"SurveyNewPage.submission_failed_message\":\"Algo sali\\xF3 mal. \\xBFQuiz\\xE1s alguien ya envi\\xF3?\",\"SurveyNewPage.submission_failed_title\":\"Error de env\\xEDo\",\"SurveyNewPage.submitting\":\"Enviando...\",\"SurveyNewPage.title\":\"SurveyNewPage.title\",\"SurveyThankYouPage.cleared_title\":\"\\xA1Aprobado!\",\"SurveyThankYouPage.more_to_submit_message\":\"SurveyThankYouPage.more_to_submit_message\",\"SurveyThankYouPage.more_to_submit_title\":\"SurveyThankYouPage.more_to_submit_title\",\"SurveyThankYouPage.not_all_cleared_heading\":\"SurveyThankYouPage.not_all_cleared_heading\",\"SurveyThankYouPage.not_all_cleared_message\":\"SurveyThankYouPage.not_all_cleared_message\",\"SurveyThankYouPage.not_all_cleared_title\":\"SurveyThankYouPage.not_all_cleared_title\",\"SurveyThankYouPage.thank_you\":\"SurveyThankYouPage.thank_you\",\"UserGreenlightPassPage.not_submitted\":\"UserGreenlightPassPage.not_submitted\",\"UserGreenlightPassPage.pass_title\":\"Pase Greenlight\",\"UserGreenlightPassPage.submitted\":\"UserGreenlightPassPage.submitted\",\"Weekday.friday\":\"Weekday.friday\",\"Weekday.monday\":\"Weekday.monday\",\"Weekday.saturday\":\"Weekday.saturday\",\"Weekday.sunday\":\"Weekday.sunday\",\"Weekday.thursday\":\"Weekday.thursday\",\"Weekday.tuesday\":\"Weekday.tuesday\",\"Weekday.wednesday\":\"Weekday.wednesday\",\"WelcomeChildPage.continue\":\"WelcomeChildPage.continue\",\"WelcomeChildPage.continue_to_child\":\"WelcomeChildPage.continue_to_child\",\"WelcomeChildPage.doctor_footer\":[\"\\xBFQui\\xE9n es el m\\xE9dico de atenci\\xF3n primaria de \",[\"0\"],\"?\"],\"WelcomeChildPage.doctor_name_label\":\"M\\xE9dico de atenci\\xF3n primaria\",\"WelcomeChildPage.doctor_name_placeholder\":[\"Nombre del m\\xE9dico de \",[\"0\"]],\"WelcomeChildPage.doctor_phone_label\":\"Tel\\xE9fono del m\\xE9dico de atenci\\xF3n primaria\",\"WelcomeChildPage.doctor_phone_placeholder\":[\"Tel\\xE9fono del m\\xE9dico de \",[\"0\"]],\"WelcomeChildPage.doctor_title\":\"WelcomeChildPage.doctor_title\",\"WelcomeChildPage.find_doctor\":\"Obt\\xE9n ayuda para encontrar uno\",\"WelcomeChildPage.in_person\":\"En persona\",\"WelcomeChildPage.no_doctor\":\"\\xBFNo tiene un m\\xE9dico de atenci\\xF3n primaria?\",\"WelcomeChildPage.review_child\":\"WelcomeChildPage.review_child\",\"WelcomeChildPage.review_child_last\":\"WelcomeChildPage.review_child_last\",\"WelcomeChildPage.review_child_title\":[\"Revisar la informac\\xEDon de \",[\"0\"]],\"WelcomeChildPage.review_children\":\"WelcomeChildPage.review_children\",\"WelcomeChildPage.review_schools\":[\"Revisa las escuelas a las que asistir\\xE1 \",[\"0\"],\".\"],\"WelcomeChildPage.review_schools_title\":\"WelcomeChildPage.review_schools_title\",\"WelcomeChildPage.somethings_wrong\":\"Algo sali\\xF3 mal\",\"WelcomeChildPage.submitting_changes\":\"Enviando cambios...\",\"WelcomeChildPage.update_failed\":\"Error al actualizar\",\"WelcomePage.account_misconfigured\":\"WelcomePage.account_misconfigured\",\"WelcomePage.fill_children\":\"WelcomePage.fill_children\",\"WelcomePage.fill_for_no_one_error\":\"WelcomePage.fill_for_no_one_error\",\"WelcomePage.fill_for_self\":\"WelcomePage.fill_for_self\",\"WelcomePage.fill_for_self_and_children\":\"WelcomePage.fill_for_self_and_children\",\"WelcomePage.instructions\":\"WelcomePage.instructions\",\"WelcomePage.terms_and_conditions\":\"WelcomePage.terms_and_conditions\",\"WelcomePage.toggle_locale\":\"WelcomePage.toggle_locale\",\"WelcomePage.welcome\":\"WelcomePage.welcome\",\"WelcomePassword.reveal_password\":\"WelcomePassword.reveal_password\",\"WelcomePasswordPage.next_children\":\"WelcomePasswordPage.next_children\",\"WelcomePasswordPage.next_survey\":\"WelcomePasswordPage.next_survey\",\"WelcomePasswordPage.password_label\":\"Contrase\\xF1a\",\"WelcomePasswordPage.password_placeholder\":\"Contrase\\xF1a\",\"WelcomePasswordPage.security_alt_text\":\"Greenlight otorga la m\\xE1xima importancia a la seguridad\",\"WelcomePasswordPage.set_password\":\"Establezca tu contrase\\xF1a\",\"WelcomePasswordPage.set_password_instructions\":\"WelcomePasswordPage.set_password_instructions\",\"WelcomePasswordPage.short_password\":\"La contrase\\xF1a es demasiado corta\",\"WelcomePasswordPage.somethings_wrong\":\"Algo sali\\xF3 mal\",\"WelcomePasswordPage.submitting_changes\":\"Enviando cambios ...\",\"WelcomePasswordPage.update_failed\":\"Actualizaci\\xF3n fallida\",\"WelcomeReviewPage.email_failed_to_change\":\"No se puede cambiar en este momento\",\"WelcomeReviewPage.email_label\":\"Correo electr\\xF3nico\",\"WelcomeReviewPage.email_placeholder\":\"Tu correo electr\\xF3nico\",\"WelcomeReviewPage.english\":\"English\",\"WelcomeReviewPage.first_name_label\":\"Nombre\",\"WelcomeReviewPage.first_name_placeholder\":\"Tu nombre\",\"WelcomeReviewPage.info_on_file\":\"WelcomeReviewPage.info_on_file\",\"WelcomeReviewPage.language_label\":\"Idioma\",\"WelcomeReviewPage.language_placeholder\":\"Elija...\",\"WelcomeReviewPage.last_name_label\":\"Apellido\",\"WelcomeReviewPage.last_name_placeholder\":\"Tu apellido\",\"WelcomeReviewPage.next_password\":\"WelcomeReviewPage.next_password\",\"WelcomeReviewPage.phone_failed_to_change\":\"No se puede cambiar en este momento\",\"WelcomeReviewPage.phone_label\":\"N\\xFAmero de m\\xF3vil\",\"WelcomeReviewPage.phone_placeholder\":\"Tu n\\xFAmero de m\\xF3vil\",\"WelcomeReviewPage.review_info\":\"Revisa tu informaci\\xF3n\",\"WelcomeReviewPage.security_alt_text\":\"Greenlight otorga la m\\xE1xima importancia a la seguridad\",\"WelcomeReviewPage.somethings_wrong\":\"Algo sali\\xF3 mal\",\"WelcomeReviewPage.spanish\":\"Espa\\xF1ol\",\"WelcomeReviewPage.submitting_changes\":\"Enviando cambios ...\",\"WelcomeReviewPage.update_failed\":\"Error al actualizar\",\"WelcomeSurveyPage.continue\":\"WelcomeSurveyPage.continue\",\"WelcomeSurveyPage.heading\":\"WelcomeSurveyPage.heading\",\"WelcomeSurveyPage.next_screen\":\"WelcomeSurveyPage.next_screen\",\"WelcomeSurveyPage.thank_you\":\"WelcomeSurveyPage.thank_you\",\"WelcomeSurveyPage.title\":\"WelcomeSurveyPage.title\",\"WelcomeSurvyePage.instructions\":\"WelcomeSurvyePage.instructions\",\"asdf\":\"asdf\",\"util.good_afternoon\":\"Buenas tardes\",\"util.good_evening\":\"Buenas noches\",\"util.good_morning\":\"Buenos d\\xEDas\",\"util.last_word_and\":\" y \",\"util.last_word_or\":\" o \",\"util.two_words_and\":\" y \",\"util.two_words_or\":\" o \",\"util.words_connector\":\", \",\"{0, plural, one {# location} other {# locations}}\":[[\"0\",\"plural\",{one:[\"#\",\" location\"],other:[\"#\",\" locations\"]}]],\"{0, plural, one {child} other {children}}\":[[\"0\",\"plural\",{one:\"child\",other:\"children\"}]]}};","var map = {\n\t\"./01.json\": 732,\n\t\"./02.json\": 733,\n\t\"./04.json\": 734,\n\t\"./05.json\": 735,\n\t\"./06.json\": 736,\n\t\"./08.json\": 737,\n\t\"./09.json\": 738,\n\t\"./10.json\": 739,\n\t\"./12.json\": 740,\n\t\"./13.json\": 741,\n\t\"./15.json\": 742,\n\t\"./16.json\": 743,\n\t\"./17.json\": 744,\n\t\"./18.json\": 745,\n\t\"./19.json\": 746,\n\t\"./20.json\": 747,\n\t\"./21.json\": 748,\n\t\"./22.json\": 749,\n\t\"./23.json\": 750,\n\t\"./24.json\": 751,\n\t\"./25.json\": 752,\n\t\"./26.json\": 753,\n\t\"./27.json\": 754,\n\t\"./28.json\": 755,\n\t\"./29.json\": 756,\n\t\"./30.json\": 757,\n\t\"./31.json\": 758,\n\t\"./32.json\": 759,\n\t\"./33.json\": 760,\n\t\"./34.json\": 761,\n\t\"./35.json\": 762,\n\t\"./36.json\": 763,\n\t\"./37.json\": 764,\n\t\"./38.json\": 765,\n\t\"./39.json\": 766,\n\t\"./40.json\": 767,\n\t\"./41.json\": 768,\n\t\"./42.json\": 769,\n\t\"./44.json\": 770,\n\t\"./45.json\": 771,\n\t\"./46.json\": 772,\n\t\"./47.json\": 773,\n\t\"./48.json\": 774,\n\t\"./49.json\": 775,\n\t\"./50.json\": 776,\n\t\"./51.json\": 777,\n\t\"./53.json\": 778,\n\t\"./54.json\": 779,\n\t\"./55.json\": 780,\n\t\"./56.json\": 781,\n\t\"./60.json\": 782,\n\t\"./66.json\": 783,\n\t\"./69.json\": 784,\n\t\"./72.json\": 785,\n\t\"./78.json\": 786\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 731;","import Honeybadger from 'honeybadger-js'\n\nif (process.env.REACT_APP_HONEYBADGER_KEY) {\n  Honeybadger.configure({\n    apiKey: process.env.REACT_APP_HONEYBADGER_KEY,\n  })\n}\n\nexport default Honeybadger\n","// See https://create-react-app.dev/docs/adding-custom-environment-variables/\n// for details.\n\nfunction required(key: string, backup?: string): string {\n  const value = process.env[key] || backup || null\n  if (value === null) {\n    throw new Error('Missing required environment variable')\n  }\n\n  return value\n}\n\nconst env = {\n  isDevelopment(): boolean {\n    return process.env.NODE_ENV !== 'production'\n  },\n  isProduction(): boolean {\n    return process.env.NODE_ENV === 'production'\n  },\n  API_URL: (() => {\n    const herokuAppName = process.env.REACT_APP_HEROKU_APP_NAME\n    if (herokuAppName) {\n      return `https://${herokuAppName}.herokuapp.com/api`\n    }\n    return required('REACT_APP_API_URL')\n  })(),\n}\n\nexport default env\n","import env from 'src/env'\n\nif (env.isDevelopment()) {\n  import('reactn-devtools').then((tools) => tools.default())\n}\n","/* eslint-disable @typescript-eslint/ban-types */\n\nimport 'reflect-metadata'\nimport { DateTime } from 'luxon'\nimport { Dict, EntityId, Record } from '../types'\n\n//\n// Attribute Data Types\n//\n\ninterface DataType {\n  name: string\n  serialize?: Function\n  deserialize?: Function\n}\n\nexport const STRING: DataType = {\n  name: 'string',\n}\n\nexport const NUMBER: DataType = {\n  name: 'number',\n}\n\nexport const BOOLEAN: DataType = {\n  name: 'boolean',\n}\n\nexport const DATE: DataType = {\n  name: 'date',\n  serialize: (x: DateTime) => x.toFormat('yyyy-MM-dd'),\n  deserialize: (x: string) => DateTime.fromISO(x),\n}\n\nexport const DATETIME: DataType = {\n  name: 'date-time',\n  serialize: (x: DateTime) => x.toFormat('yyyy-MM-dd'),\n  deserialize: (x: string) => DateTime.fromISO(x),\n}\n\n//\n// Attributes\n//\n\ninterface AttributeDefinition {\n  source?: string | string[]\n  transform?: (x: any) => any\n  // e.g. User, [User]\n  type: DataType\n}\n\nexport const ATTR_METADATA_KEY = Symbol('gl:attr')\n\nexport function attribute(definiton: AttributeDefinition) {\n  const attrDefinition = definiton || {}\n  return (target: Object, propertyKey: string) => {\n    // `target` is the object/class where the property key resides\n\n    // Pull the existing metadata or create an empty object\n    const allMetadata: { [propertyKey: string]: AttributeDefinition } = Reflect.getMetadata(ATTR_METADATA_KEY, target) || {}\n\n    // Ensure allMetadata has propertyKey\n    allMetadata[propertyKey] = allMetadata[propertyKey] || {}\n    const currAttributes = allMetadata[propertyKey]\n\n    Object.keys(attrDefinition).forEach((key) => {\n      (currAttributes as any)[key] = (attrDefinition as any)[key]\n    })\n    // Update the metadata\n    Reflect.defineMetadata(ATTR_METADATA_KEY, allMetadata, target)\n  }\n}\n\nfunction getAttributes(model: typeof Model): { [k: string]: AttributeDefinition } {\n  return Reflect.getMetadata(ATTR_METADATA_KEY, model.prototype)\n}\n\n//\n// Relationships\n//\n\ninterface RelationshipDefinition {\n  model: string\n  type: 'hasOne' | 'hasMany'\n}\n\nexport const REL_METADATA_KEY = Symbol('gl:rel')\n\nexport function relationship(definiton: RelationshipDefinition) {\n  const relDefinition = definiton || {}\n  return (target: Object, propertyKey: string) => {\n    // `target` is the object/class where the property key resides\n    // `propertyKey` is the property\n\n    // Pull the existing metadata or create an empty object\n    const allMetadata: { [propertyKey: string]: RelationshipDefinition } = Reflect.getMetadata(REL_METADATA_KEY, target) || {}\n\n    // Ensure allMetadata has propertyKey\n    allMetadata[propertyKey] = allMetadata[propertyKey] || {}\n    const currAttributes = allMetadata[propertyKey]\n\n    Object.keys(relDefinition).forEach((key) => {\n      (currAttributes as any)[key] = (relDefinition as any)[key]\n    })\n    // Update the metadata\n    Reflect.defineMetadata(REL_METADATA_KEY, allMetadata, target)\n  }\n}\n\nexport function hasOne(model: string, definition?: Partial<RelationshipDefinition>) {\n  return relationship({ ...definition, model, type: 'hasOne' })\n}\n\nexport function hasMany(model: string, definition?: Partial<RelationshipDefinition>) {\n  return relationship({ ...definition, model, type: 'hasMany' })\n}\n\nfunction getRelationships(model: typeof Model): { [k: string]: AttributeDefinition } {\n  return Reflect.getMetadata(REL_METADATA_KEY, model.prototype)\n}\n\n//\n// Models\n//\n\nclass Registry {\n  models: Dict<typeof Model>\n\n  constructor() {\n    this.models = {}\n  }\n\n  register(...models: (typeof Model)[]) {\n    models.forEach((m) => {\n      this.models[lowerCaseFirstLetter(m.modelName)] = m\n    })\n  }\n\n  modelFor(name: string) {\n    return this.models[lowerCaseFirstLetter(name)] || null\n  }\n}\n\nexport const ModelRegistry = new Registry()\n\nexport class Model {\n  /** The name of this model */\n  static modelName: string\n\n  /** All entities must have an id that's a string */\n  id = ''\n\n  /** Raw request data */\n  _data: any\n\n  /** Raw relationship data */\n  _relationships: any\n\n  /** Anything that was included while populatiing the entity */\n  _included: string[] = []\n\n  // eslint-disable-next-line\n  constructor(_data?: any) {}\n\n  @attribute({ type: DATETIME })\n  createdAt: DateTime = DateTime.fromISO('')\n\n  @attribute({ type: DATETIME })\n  updatedAt: DateTime = DateTime.fromISO('')\n\n  @attribute({ type: DATETIME })\n  deletedAt: DateTime = DateTime.fromISO('')\n\n  uuid(): EntityId {\n    return `${this.resourceType()}-${this.id}`\n  }\n\n  resourceType() {\n    const { constructor } = Object.getPrototypeOf(this)\n    return constructor.resourceType || lowerCaseFirstLetter(constructor.modelName)\n  }\n\n  attributeMetadata() {\n    return getAttributes(Object.getPrototypeOf(this).constructor)\n  }\n\n  hasRelationship(name: string) {\n    return this.relationshipMetadata()[name] !== undefined\n  }\n\n  relationshipMetadata() {\n    return getRelationships(Object.getPrototypeOf(this).constructor)\n  }\n\n  serialize() {\n    const attributes: any = {}\n\n    for (const [property, value] of Object.entries(this.attributeMetadata())) {\n      attributes[property] = value.type.serialize\n        ? value.type.serialize((this as any)[property])\n        : (this as any)[property]\n    }\n\n    return {\n      id: this.id,\n      type: (Object.getPrototypeOf(this) as Model).resourceType(),\n      attributes,\n    }\n  }\n}\n\n//\n// Deserialization\n//\n\n/**\n * Call this function inside of the constructor for an entity to deserlaize\n * a data payload and assign it to the entities attributes.\n *\n * @param record\n * @param data\n *\n * @example\n *\n *   class User extends Model {\n *     constructor(data?: any) {\n *       super()\n *       initialize(this, data)\n *     }\n *   }\n */\nexport function initialize(entity: Model, data: any) {\n  _deserialize(Object.getPrototypeOf(entity).constructor, data, entity)\n}\n\nexport function deserializeJSONAPI<T extends Model>(record: Record<T>): T {\n  const model = ModelRegistry.modelFor(record.type)\n  if (model === null) {\n    throw new Error(`No model found for type ${record.type}`)\n  }\n\n  const data = {\n    id: record.id,\n    ...record.attributes,\n  }\n\n  return _deserialize(model, data) as T\n}\n\nfunction _deserialize(model: typeof Model, data: any, this_?: Model) {\n  const record = this_ || new model()\n  if (!data) return record\n  record._data = data\n\n  const attrMeta = record.attributeMetadata()\n  const relMeta = record.relationshipMetadata()\n\n  for (const [property, value] of Object.entries(data)) {\n    if (property === 'id') {\n      record.id = value as string\n      continue\n    }\n\n    if (property[0] === '_') {\n      continue\n    }\n\n    // Cast and assign attributes\n    if (attrMeta && property in attrMeta) {\n      const attrDef = ((attrMeta as any)[property] as AttributeDefinition);\n      (record as any)[property] = attrDef.type.deserialize ? attrDef.type.deserialize(value) : value\n      continue\n    }\n\n    // Cast and assign relationships\n    if (relMeta && property in relMeta) {\n      const relDef = ((relMeta as any)[property] as RelationshipDefinition)\n      if (relDef.type === 'hasMany') {\n        const model = ModelRegistry.modelFor(relDef.model)\n        if (model === null) {\n          throw new Error(`Couldn't find model for ${relDef.model}`)\n        }\n        if (!Array.isArray(value)) {\n          throw new Error(`Expected Array for hasMany got ${debug(value)}`)\n        }\n        (record as any)[property] = value.map((v) => new model(v))\n      } else {\n        const { model } = relDef\n        if (!model) {\n          throw new Error(`Couldn't find model for ${relDef.model}`)\n        }\n        if (Array.isArray(value)) {\n          throw new Error(`Expected single object for hasOne got ${debug(value)}`)\n        }\n        (record as any)[property] = new (model as any)(value)\n      }\n      continue\n    }\n\n    throw new Error(`No matching attribute or relationship ${property} on type ${model.modelName}`)\n  }\n  return record\n}\n\n//\n// Helpers\n//\n\nfunction debug(obj: any) {\n  return JSON.stringify(obj, (k, v) => (k && v && typeof v !== 'number'\n    ? Array.isArray(v)\n      ? '[object Array]'\n      : `${v}`\n    : v))\n}\n\nfunction lowerCaseFirstLetter(str: string) {\n  return str.charAt(0).toLowerCase() + str.slice(1)\n}\n","/* eslint-disable no-console */\n\nimport Honeybadger from 'honeybadger-js'\nimport env from './env'\n\nconst logger = {\n  notify(...args: any[]) {\n    Honeybadger.notify(...args)\n  },\n  log(...args: any[]) {\n    console.log(...args)\n  },\n  warn(...args: any[]) {\n    console.warn(...args)\n  },\n  error(...args: any[]) {\n    console.error(...args)\n  },\n  dev(...args: any[]) {\n    if (env.isDevelopment()) {\n      console.log(...args)\n    }\n  },\n  devReturn(args: any) {\n    if (env.isDevelopment()) {\n      console.log(args)\n    }\n    return args\n  },\n}\n\nexport default logger\n","import { defineMessage } from '@lingui/macro'\nimport { DateTime } from 'luxon'\nimport qs from 'qs'\n\nimport { getGlobal } from 'reactn'\nimport { Dict } from 'src/types'\nimport { parsePhoneNumberFromString } from 'libphonenumber-js'\nimport { ChangeEvent, SetStateAction } from 'react'\nimport logger from './logger'\n\n//\n// Date and Time Related\n//\n\nexport function yesterday(): DateTime {\n  return today().minus({ days: 1 })\n}\n\nexport function today(): DateTime {\n  return DateTime.local().setZone('America/New_York').startOf('day')\n}\n\nexport function tomorrow(): DateTime {\n  return today().plus({ days: 1 })\n}\n\nexport function timeOfDay(): 'morning' | 'afternoon' | 'evening' {\n  const hours = new Date().getHours()\n  if (hours < 12) {\n    return 'morning'\n  }\n  if (hours < 17) {\n    return 'afternoon'\n  }\n  return 'evening'\n}\n\nexport function equalDates(date1: Date | DateTime | null, date2: Date | DateTime | null) {\n  if (date1 === null && date2 === null) return true\n  if (date1 === null || date2 === null) return false\n  const year1 = date1 instanceof Date ? date1.getFullYear() : date1.year\n  const month1 = date1 instanceof Date ? date1.getMonth() : date1.month\n  const day1 = date1 instanceof Date ? date1.getDate() : date1.day\n\n  const year2 = date2 instanceof Date ? date2.getFullYear() : date2.year\n  const month2 = date2 instanceof Date ? date2.getMonth() : date2.month\n  const day2 = date2 instanceof Date ? date2.getDate() : date2.day\n\n  return year1 === year2 && month1 === month2 && day1 === day2\n}\n\n//\n// Assertions, Type Checks, and Predicates\n//\n\nexport function assertArray<T>(obj: T | T[]): asserts obj is T[] {\n  if (!Array.isArray(obj)) {\n    throw new Error(`Expected array but received single object ${obj}`)\n  }\n}\n\nexport function assertNotArray<T>(obj: T | T[]): asserts obj is T {\n  if (Array.isArray(obj)) {\n    throw new Error(`Expected single object but received array ${obj}`)\n  }\n}\n\nexport function assertNotUndefined<T>(obj: T | undefined): asserts obj is T {\n  if (obj === undefined) {\n    throw new Error(`Expected value but got undefined ${obj}`)\n  }\n}\n\nexport function assertNotNull<T>(obj: T | null): asserts obj is T {\n  if (obj === null) {\n    throw new Error(`Expected value but got undefined ${obj}`)\n  }\n}\n\nexport function isBlank(value: any): boolean {\n  return value === '' || value === 0 || value === undefined || value === null\n}\n\nexport function isPresent(value: any): boolean {\n  return !isBlank(value)\n}\n\nexport function isEmptyType(data: any) {\n  return typeof data === null || typeof data === undefined\n}\n\nexport function isPrimitiveType(data: any) {\n  return (\n    typeof data === 'string'\n    || typeof data === 'number'\n    || typeof data === 'boolean'\n    || typeof data === 'bigint'\n    || typeof data === 'symbol'\n    || data === null\n    || data === undefined\n  )\n}\n\nexport function hasKey(obj: any, key: string): boolean {\n  return obj[key] !== undefined\n}\n\nexport function isCordova(): boolean {\n  return hasKey(window, 'cordova')\n}\n\n/**\n * Resolves a path template string into a full path.\n *\n * @example\n *   resolvePath('/users/:userId/surveys/:surveyId', [1, 2])\n *   // =>\n *   resolvePath('/users/:userId/surveys/:surveyId', { userId: 1, surveyId: 2})\n *\n * @param path The path template to fill\n * @param substitutions The array or object from which to fill :placeholders.\n * @param query An optional object to transform into a query string.\n */\nexport function resolvePath(path: string, substitutions?: any[] | Dict<any> | null, query?: any) {\n  const re = /:[A-z0-9\\-_]+/g\n  const matches = path.match(re)\n  const queryString = query ? `?${qs.stringify(query)}` : ''\n  if (!matches) {\n    // There are no substitutions to be made\n    return `${path}${queryString}`\n  }\n\n  if (substitutions === undefined || substitutions === null) {\n    throw new Error('No substitutions given.')\n  }\n\n  if (typeof substitutions === 'string' || typeof substitutions === 'number' || typeof substitutions === 'boolean') {\n    substitutions = [substitutions]\n  }\n\n  if (Array.isArray(substitutions)) {\n    if (matches.length !== substitutions.length) {\n      // Not enough substitutions were provided\n      throw new Error(`Expected ${matches.length} substitutions, but only got ${substitutions.length}`)\n    }\n\n    for (let i = 0; i < matches.length; i += 1) {\n      path = path.replace(`${matches[i]}`, String(substitutions[i]))\n    }\n  } else {\n    const substitutionsKeys = Object.keys(substitutions)\n    if (matches.length !== substitutionsKeys.length) {\n      // Not enough substitutions were provided\n      throw new Error(`Expected ${matches.length} substitutions, but only got ${substitutionsKeys.length}`)\n    }\n\n    for (const match of matches) {\n      const subtitutionKey = match.replace(':', '')\n      if (!substitutions[subtitutionKey]) {\n        throw new Error(`Missing key ${subtitutionKey} in substitutions: ${JSON.stringify(substitutions)}`)\n      }\n      path = path.replace(`${match}`, String(substitutions[subtitutionKey]))\n    }\n  }\n\n  return `${path}${queryString}`\n}\n\n//\n// Text and I18n Helpers\n//\n\nexport function esExclaim() {\n  return getGlobal().locale === 'es' ? '¡' : ''\n}\n\nexport function greeting() {\n  const time = timeOfDay()\n  switch (time) {\n    case 'morning':\n      return getGlobal().i18n._(defineMessage({ id: 'util.good_morning', message: 'Good morning' }))\n    case 'afternoon':\n      return getGlobal().i18n._(defineMessage({ id: 'util.good_afternoon', message: 'Good afternoon' }))\n    case 'evening':\n      return getGlobal().i18n._(defineMessage({ id: 'util.good_evening', message: 'Good evening' }))\n    default:\n      throw new Error(`Unknown time of day ${time}`)\n  }\n}\n\n/**\n * joinWords(['apple', 'banana', 'mango']) # => 'apple, banana, and mango'\n *\n * @param words\n * @param twoWordsConnector\n * @param lastWordConnector\n * @param wordsConnector\n */\nexport function joinWords(words: string[], conjunction?: string): string {\n  let twoWordsConnector\n  let lastWordConnector\n\n  if (conjunction === 'or') {\n    twoWordsConnector = getGlobal().i18n._(defineMessage({ id: 'util.two_words_or', message: ' or ' }))\n    lastWordConnector = getGlobal().i18n._(defineMessage({ id: 'util.last_word_or', message: ', or ' }))\n  } else {\n    twoWordsConnector = getGlobal().i18n._(defineMessage({ id: 'util.two_words_and', message: ' and ' }))\n    lastWordConnector = getGlobal().i18n._(defineMessage({ id: 'util.last_word_and', message: ', and ' }))\n  }\n\n  const wordsConnector = getGlobal().i18n._(defineMessage({ id: 'util.words_connector', message: ', ' }))\n  if (words.length === 0) {\n    return ''\n  }\n  if (words.length === 1) {\n    return `${words[0]}`\n  }\n  if (words.length === 2) {\n    return `${words[0]}${twoWordsConnector}${words[1]}`\n  }\n  return `${words.slice(0, -1).join(wordsConnector)}${lastWordConnector}${words[words.length - 1]}`\n}\n\n//\n// Misc\n//\n\n/**\n * An interval timer that executes immediately\n *\n * @param func The function to execute\n * @param ms How long to wait between executions\n */\nexport function setIntervalSafely(func: Function, ms: number, immediate: boolean = false): number {\n  if (immediate) func()\n  const wrapped = () => {\n    func()\n    return window.setTimeout(wrapped, ms)\n  }\n  return wrapped()\n}\n\nexport function changeHandler(valueSetter: (value: SetStateAction<any>) => void, target?: string) {\n  let targeted = target\n  const handler = (e: ChangeEvent<any>) => {\n    const { name, value } = e.target\n    targeted = name || targeted\n    valueSetter((prevState: any) => {\n      assertNotUndefined(targeted)\n      return ({\n        ...prevState,\n        [targeted]: value,\n      })\n    })\n  }\n\n  return (e: ChangeEvent<any> | string) => {\n    if (typeof e === 'string') {\n      targeted = e\n      return handler\n    }\n    return handler(e)\n  }\n}\n\n/**\n * Pings the given url and waits for a response by checking for a HEAD reponse.\n *\n * @param url URL to ping\n * @param timeout Time to wait for a response in ms\n */\nexport function ping(url: string, timeout: number): Promise<boolean> {\n  return new Promise((resolve) => {\n    const isOnline = () => resolve(true)\n    const isOffline = () => resolve(false)\n\n    const xhr = new XMLHttpRequest()\n\n    xhr.onerror = isOffline\n    xhr.ontimeout = isOffline\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === xhr.HEADERS_RECEIVED) {\n        if (xhr.status) {\n          isOnline()\n        } else {\n          isOffline()\n        }\n      }\n    }\n\n    xhr.open('HEAD', url)\n    xhr.timeout = timeout\n    xhr.send()\n  })\n}\n\nexport function sortBy<T>(ary: T[], fn: (el: T) => any): T[] {\n  return ary\n    .map((el) => [fn(el), el] as [any, T])\n    .sort((e1, e2) => {\n      if (e1[0] > e2[0]) return 1\n      if (e1[0] < e2[0]) return -1\n      return 0\n    })\n    .map((x) => x[1])\n}\n\nexport function zipTwo<X, Y>(xs: X[], ys: Y[]): [X, Y][] {\n  const zipped: [X, Y][] = []\n  for (let i = 0; i < Math.min(xs.length, ys.length); i += 1) {\n    zipped.push([xs[i], ys[i]])\n  }\n  return zipped\n}\n\nexport function deleteBlanks<T>(obj: T): Partial<T> {\n  for (const propName in obj) {\n    if ((obj[propName] as any) === '' || obj[propName] === null) {\n      delete obj[propName]\n    }\n  }\n  return obj\n}\n\nconst EMAIL_REGEX = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n\nexport function validEmail(email: string): boolean {\n  return EMAIL_REGEX.test(String(email).toLowerCase())\n}\n\nexport function formatPhone(number: string | null | undefined): string {\n  if (!number) return ''\n  const parsed = parsePhoneNumberFromString(number, 'US')\n  return parsed?.formatNational() || ''\n}\n\nexport function validPhone(phoneNumber: string): boolean {\n  const parsed = parsePhoneNumberFromString(phoneNumber, 'US')\n  if (!parsed) {\n    return false\n  }\n  return parsed.country === 'US' && parsed.isValid()\n}\n\nexport function haveEqualAttrs(a: any, b: any) {\n  // Create arrays of property names\n  const aProps = Object.getOwnPropertyNames(a)\n  const bProps = Object.getOwnPropertyNames(b)\n\n  // If number of properties is different,\n  // objects are not equivalent\n  if (aProps.length !== bProps.length) {\n    return false\n  }\n\n  for (let i = 0; i < aProps.length; i += 1) {\n    const propName = aProps[i]\n\n    // If values of same property are not equal,\n    // objects are not equivalent\n    if (a[propName] !== b[propName]) {\n      return false\n    }\n  }\n\n  // If we made it this far, objects\n  // are considered equivalent\n  return true\n}\n\nexport function transformForAPI(data: any): any {\n  if (Array.isArray(data)) {\n    return data.map(transformForAPI)\n  }\n  if (isPrimitiveType(data)) {\n    return data\n  }\n  if (DateTime.isDateTime(data)) {\n    return data.toISO()\n  }\n  const transformed: any = {}\n  Object.keys(data).forEach((k) => {\n    transformed[k] = transformForAPI(data[k])\n  })\n  return transformed\n}\n\nexport function debugHandler(callable: CallableFunction, message?: string): (...x: any) => void {\n  return (...x) => {\n    logger.dev('[Called]', callable, message)\n    callable(...x)\n  }\n}\n","const colors = {\n  greenLight: '#33DA97',\n  green: '#00A183',\n  greenFade: '#00A18370',\n  greenDark: '#0A322B',\n  yellow: '#FFD034',\n  pink: '#FF3494',\n  goldLight: '#FFFAA1',\n  gold: '#FFCD65',\n  // TODO: FIXME\n  blue: '#b2d0f5',\n  gray: '#DDDDDD',\n}\n\nexport default colors\n","import { DateTime } from 'luxon'\n\n/**  Types that can be converted to DateTime */\ntype DateTimeable = string | number | Date | DateTime\n\nfunction secondsSinceMidnight(time: DateTime) {\n  return time.diff(time.startOf('day'), 'seconds').seconds\n}\n\nfunction toDateTime(dt: DateTimeable): DateTime {\n  if (dt instanceof DateTime) return dt\n  if (dt instanceof Date) return DateTime.fromJSDate(dt)\n  if (typeof dt === 'number') return DateTime.fromMillis(dt)\n\n  if (typeof dt === 'string') {\n    const conversions = [DateTime.fromISO, DateTime.fromRFC2822, DateTime.fromSQL, DateTime.fromHTTP]\n    for (const conversion of conversions) {\n      const attempt = conversion(dt)\n      if (attempt.isValid) return attempt\n    }\n  }\n  throw `Can't convet ${dt} into DateTime`\n}\n\nexport default class CutoffTime {\n  cutoff: DateTime\n\n  secondsSinceMidnight: number\n\n  constructor(cutoff: DateTimeable) {\n    this.cutoff = toDateTime(cutoff)\n    if (!this.cutoff.isValid) {\n      throw 'Invalid date provided for cutoff'\n    }\n    this.secondsSinceMidnight = secondsSinceMidnight(this.cutoff)\n  }\n\n  compare(other: DateTimeable): 1 | -1 | 0 {\n    const otherM = toDateTime(other)\n    const otherSeconds = secondsSinceMidnight(otherM)\n\n    if (this.secondsSinceMidnight > otherSeconds) {\n      return 1\n    }\n\n    if (this.secondsSinceMidnight < otherSeconds) {\n      return -1\n    }\n\n    return 0\n  }\n\n  isBefore(other: DateTimeable): boolean {\n    return this.compare(other) === -1\n  }\n\n  isAfter(other: DateTimeable): boolean {\n    return this.compare(other) === 1\n  }\n\n  isSame(other: DateTimeable): boolean {\n    return this.compare(other) === 0\n  }\n\n  isSameOrBefore(other: DateTimeable): boolean {\n    return this.isSame(other) || this.isBefore(other)\n  }\n\n  isSameOrAfter(other: DateTimeable): boolean {\n    return this.isSame(other) || this.isAfter(other)\n  }\n}\n","import colors from 'src/misc/colors'\nimport { today, tomorrow } from 'src/util'\nimport CutoffTime from 'src/misc/CutoffTime'\nimport { t } from '@lingui/macro'\n\nimport { DateTime } from 'luxon'\nimport { User } from './User'\nimport {\n  Model, attribute as attr, initialize, STRING, DATETIME, BOOLEAN, hasOne,\n} from './Model'\n\nexport const CUTOFF_TIME = new CutoffTime('2020-10-08 18:00')\n\nexport enum GreenlightStatusTypes {\n  CLEARED = 'cleared',\n  PENDING = 'pending',\n  RECOVERY = 'recovery',\n  ABSENT = 'absent',\n  UNKNOWN = 'unknown',\n}\n\nexport type REASONS = 'cleared'\n| 'cleared_alternative_diagnosis'\n| 'cleared_with_symptom_improvement'\n| 'pending_needs_diagnosis'\n| 'recovery_covid_exposure'\n| 'recovery_asymptomatic_covid_exposure'\n| 'recovery_from_diagnosis'\n| 'recovery_not_covid_has_fever'\n| 'recovery_diagnosed_asymptomatic'\n| 'recovery_return_tomorrow'\n\nexport const GREENLIGHT_COLORS = {\n  cleared: { name: 'green', hex: colors.green },\n  pending: { name: 'yellow', hex: colors.yellow },\n  recovery: { name: 'pink', hex: colors.pink },\n  absent: { name: 'blue', hex: colors.blue },\n  unknown: { name: 'gray', hex: colors.gray },\n}\n\nexport class GreenlightStatus extends Model {\n  static modelName = 'greenlightStatus'\n\n  static newUnknown(): GreenlightStatus {\n    return new GreenlightStatus({ status: GreenlightStatusTypes.UNKNOWN })\n  }\n\n  constructor(data?: any) {\n    super()\n    initialize(this, data)\n  }\n\n  @attr({ type: STRING })\n  status: GreenlightStatusTypes = GreenlightStatusTypes.UNKNOWN\n\n  @attr({ type: DATETIME })\n  submissionDate: DateTime = DateTime.fromISO('')\n\n  @attr({ type: DATETIME })\n  expirationDate: DateTime = DateTime.fromISO('')\n\n  @attr({ type: DATETIME })\n  followUpDate: DateTime = DateTime.fromISO('')\n\n  @attr({ type: BOOLEAN })\n  isOverride = false\n\n  @attr({ type: STRING })\n  reason = ''\n\n  @hasOne('User')\n  user: User | null = null\n\n  /** Name of the color corresponding to the status */\n  colorName(): string {\n    return GREENLIGHT_COLORS[this.status].name\n  }\n\n  /** Hex code of the color corresponding to the status */\n  colorHex(): string {\n    return GREENLIGHT_COLORS[this.status].hex\n  }\n\n  isUnknown(): boolean {\n    return this.status === GreenlightStatusTypes.UNKNOWN\n  }\n\n  isAbsent(): boolean {\n    return this.status === GreenlightStatusTypes.ABSENT\n  }\n\n  isCleared(): boolean {\n    return this.status === GreenlightStatusTypes.CLEARED\n  }\n\n  isPending(): boolean {\n    return this.status === GreenlightStatusTypes.PENDING\n  }\n\n  isRecovering(): boolean {\n    return this.status === GreenlightStatusTypes.RECOVERY\n  }\n\n  isValidForDate(date: DateTime): boolean {\n    return date >= this.submissionDate && date <= this.expirationDate && date < this.followUpDate\n  }\n\n  isValidForToday(): boolean {\n    if (this.isUnknown()) return false\n    return this.isValidForDate(today())\n  }\n\n  isValidForTomorrow(): boolean {\n    if (this.isUnknown()) return false\n    return this.isValidForDate(tomorrow())\n  }\n\n  title(): string {\n    if (this.status === GreenlightStatusTypes.CLEARED) {\n      return t({ id: 'GreenlightStatus.cleared', message: 'Cleared' })\n    }\n    if (this.status === GreenlightStatusTypes.PENDING) {\n      return t({ id: 'GreenlightStatus.pending', message: 'Pending' })\n    }\n    if (this.status === GreenlightStatusTypes.RECOVERY) {\n      return t({ id: 'GreenlightStatus.recovery', message: 'Recovery' })\n    }\n    if (this.status === GreenlightStatusTypes.ABSENT) {\n      return t({ id: 'GreenlightStatus.absent', message: 'Absent' })\n    }\n    return t({ id: 'GreenlightStatus.not_submitted', message: 'Not Submitted' })\n  }\n}\n","import { User } from './User'\nimport { Location } from './Location'\nimport {\n  Model, attribute as attr, initialize, STRING, hasOne,\n} from './Model'\n\nexport enum PermissionLevels {\n  OWNER = 'owner',\n  ADMIN = 'admin',\n  NONE = 'none',\n}\n\nexport class LocationAccount extends Model {\n  static modelName = 'locationAccount'\n\n  constructor(data?: any) {\n    super()\n    initialize(this, data)\n  }\n\n  @attr({ type: STRING }) locationId: string | null = null\n\n  @attr({ type: STRING }) externalId: string | null = null\n\n  @attr({ type: STRING }) role: string | null = null\n\n  @attr({ type: STRING }) title: string | null = null\n\n  @attr({ type: STRING }) permissionLevel: string | null = null\n\n  @attr({ type: STRING }) attendanceStatus: string | null = null\n\n  @hasOne('Location')\n  location: Location | null = null\n\n  @hasOne('User')\n  user: User | null = null\n\n  isAdmin(): boolean {\n    return this.permissionLevel === PermissionLevels.ADMIN || this.permissionLevel === PermissionLevels.OWNER\n  }\n}\n","import {\n  Model, attribute as attr, initialize, STRING, BOOLEAN, NUMBER,\n} from './Model'\n\nexport enum DailyReminderType {\n  TEXT = 'text',\n  EMAIL = 'email',\n  NONE = 'none',\n}\n\nexport class UserSettings extends Model {\n  static modelName = 'userSettings'\n\n  constructor(data?: any) {\n    super()\n    initialize(this, data)\n  }\n\n  @attr({ type: BOOLEAN })\n  overrideLocationReminders = false\n\n  @attr({ type: STRING })\n  dailyReminderType: DailyReminderType = DailyReminderType.TEXT\n\n  @attr({ type: NUMBER })\n  dailyReminderTime = 7\n\n  @attr({ type: BOOLEAN })\n  remindMon = false\n\n  @attr({ type: BOOLEAN })\n  remindTue = false\n\n  @attr({ type: BOOLEAN })\n  remindWed = false\n\n  @attr({ type: BOOLEAN })\n  remindThu = false\n\n  @attr({ type: BOOLEAN })\n  remindFri = false\n\n  @attr({ type: BOOLEAN })\n  remindSat = false\n\n  @attr({ type: BOOLEAN })\n  remindSun = false\n\n  dailyReminderHour(): number {\n    return this.dailyReminderTime > 12 ? this.dailyReminderTime - 12 : this.dailyReminderTime\n  }\n\n  dailyReminderAMPM(): 'am' | 'pm' {\n    if (this.dailyReminderTime === 24) return 'am'\n    return this.dailyReminderTime < 12 && this.dailyReminderTime !== 12 ? 'am' : 'pm'\n  }\n}\n","import { DateTime } from 'luxon'\nimport {\n  Model, attribute as attr, initialize, STRING, BOOLEAN, NUMBER, DATETIME,\n} from './Model'\n\nexport enum LocationCategories {\n  SCHOOOL = 'school',\n  RESTAUARNT = 'restaurant',\n  ENTERTAINMENT = 'enterainment',\n  NONPROFIT = 'nonprofit',\n  RETAIL = 'retail',\n  SERVICES = 'services',\n  BUSINESS = 'business',\n  OTHER = 'other',\n}\n\nexport const LOCATION_CATEGORIES: LocationCategories[] = [\n  LocationCategories.SCHOOOL,\n  LocationCategories.RESTAUARNT,\n  LocationCategories.ENTERTAINMENT,\n  LocationCategories.NONPROFIT,\n  LocationCategories.RETAIL,\n  LocationCategories.SERVICES,\n  LocationCategories.BUSINESS,\n  LocationCategories.OTHER,\n]\n\nexport class Location extends Model {\n  static modelName = 'location'\n\n  constructor(data?: any) {\n    super()\n    initialize(this, data)\n  }\n\n  @attr({ type: STRING })\n  name: string | null = null\n\n  @attr({ type: STRING })\n  phoneNumber: string | null = null\n\n  @attr({ type: STRING })\n  website: string | null = null\n\n  @attr({ type: STRING })\n  permalink: string | null = null\n\n  @attr({ type: STRING })\n  category: LocationCategories | null = null\n\n  @attr({ type: STRING })\n  email: string | null = null\n\n  @attr({ type: STRING })\n  zipCode: string | null = null\n\n  @attr({ type: BOOLEAN })\n  hidden = true\n\n  @attr({ type: NUMBER })\n  dailyReminderTime = 7\n\n  @attr({ type: BOOLEAN })\n  remindMon = false\n\n  @attr({ type: BOOLEAN })\n  remindTue = false\n\n  @attr({ type: BOOLEAN })\n  remindWed = false\n\n  @attr({ type: BOOLEAN })\n  remindThu = false\n\n  @attr({ type: BOOLEAN })\n  remindFri = false\n\n  @attr({ type: BOOLEAN })\n  remindSat = false\n\n  @attr({ type: BOOLEAN })\n  remindSun = false\n\n  @attr({ type: DATETIME })\n  approvedAt = DateTime.fromISO('')\n\n  @attr({ type: NUMBER })\n  employeeCount: number | null = null\n\n  @attr({ type: STRING })\n  registrationCode: string | null = ''\n}\n","import { DateTime } from 'luxon'\nimport { isPresent, joinWords } from 'src/util'\nimport { Location, MedicalEvent } from 'src/models'\nimport {\n  Model, attribute as attr, initialize, STRING, DATETIME, DATE, BOOLEAN, hasMany, hasOne,\n} from './Model'\nimport { CUTOFF_TIME, GreenlightStatus, GreenlightStatusTypes } from './GreenlightStatus'\nimport { LocationAccount, PermissionLevels } from './LocationAccount'\nimport { UserSettings } from './UserSettings'\n\nexport class User extends Model {\n  static modelName = 'user'\n\n  static reversedNameSort(u1: User, u2: User): number {\n    if (u1.reversedName() > u2.reversedName()) return 1\n    if (u1.reversedName() < u2.reversedName()) return -1\n    return 0\n  }\n\n  constructor(data?: any) {\n    super()\n    initialize(this, data)\n  }\n\n  @attr({ type: STRING })\n  firstName = ''\n\n  @attr({ type: STRING })\n  lastName = ''\n\n  @attr({ type: STRING })\n  email: string | null = null\n\n  @attr({ type: DATETIME })\n  emailConfirmedAt: string | null = null\n\n  @attr({ type: STRING })\n  mobileNumber: string | null = null\n\n  @attr({ type: STRING })\n  mobileCarrier: string | null = null\n\n  @attr({ type: STRING })\n  mobileNumberUnconfirmed: string | null = null\n\n  @attr({ type: STRING })\n  zipCode: string | null = null\n\n  @attr({ type: STRING })\n  physicianName: string | null = null\n\n  @attr({ type: STRING })\n  physicianPhoneNumber: string | null = null\n\n  @attr({ type: BOOLEAN })\n  needsPhysician: boolean | null = null\n\n  @attr({ type: STRING })\n  locale: 'en' | 'es' | null = null\n\n  @attr({ type: DATE })\n  birthDate: DateTime | null = DateTime.fromISO('')\n\n  @attr({ type: DATETIME })\n  acceptedTermsAt: DateTime = DateTime.fromISO('')\n\n  @attr({ type: DATETIME })\n  completedWelcomeAt: DateTime = DateTime.fromISO('')\n\n  @hasMany('LocationAccount')\n  locationAccounts: LocationAccount[] = []\n\n  @hasMany('User')\n  children: User[] = []\n\n  @hasMany('User')\n  parents: User[] = []\n\n  @hasMany('MedicalEvent')\n  medicalEvents: MedicalEvent[] = []\n\n  @hasMany('MedicalEvent')\n  recentMedicalEvents: MedicalEvent[] = []\n\n  @hasOne('GreenlightStatus')\n  lastGreenlightStatus: GreenlightStatus | null = null\n\n  @hasOne('UserSettings')\n  settings: UserSettings | null = null\n\n  reversedName(): string {\n    return `${this.lastName}, ${this.firstName}`\n  }\n\n  sortedChildren(): User[] {\n    return this.children.sort((a, b) => (a.id < b.id ? 1 : -1))\n  }\n\n  locations__HACK(): Location[] {\n    return this.locationAccounts.map((la) => la.location).filter((l): l is Location => isPresent(l))\n  }\n\n  /** The users first name. */\n  fullName(): string {\n    return `${this.firstName} ${this.lastName}`\n  }\n\n  /** Does this user have any children? */\n  hasChildren(): boolean {\n    return this.children.length > 0\n  }\n\n  /** Is this user a parent? */\n  isParent(): boolean {\n    return this.hasChildren()\n  }\n\n  // HACK\n  isAdmin(): boolean {\n    return this.locationAccounts[0]?.permissionLevel === PermissionLevels.ADMIN\n  }\n\n  /** Has the user completed the welcome sequence? */\n  hasCompletedWelcome() {\n    return this.completedWelcomeAt !== null && this.completedWelcomeAt.isValid\n  }\n\n  /** The users current greenlight status */\n  greenlightStatus(): GreenlightStatus {\n    if (!this.lastGreenlightStatus || !this.lastGreenlightStatus.isValidForToday()) {\n      const status = GreenlightStatus.newUnknown()\n      // 'cleared',\n      // 'cleared_alternative_diagnosis',\n      // 'cleared_with_symptom_improvement',\n      // 'pending_needs_diagnosis',\n      // 'recovery_covid_exposure',\n      // 'recovery_asymptomatic_covid_exposure',\n      // 'recovery_from_diagnosis',\n      // 'recovery_not_covid_has_fever',\n      // 'recovery_diagnosed_asymptomatic',\n      // 'recovery_return_tomorrow'\n      return status\n    }\n    return this.lastGreenlightStatus\n  }\n\n  /**\n   * The user's greenlight status for tomorrow.\n   */\n  greenlightStatusTomorrow(): GreenlightStatus {\n    if (!this.lastGreenlightStatus || !this.lastGreenlightStatus.isValidForTomorrow()) {\n      return GreenlightStatus.newUnknown()\n    }\n    return this.lastGreenlightStatus\n  }\n\n  /** Is this user cleared? */\n  isCleared(): boolean {\n    return this.greenlightStatus().isCleared()\n  }\n\n  /** This inclues this user */\n  areUsersCleared(): boolean {\n    return this.usersExpectedToSubmit()\n      .map((u) => u.isCleared())\n      .every((x) => x === true)\n  }\n\n  //\n  // Survey Related Methods\n  //\n\n  /** Has the user not submitted their own survey if its required?  */\n  hasNotSubmittedOwnSurvey(): boolean {\n    return this.greenlightStatus().isUnknown() && this.hasLocationThatRequiresSurvey()\n  }\n\n  /** Has the user not submitted their own survey if its required?  */\n  hasNotSubmittedOwnSurveyForTomorrow(): boolean {\n    return this.greenlightStatusTomorrow().isUnknown() && this.hasLocationThatRequiresSurvey()\n  }\n\n  /**\n   * All of the users associated with this user\n   * who haven't submitted a survey yet for today\n   */\n  usersNotSubmitted(): User[] {\n    const users = []\n    for (const child of this.sortedChildren()) {\n      if (child.hasNotSubmittedOwnSurvey()) {\n        users.push(child)\n      }\n    }\n    if (this.hasNotSubmittedOwnSurvey()) {\n      users.push(this)\n    }\n    return users\n  }\n\n  usersNotSubmittedForTomorrow(): User[] {\n    const users = []\n    for (const child of this.sortedChildren()) {\n      if (child.hasNotSubmittedOwnSurveyForTomorrow()) {\n        users.push(child)\n      }\n    }\n    if (this.hasNotSubmittedOwnSurveyForTomorrow()) {\n      users.push(this)\n    }\n    return users\n  }\n\n  /**\n   * TODO: This needs to be turned into a proper pattern.\n   */\n  settingsReified() {\n    return this.settings || new UserSettings()\n  }\n\n  /**\n   * The names of all the users needing to submit surveys\n   */\n  usersNotSubmittedText(): string {\n    return joinWords(this.usersNotSubmitted().map((u) => (u === this ? this.yourself__HACK() : u.firstName)))\n  }\n\n  /**\n   * The names of all the users needing to submit surveys\n   */\n  usersNotSubmittedForTomorrowText(): string {\n    return joinWords(this.usersNotSubmittedForTomorrow().map((u) => (u === this ? this.yourself__HACK() : u.firstName)))\n  }\n\n  showSubmissionPanelForToday(): boolean {\n    return this.usersNotSubmitted().length > 0 && CUTOFF_TIME.isAfter(DateTime.local())\n  }\n\n  showSubmissionPanelForTomorrow(): boolean {\n    return this.usersNotSubmittedForTomorrow().length > 0 && CUTOFF_TIME.isBefore(DateTime.local())\n  }\n\n  yourself__HACK() {\n    return this.locale === 'en' ? 'yourself' : 'ti mismo'\n  }\n\n  you__HACK() {\n    return this.locale === 'en' ? 'you' : 'tu'\n  }\n\n  hasLocationThatRequiresSurvey() {\n    return this.locationAccounts.length > 0\n  }\n\n  needsToSubmitSomeonesSurvey(): boolean {\n    return this.usersNotSubmitted().length > 0\n  }\n\n  usersExpectedToSubmit() {\n    const users: User[] = []\n    return [this]\n    if (this.hasLocationThatRequiresSurvey()) {\n      users.push(this)\n    }\n\n    for (const child of this.children) {\n      if (child.hasLocationThatRequiresSurvey()) {\n        users.push(child)\n      }\n    }\n    return users\n  }\n\n  isAdminSomewhere(): boolean {\n    return this.adminLocations().length > 0\n  }\n\n  adminLocations(): Location[] {\n    return this.locationAccounts\n      .filter((la) => la.isAdmin() && la.location !== null)\n      .map((la) => la.location) as Location[]\n  }\n}\n","import { DateTime } from 'luxon'\nimport {\n  Model, attribute as attr, initialize, DATETIME, STRING,\n} from './Model'\n\nexport enum MedicalEventTypes {\n  NONE = 'none',\n  FEVER = 'fever',\n  NEW_COUGH = 'new_cough',\n  DIFFICULTY_BREATHING = 'difficulty_breathing',\n  LOST_TASTE_SMELL = 'lost_taste_smell',\n  CHILLS = 'chills',\n  COVID_EXPOSURE = 'covid_exposure',\n  COVID_TEST = 'covid_test',\n  COVID_TEST_POSITIVE = 'covid_test_positive',\n  COVID_TEST_NEGATIVE = 'covid_test_negative',\n  COVID_DIAGNOSIS = 'covid_diagnosis',\n  COVID_RULED_OUT = 'covid_ruled_out',\n  SYMPTOM_IMPROVEMENT = 'symptom_improvement',\n}\n\nexport class MedicalEvent extends Model {\n  static modelName = 'medicalEvent'\n\n  static SYMPTOMS = [\n    MedicalEventTypes.FEVER,\n    MedicalEventTypes.NEW_COUGH,\n    MedicalEventTypes.LOST_TASTE_SMELL,\n    MedicalEventTypes.DIFFICULTY_BREATHING,\n    MedicalEventTypes.CHILLS,\n  ]\n\n  constructor(data?: any) {\n    super()\n    initialize(this, data)\n  }\n\n  @attr({ type: STRING })\n  eventType: MedicalEventTypes = MedicalEventTypes.NONE\n\n  @attr({ type: DATETIME })\n  occurredAt: DateTime = DateTime.fromISO('')\n\n  @attr({ type: DATETIME })\n  createdAt: DateTime = DateTime.fromISO('')\n}\n\nexport function hasEvent(medicalEvents: MedicalEvent[], eventType: MedicalEventTypes | MedicalEventTypes[], lookbackDays: number) {\n  return findEvents(medicalEvents, eventType, lookbackDays).length > 0\n}\n\nexport function findEvents(medicalEvents: MedicalEvent[], eventType: MedicalEventTypes | MedicalEventTypes[], lookbackDays: number) {\n  const start = DateTime.local().minus({ days: lookbackDays })\n  const eventTypes = Array.isArray(eventType) ? eventType : [eventType]\n  return medicalEvents\n    .filter((event) => event.occurredAt >= start)\n    .filter((event) => eventTypes.includes(event.eventType))\n}\n\nexport function findLastEvent(medicalEvents: MedicalEvent[], eventType: MedicalEventTypes | MedicalEventTypes[], lookbackDays: number) {\n  const events = findEvents(medicalEvents, eventType, lookbackDays)\n  return events.length > 0 ? events[-1] : null\n}\n","import { Model, ModelRegistry } from './Model'\nimport { User } from './User'\nimport { GreenlightStatus } from './GreenlightStatus'\nimport { Location } from './Location'\nimport { LocationAccount } from './LocationAccount'\nimport { MedicalEvent } from './MedicalEvent'\nimport { UserSettings } from './UserSettings'\n\nModelRegistry.register(User, UserSettings, GreenlightStatus, Location, LocationAccount, MedicalEvent)\n\nexport {\n  Model, ModelRegistry, User, UserSettings, GreenlightStatus, Location, MedicalEvent,\n}\n","import {\n  Dict, Record, RecordResponse, RecordRelationship, RecordPointer, EntityId,\n} from 'src/types'\nimport { Model } from 'src/models'\nimport { deserializeJSONAPI } from 'src/models/Model'\nimport { zipTwo } from 'src/util'\n\ninterface RecordStoreEntry {\n  record: Record<any>\n  entity?: Model\n}\n\nclass RecordStore {\n  data: Dict<RecordStoreEntry>\n\n  constructor() {\n    this.data = {}\n  }\n\n  findRecord(id: EntityId): Record<any> | null {\n    return this.data[id]?.record\n  }\n\n  findRecords(ids: EntityId[]): Record<any>[] {\n    const records: Record<any>[] = []\n    for (const id of ids) {\n      const record = this.findRecord(id)\n      if (record !== null) records.push(record)\n    }\n    return records\n  }\n\n  findEntity<T extends Model>(id: EntityId): T | null {\n    let entity = this.data[id]?.entity\n    if (entity) { return entity as T }\n\n    const record = this.findRecord(id)\n    if (!record) { return null }\n    entity = deserializeJSONAPI<T>(record)\n    this.data[id].entity = entity\n    return entity as T\n  }\n\n  findEntities<T extends Model>(ids: EntityId[]): T[] {\n    const entities: T[] = []\n    for (const id of ids) {\n      const entity = this.findEntity<T>(id)\n      if (entity !== null) entities.push(entity)\n    }\n    return entities\n  }\n\n  writeRecords(records: Record<any> | Record<any>[]) {\n    const recordsParsed = !Array.isArray(records) ? [records] : records\n    recordsParsed.forEach((r) => { this.data[uuid(r)] = { record: r } })\n  }\n\n  writeRecordResponse(res: RecordResponse<any>) {\n    if (res.included) this.writeRecords(res.included)\n    if (res.data) this.writeRecords(res.data)\n  }\n\n  reset() {\n    this.data = {}\n  }\n}\n\nexport const recordStore = new RecordStore()\n\nexport function transformRelationship<T extends Model>(entity: T, relationshipName: string, relationship: RecordRelationship) {\n  // Skip if we've already loaded the relationship\n  if (entity._included.includes(relationshipName)) return\n\n  if (!entity.hasRelationship(relationshipName)) {\n    throw new Error(`Relationship ${relationshipName} not found on ${entity}`)\n  }\n\n  if (relationship.data === undefined || relationship.data === null) {\n    (entity as any)[relationshipName] = null\n    return\n  }\n\n  if (Array.isArray(relationship.data)) {\n    const ids = relationship.data.map((d) => uuid(d))\n    const foundEntities = recordStore.findEntities(ids)\n    const foundRecords = recordStore.findRecords(ids)\n    if (foundRecords.length !== ids.length) {\n      throw `Expected ${ids.length} records, but only found ${foundRecords.length} in store.`\n    } else {\n      entity._included.push(relationshipName)\n    }\n    // Set relationship for records on the relationship\n    zipTwo(foundEntities, foundRecords).forEach(([e, r]) => {\n      tranformRelationships(e as Model, r as Record<any>)\n    });\n    (entity as any)[relationshipName] = foundEntities\n  } else {\n    const foundEntity = recordStore.findEntity(uuid(relationship.data))\n    const foundRecord = recordStore.findRecord(uuid(relationship.data))\n    if (foundEntity && foundRecord) {\n      entity._included.push(relationshipName)\n    } else {\n      // HACK\n      console.error(`Expected to find ${relationship.data.type} with id ${relationship.data.id} in store but didn't.`)\n      return\n    }\n\n    // Set relationship for records on the relationship\n    tranformRelationships<any>(foundEntity, foundRecord);\n    (entity as any)[relationshipName] = foundEntity\n  }\n}\n\nfunction tranformRelationships<T extends Model>(entity: T, record: Record<any>) {\n  if (!record.relationships) return\n  entity._relationships = record.relationships\n  for (const [rel, value] of Object.entries(record.relationships)) {\n    transformRelationship<T>(entity, rel, value)\n  }\n}\n\n/**\n * Transforms records from the API into entities\n *\n * @param record the record to be transformed\n */\nfunction transformRecord<T extends Model>(record: Record<any>) {\n  const entity: T = deserializeJSONAPI<T>(record)\n  tranformRelationships(entity, record)\n  return entity\n}\n\nexport function transformRecordResponse<T extends Model>(res: RecordResponse<T>): T | T[] {\n  if (!Array.isArray(res.data)) {\n    return transformRecord<T>(res.data)\n  }\n  return res.data.map((data) => transformRecord<T>(data))\n}\n\nexport function uuid(record: Record<any> | RecordPointer): EntityId {\n  return `${record.type}-${record.id}`\n}\n","import axios, { AxiosResponse } from 'axios'\n\nimport { setGlobal } from 'reactn'\nimport {\n  assertArray, assertNotArray, assertNotNull, assertNotUndefined, transformForAPI,\n} from 'src/util'\nimport Honeybadger from 'honeybadger-js'\n\nimport logger from 'src/logger'\nimport { transform } from 'lodash'\nimport { LocationAccount } from 'src/models/LocationAccount'\nimport env from '../env'\nimport { transformRecordResponse, recordStore } from './stores'\nimport { RecordResponse } from '../types'\nimport {\n  User, Location, Model, MedicalEvent, GreenlightStatus, UserSettings,\n} from '../models'\n\nconst BASE_URL = `${env.API_URL}/v1`\n\nlogger.dev(BASE_URL)\n\nexport const v1 = axios.create({\n  baseURL: BASE_URL,\n  timeout: 3000,\n  withCredentials: true,\n})\n\nv1.interceptors.request.use((request) => {\n  logger.dev(`[Request] ${request.method} ${request.url}`)\n  return request\n})\n\nv1.interceptors.response.use(\n  (response) => {\n    logger.dev('[Response]', response)\n    return response\n  },\n  (error) => {\n    logger.dev('[Response Error]', error, error.response, 'ji')\n\n    if (error.response) {\n      const response = error.response as AxiosResponse\n      // Unauthorized errors should lead to a sign out\n      if (response.status === 401) {\n        setGlobal({ currentUser: null })\n      }\n      throw error\n    } else if (error.request) {\n      setGlobal({\n        isAPIOnline: false,\n        isInternetOnline: navigator.onLine,\n      })\n      throw error\n    } else {\n      throw error\n    }\n  },\n)\n\nexport const store = recordStore\n\n//\n// Authentication\n//\n\nexport async function createSession(emailOrMobile: string, password: string, rememberMe: boolean) {\n  await v1.post('sessions', {\n    emailOrMobile,\n    password,\n    rememberMe,\n  })\n}\n\nexport async function deleteSession() {\n  await v1.delete('/sessions')\n}\n\nexport async function createMagicSignIn(emailOrMobile: string, rememberMe: boolean) {\n  await v1.post<any>('/magic-sign-in', {\n    emailOrMobile,\n    rememberMe,\n  })\n}\n\nexport async function magicSignIn(token: string, rememberMe: boolean) {\n  await v1.post(`/magic-sign-in/${token}`, {\n    rememberMe,\n  })\n}\n\n//\n// Locations\n//\n\nexport async function getLocation(id: string): Promise<Location> {\n  return getResource<Location>(`/locations/${id}`)\n}\n\nexport async function createLocation(attrs: Partial<Location>): Promise<Location> {\n  const response = await v1.post<RecordResponse<Location>>('/locations',\n    transformForAPI(attrs))\n\n  const entity = transformRecordResponse<Location>(response.data)\n  assertNotArray(entity)\n  return entity\n}\n\nexport async function joinLocation(location: Location): Promise<LocationAccount> {\n  const response = await v1.post<RecordResponse<LocationAccount>>(`/locations/${location.id}/join`)\n\n  const entity = transformRecordResponse<LocationAccount>(response.data)\n  assertNotArray(entity)\n  return entity\n}\n\n//\n// Users\n//\n\nexport async function getCurrentUser(): Promise<User> {\n  const user = await getResource<User>('/current-user')\n  Honeybadger.setContext({ userId: user.id })\n  return user\n}\n\nexport async function getUser(id: string): Promise<User> {\n  return getResource<User>(`/users/${id}`)\n}\n\nexport async function updateUser(user: User, updates: Partial<User>): Promise<User> {\n  const response = await v1.patch<RecordResponse<User>>(`/users/${user.id}`,\n    transformForAPI(updates))\n\n  const entity = transformRecordResponse<User>(response.data)\n  assertNotArray(entity)\n  return entity\n}\n\nexport async function completeWelcomeUser(user: User): Promise<User> {\n  const response = await v1.put<RecordResponse<User>>(`/users/${user.id}/complete-welcome`)\n  const entity = transformRecordResponse<User>(response.data)\n  assertNotArray(entity)\n  return entity\n}\n\nexport async function createUserAndSignIn(user: Partial<User>) {\n  const response = await v1.post<RecordResponse<User>>('/users/create-and-sign-in', user)\n  const entity = transformRecordResponse<User>(response.data)\n  assertNotArray(entity)\n  return entity\n}\n\nexport async function updateUserSettings(user: User, updates: Partial<UserSettings>) {\n  const response = await v1.patch<RecordResponse<UserSettings>>(`/users/${user.id}/settings`,\n    transformForAPI(updates))\n  const entity = transformRecordResponse<UserSettings>(response.data)\n  assertNotArray(entity)\n  return entity\n}\n\nexport async function getUsersForLocation(location: number | string | Location) {\n  const locationId = location instanceof Location ? location.id : location\n  const path = `/locations/${locationId}/users`\n  return getResources<User>(path) as Promise<User[]>\n}\n\n//\n// Surveys\n//\n\nexport async function createSymptomSurvey(user: User, medicalEvents: Partial<MedicalEvent>[]): Promise<string | null> {\n  const payload = {\n    medicalEvents,\n  }\n  const response = await v1.post<RecordResponse<GreenlightStatus>>(\n    `/users/${user.id}/symptom-surveys`,\n    transformForAPI(payload),\n  )\n  const record = response.data.data\n\n  assertNotArray(record)\n  assertNotUndefined(record.attributes)\n\n  return record.attributes.status || null\n}\n\n//\n// Helpers\n//\n\nexport async function getResource<T extends Model>(path: string): Promise<T> {\n  const response = await v1.get(path)\n  assertNotNull(response.data.data)\n  recordStore.writeRecordResponse(response.data)\n  const entity = transformRecordResponse<T>(response.data)\n  assertNotArray(entity)\n  return entity\n}\n\nexport async function getResources<T extends Model>(path: string): Promise<T | T[]> {\n  const response = await v1.get(path)\n  if (!response.data.data) return []\n  recordStore.writeRecordResponse(response.data)\n  const entities = transformRecordResponse<T>(response.data)\n  assertArray(entities)\n  return entities\n}\n","import { i18n } from '@lingui/core'\n\nimport * as plurals from 'make-plural/plurals'\nimport en from './locales/en/messages'\nimport es from './locales/es/messages'\n\nexport { i18n }\n\ni18n.loadLocaleData('en', { plurals: plurals.en })\ni18n.loadLocaleData('es', { plurals: plurals.es })\n\ni18n.load('en', en.messages)\ni18n.load('es', es.messages)\n\nexport type GLLocales = 'en' | 'es'\n","import Cookies from 'js-cookie'\n\nexport enum Cookie {\n  LAST_VERSION = '_gl_last_version_seen',\n  LOCALE = '_gl_locale',\n}\n\nconst CookieJar = {\n  get(name: Cookie): string | undefined {\n    return Cookies.get(name)\n  },\n\n  set(name: Cookie, value: string) {\n    Cookies.set(name, value)\n    return value\n  },\n\n  delete(name: Cookie): void {\n    Cookies.remove(name)\n  },\n}\n\nexport default CookieJar\n","import {\n  getGlobal, setGlobal, addReducer,\n} from 'reactn'\nimport { deleteSession, getCurrentUser } from 'src/api'\nimport { User } from 'src/models'\nimport { i18n, GLLocales } from 'src/i18n'\nimport CookieJar, { Cookie } from 'src/misc/CookieJar'\nimport logger from 'src/logger'\nimport Honeybadger from './honeybadger'\n\nsetGlobal({\n  locale: cookieLocale(),\n  i18n,\n  flashMessage: '',\n  // This is used for testing reducers\n  x: 0,\n})\n\nexport function isSignedIn() {\n  const user = currentUser()\n  return user !== null && user !== undefined\n}\n\nexport function currentUser(): User | null {\n  return getGlobal().currentUser\n}\n\nexport function currentUserAsserted(router: any) { // TODO: Daniel, can you fix this type?\n  const user = getGlobal().currentUser\n  if (user) {\n    router.navigate('/')\n    setGlobal({ flashMessage: 'No current user' })\n  }\n  return user\n}\n\nexport async function reloadCurrentUser(): Promise<User> {\n  const user = await getCurrentUser()\n  setGlobal({ currentUser: user })\n  return user\n}\n\nexport async function signOut() {\n  await deleteSession()\n  Honeybadger.resetContext();\n  // TODO: There should be a way of doing this without a hard redirect\n  (window.location as any) = '/'\n}\n\nexport function toggleLocale() {\n  // const newLocale = cookieLocale() === 'en' ? 'es' : 'en'\n  // CookieJar.set(Cookie.LOCALE, newLocale)\n  // setGlobal({ locale: newLocale })\n  // i18n.activate(newLocale)\n  // // TODO: How do we stop doing this?\n  // window.location.reload()\n}\n\nexport function cookieLocale(): GLLocales {\n  const locale = CookieJar.get(Cookie.LOCALE) || 'en'\n  return locale as GLLocales\n}\n\ni18n.activate(cookieLocale())\n\naddReducer('increment', (global, dispatch, i = 0) => ({\n  x: global.x + i,\n}))\n\n// TODO: This doesn't work\n// const d = useDispatch('increment')\n","import React from 'react'\nimport { Page, Navbar, Block } from 'framework7-react'\nimport { Trans } from '@lingui/macro'\n\nexport default function NotFoundPage() {\n  return (\n    <Page>\n      <Navbar title=\"Not found\" />\n      <Block strong>\n        <p>\n          <Trans id=\"NotFoundPage.sorry\">Sorry</Trans>\n        </p>\n        <p>\n          <Trans id=\"NotFoundPage.not_found\">Requested content not found.</Trans>\n        </p>\n      </Block>\n    </Page>\n  )\n}\n","interface Props {\n  test: boolean\n  children: any\n}\n\nexport default function If({ test, children }: Props) {\n  return test && children !== undefined\n    ? children\n    : null\n}\n","import { DateTime } from 'luxon'\n\nexport interface ReleaseData {\n  version: string\n  date: DateTime\n  notesEn: string\n  notesEs: string\n  whatsNewEn: string[]\n  whatsNewEs: string[]\n  bugFixesEn: string[]\n  bugFixesEs: string[]\n}\n\nfunction date(value: string) {\n  return DateTime.fromFormat(value, 'D')\n}\n\nconst releaseData: ReleaseData[] = [\n  {\n    version: '1.2.0',\n    date: date('11/20/2020'),\n    notesEn: `\n    It's been far too long. Happy Friday!\n    `,\n    notesEs: '',\n    whatsNewEn: [\n      'Welcome Durham City and County! Thanks to a grant, business in Durham can use Greenlight for free!',\n      \"We've added community health worker requests to the dashboard! You can now make health social service requests directly from community members of the Triangle area.\",\n      \"We've added maps and COVID statistics for you to investigate for the state\",\n      'A new settings page is available which allows you to update your notification preferences and make changes to your user account',\n      // 'This releases page!',\n      // \"We've added the Duke COVID testing hotline\",\n      // \"We've added more Spanish language translations\",\n      // \"The app will now tell you if you're disconnected from the internet.\",\n      // 'The app will now tell you if our servers are down.',\n      // \"We've a bug report button to the app.\",\n    ],\n    whatsNewEs: [\n      // '¡Esta página de lanzamientos!',\n      // 'Hemos agregado la línea directa de prueba de Duke COVID',\n      // 'Hemos agregado más traducciones al español',\n      // 'La aplicación ahora te dirá si estás desconectado de Internet',\n      // 'La aplicación ahora le dirá si nuestros servidores están caídos.',\n      // 'Tenemos un botón de informe de errores en la aplicación.',\n    ],\n    bugFixesEn: [\n      \"Need to fix: Spanish language is not currently loaded. We're working on a fix.\",\n    ],\n    bugFixesEs: [\n      // 'Algunos usuarios informaron problemas en versiones anteriores de Internet Explorer. Aunque no recomendamos utilizar IE, creemos que debería poder utilizarlo para enviar una encuesta',\n    ],\n  },\n  {\n    version: '1.1.0',\n    date: date('11/6/2020'),\n    notesEn: `\n    Happy Friday! We've added a lot a new changes to the app.\n    `,\n    notesEs: `\n    TODO:\n    `,\n    whatsNewEn: [\n      'This releases page!',\n      \"We've added the Duke COVID testing hotline\",\n      \"We've added more Spanish language translations\",\n      \"The app will now tell you if you're disconnected from the internet.\",\n      'The app will now tell you if our servers are down.',\n      \"We've a bug report button to the app.\",\n    ],\n    whatsNewEs: [\n      '¡Esta página de lanzamientos!',\n      'Hemos agregado la línea directa de prueba de Duke COVID',\n      'Hemos agregado más traducciones al español',\n      'La aplicación ahora te dirá si estás desconectado de Internet',\n      'La aplicación ahora le dirá si nuestros servidores están caídos.',\n      'Tenemos un botón de informe de errores en la aplicación.',\n    ],\n    bugFixesEn: [\n      \"Some users reported issues on older versions of Internet Explorer. While we don't recommend using IE, we think you should be able to submit a survey with it.\",\n    ],\n    bugFixesEs: [\n      'Algunos usuarios informaron problemas en versiones anteriores de Internet Explorer. Aunque no recomendamos utilizar IE, creemos que debería poder utilizarlo para enviar una encuesta',\n    ],\n  },\n  {\n    version: '1.0.0',\n    date: date('10/12/2020'),\n    notesEn: `\n    Welcome to our first release! 🎉&nbsp;\n    We're so happy to have you with us.\n    Please reach out if you need any help, have questions or feedback.\n    We want to make sure you have an amazing experience with us.\n    `,\n    notesEs: `\n    ¡Bienvenido a nuestro primer lanzamiento! 🎉&nbsp;\n    ¡Estamos muy felices de tenerte con nosotros!\n    Comuníquese con nosotros si necesita ayuda, tiene preguntas o comentarios.\n    Queremos asegurarnos de que tenga una experiencia increíble con nosotros.\n    `,\n    whatsNewEn: [],\n    whatsNewEs: [],\n    bugFixesEn: [],\n    bugFixesEs: [],\n  },\n]\n\nexport default releaseData\n","export default class Version {\n  major: number\n\n  minor: number\n\n  patch: number\n\n  constructor(value: string) {\n    const matches = value.match(/(\\d+\\.)(\\d+\\.)(\\d+)/)\n    if (!matches) throw new Error(`${value} is not a valid version string`)\n    this.major = parseInt(matches[1], 10)\n    this.minor = parseInt(matches[2], 10)\n    this.patch = parseInt(matches[3], 10)\n  }\n\n  valueOf() {\n    return this.major * 1000000 + this.minor * 1000 + this.patch\n  }\n}\n","import React from 'react'\nimport releaseData from 'src/data/releases'\nimport Version from 'src/misc/Version'\nimport { Icon, Link } from 'framework7-react'\nimport './ReleaseCard.css'\nimport { useReducer } from 'reactn'\nimport { Trans } from '@lingui/macro'\nimport { paths } from 'src/routes'\nimport CookieJar, { Cookie } from 'src/misc/CookieJar'\n\nfunction setLastVersionCookie() {\n  CookieJar.set(Cookie.LAST_VERSION, releaseData[0].version)\n}\n\nfunction showNewRelease(): boolean {\n  const rawLastVersion = CookieJar.get(Cookie.LAST_VERSION)\n  if (!rawLastVersion) {\n    return true\n  }\n\n  const lastVersion = new Version(rawLastVersion)\n  const latestVersion = new Version(releaseData[0].version)\n  if (releaseData[0].date.diffNow('days').days > 5) {\n    return false\n  }\n  return latestVersion > lastVersion\n}\n\nexport default function ReleaseCard(): JSX.Element {\n  const [,forceUpdate] = useReducer((x) => x + 1, 0)\n\n  if (showNewRelease()) {\n    return (\n      <div className=\"ReleaseCard\">\n        <div className=\"ReleaseCard-title\">\n\n          <div style={{ width: '50%', display: 'inline-block' }}>\n            <Trans id=\"ReleaseCard.title\">You're updated to v{releaseData[0].version}!</Trans>\n          </div>\n          <div\n            style={{\n              width: '50%',\n              display: 'inline-block',\n              textAlign: 'right',\n            }}\n          >\n            <div\n              className=\"ReleaseCard-close\"\n              onClick={() => {\n                setLastVersionCookie()\n                forceUpdate()\n              }}\n            >\n              <Icon f7=\"xmark\" style={{ fontSize: '1em' }} />\n            </div>\n          </div>\n        </div>\n        <div className=\"ReleaseCard-action\">\n          <div className=\"ReleaseCard-action\">\n            <div style={{ width: '50%', display: 'inline-block' }}>\n              <Link href={paths.releasesPath}>\n                <Trans id=\"ReleaseCard.action\">See What's New 🎉</Trans>\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n  return (<></>)\n}\n","import React from 'react'\nimport * as jdenticon from 'jdenticon'\nimport { User } from '../models/User'\nimport { GreenlightStatusTypes } from '../models/GreenlightStatus'\n\nconst configs: { [k in GreenlightStatusTypes]: jdenticon.JdenticonConfig } = {\n  recovery: {\n    hues: [328],\n    lightness: {\n      color: [0.5, 1],\n      grayscale: [1, 1],\n    },\n    saturation: {\n      color: 0.5,\n      grayscale: 1,\n    },\n    backColor: '#feecfe',\n  },\n  pending: {\n    hues: [50],\n    lightness: {\n      color: [0.5, 1],\n      grayscale: [1, 1],\n    },\n    saturation: {\n      color: 0.5,\n      grayscale: 1,\n    },\n    backColor: '#f9f1bb',\n  },\n  cleared: {\n    hues: [146],\n    lightness: {\n      color: [0.5, 1],\n      grayscale: [1, 1],\n    },\n    saturation: {\n      color: 0.5,\n      grayscale: 1,\n    },\n    backColor: '#abe8d6',\n  },\n  unknown: {\n    hues: [146],\n    lightness: {\n      color: [0.6, 0.9],\n      grayscale: [1, 1],\n    },\n    saturation: {\n      color: 0.0,\n      grayscale: 0.0,\n    },\n    backColor: '#eeeeee',\n  },\n  absent: {\n    hues: [216],\n    lightness: {\n      color: [0.5, 1],\n      grayscale: [1, 1],\n    },\n    saturation: {\n      color: 0.5,\n      grayscale: 1,\n    },\n    backColor: '#ecf2fe',\n  },\n}\n\ntype Props = {\n  user: User\n  size: number\n}\n\nconst UserJDenticon = ({ user, size }: Props) => {\n  jdenticon.configure(configs[user.greenlightStatus().status])\n  return (\n    <div\n      // dangerouslySetInnerHTML={{ __html: jdenticon.toSvg(user.id, size) }}\n      style={{\n        // border: '1px solid #00000022',\n        borderRadius: `${size}px`,\n        background: `url(data:image/svg+xml;base64,${btoa(\n          jdenticon.toSvg(user.id, size),\n        )})`,\n        backgroundPosition: 'center',\n        height: `${size}px`,\n        width: `${size}px`,\n        textAlign: 'center',\n        lineHeight: `${size}px`,\n        fontWeight: 'bold',\n        color: 'var(--gl-color-dark)',\n      }}\n    >\n      {user.firstName[0]}\n    </div>\n  )\n}\n\nexport default UserJDenticon\n","import React from 'reactn'\nimport {\n  AccordionContent,\n  Page,\n  List,\n  ListItem,\n  Navbar,\n  Link,\n  BlockTitle,\n  NavTitle,\n  NavRight,\n  Icon,\n} from 'framework7-react'\nimport { esExclaim, greeting } from 'src/util'\nimport If from 'src/components/If'\nimport { dynamicPaths, paths } from 'src/routes'\nimport colors from 'src/misc/colors'\n\nimport { t, Trans } from '@lingui/macro'\nimport { User } from 'src/models'\n\nimport { ReactNComponent } from 'reactn/build/components'\nimport ReleaseCard from 'src/components/ReleaseCard'\nimport UserJDenticon from '../components/UserJDenticon'\n\nfunction UserList({ users }: { users: User[] }) {\n  return (\n    <List>\n      {users.map((user) => (\n        <ListItem key={user.id} accordionItem link=\"#\" title={user.firstName} after={user.greenlightStatus().title()}>\n          <div slot=\"media\">\n            <UserJDenticon user={user} size={29} />\n          </div>\n          <AccordionContent>\n            <List>\n              {/* <ListItem\n            link={`/users/${user.id}/covid-test`}\n            title=\"Submit COVID Test\"\n          ></ListItem> */}\n              <ListItem\n                link={dynamicPaths.userGreenlightPassPath(user.id)}\n                title={t({ id: 'DashboardPage.greenlight_pass', message: 'Greenlight Pass' })}\n              />\n              <If test={user.hasNotSubmittedOwnSurvey()}>\n                <ListItem\n                  link={dynamicPaths.userSurveysNewPath(user.id, { single: true })}\n                  title=\"Submit Symptom Survey\"\n                />\n              </If>\n              {/* <ListItem\n            link={`/users/${user.id}/absence`}\n            title=\"Schedule Absence\"\n          ></ListItem> */}\n              {/* <ListItem\n            link={`/users/${user.id}/locations`}\n            title=\"Locations\"\n          ></ListItem> */}\n            </List>\n          </AccordionContent>\n        </ListItem>\n      ))}\n    </List>\n  )\n}\n\nexport default class DashboardPage extends ReactNComponent<any, any> {\n  render() {\n    const user = this.global.currentUser\n    if (!user) {\n      this.$f7router.navigate(paths.rootPath)\n      return <></>\n    }\n\n    return (\n      <Page>\n        <Navbar>\n          <NavTitle>Greenlight</NavTitle>\n          <NavRight>\n            <Link href={paths.settingsPath}>\n              <Icon f7=\"person_circle\" />\n            </Link>\n          </NavRight>\n        </Navbar>\n\n        <BlockTitle>\n          <b>\n            {esExclaim()}{greeting()}, {user.firstName}!\n          </b>\n        </BlockTitle>\n\n        <If test={user.showSubmissionPanelForToday()}>\n          <Link href={paths.userSeqSurveysNewPath}>\n            <div className=\"GLCard\">\n              <div className=\"GLCard-title\">\n                <Trans id=\"DashboardPage.submit_check_in\">Submit Daily Check-In</Trans>\n              </div>\n              <div className=\"GLCard-body\" style={{ color: colors.greenDark }}>\n                <Trans id=\"DashboardPage.needs_to_submit\">\n                  How are you today? You still need to fill out surveys for {user.usersNotSubmittedText()}.\n                </Trans>\n              </div>\n              <div className=\"GLCard-action\">\n                <div className=\"GLCard-action\">\n                  <div style={{ width: '80%', display: 'inline-block' }}>\n                    <Trans id=\"DashboardPage.go_to_check_in\">Go to Check-In</Trans>\n                  </div>\n                  <div\n                    style={{\n                      width: '20%',\n                      display: 'inline-block',\n                      textAlign: 'right',\n                    }}\n                  >\n                    <Icon f7=\"arrow_right\" />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </Link>\n        </If>\n\n        <If test={user.showSubmissionPanelForTomorrow()}>\n          <Link href={paths.userSeqSurveysNewPath}>\n            <div className=\"GLCard\">\n              <div className=\"GLCard-title\">\n                <Trans id=\"DashboardPage.submit_check_in\">Submit Daily Check-In</Trans>\n              </div>\n              <div className=\"GLCard-body\" style={{ color: colors.greenDark }}>\n                <Trans id=\"DashboardPage.needs_to_submit_for_tomorrow\">\n                  Get ready for tomorrow! You need to fill out surveys for\n                  {' '}{user.usersNotSubmittedForTomorrowText()}.\n                </Trans>\n              </div>\n              <div className=\"GLCard-action\">\n                <div className=\"GLCard-action\">\n                  <div style={{ width: '50%', display: 'inline-block' }}>\n                    <Trans id=\"DashboardPage.go_to_check_in\">Go to Check-In</Trans>\n                  </div>\n                  <div\n                    style={{\n                      width: '50%',\n                      display: 'inline-block',\n                      textAlign: 'right',\n                    }}\n                  >\n                    <Icon f7=\"arrow_right\" />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </Link>\n        </If>\n\n        <ReleaseCard />\n\n        <If test={!user.hasChildren() && user.greenlightStatus().isValidForToday()}>\n          <UserList users={[user]} />\n        </If>\n\n        <If test={user.hasChildren()}>\n          <BlockTitle>\n            {user.hasLocationThatRequiresSurvey() ? (\n              <Trans id=\"DashboardPage.your_family\">Your Family</Trans>\n            ) : (\n              <Trans id=\"DashboardPage.your_children\">Your Children</Trans>\n            )}\n          </BlockTitle>\n          <UserList users={user.usersExpectedToSubmit()} />\n        </If>\n        <BlockTitle>\n          <Trans id=\"DashboardPage.resources_title\">Resources For You</Trans>\n        </BlockTitle>\n        <List>\n          <ListItem\n            title={t({ id: 'DashboardPage.duke_testing_title', message: 'Testing at Duke' })}\n            footer={t({ id: 'DashboardPage.duke_testing_footer', message: 'Connect to streamlined testing 8am to 5pm any day' })}\n            link={paths.dukeScheduleTestPath}\n          >\n            <Icon slot=\"media\" f7=\"thermometer\" />\n          </ListItem>\n\n          <ListItem\n            external\n            link={paths.chwRequestPath}\n            title={t({ id: 'DashboardPage.asfff', message: 'Connect to Care' })}\n            footer={t({\n              id: 'asdf',\n              message: 'Send a care request to a community health worker.',\n            })}\n          >\n            <Icon slot=\"media\" f7=\"heart\" />\n          </ListItem>\n          {/* https://www.communitycarenc.org/what-we-do/supporting-primary-care */}\n          <ListItem\n            external\n            link=\"tel:1-877-490-6642\"\n            title={t({ id: 'DashboardPage.triage_title', message: 'Contact COVID-19 Triage' })}\n            footer={t({ id: 'DashboardPage.triage_footer', message: 'Call 7am-11pm any day' })}\n          >\n            <Icon slot=\"media\" f7=\"phone\" />\n          </ListItem>\n          <ListItem\n            link={paths.ncStatewideStatsPath}\n            // link=\"tel:1-877-490-6642\"\n            title={t({ id: 'DashboardPage.ffasfa', message: 'NC COVID-19 Data' })}\n            footer={t({ id: 'DashboardPage.affafa', message: 'COVID-19 maps and statistics from across the state' })}\n          >\n            <Icon slot=\"media\" f7=\"graph_square\" />\n          </ListItem>\n          <ListItem\n            title={t({ id: 'DashboardPage.support_titless', message: 'Contact Support' })}\n            footer={t({ id: 'DashboardPage.support_footerss', message: 'Have any questions? Message our support team.' })}\n            external\n            link=\"mailto:help@greenlightready.com\"\n          >\n            <Icon slot=\"media\" f7=\"envelope\" />\n          </ListItem>\n          {/* https://ncchildcare.ncdhhs.gov/Portals/0/documents/pdf/P/Parent_and_Families_School_Age_Child_Care.pdf?ver=2020-08-26-122445-963 */}\n          <ListItem\n            external\n            link=\"tel:1-888-600-1685\"\n            title={t({ id: 'DashboardPage.child_care_title', message: 'Child Care Hotline' })}\n            footer={t({\n              id: 'DashboardPage.child_care_footer',\n              message: 'Child care referrals available 8am-5pm Monday-Friday',\n            })}\n          >\n            <Icon slot=\"media\" f7=\"phone\" />\n          </ListItem>\n          <ListItem\n            external\n            link=\"https://www.dcopublichealth.org/services/communicable-diseases/coronavirus-disease-2019/covid-19-testing\"\n            target=\"_blank\"\n            title={t({ id: 'DashboardPage.testing_title', message: 'Find other Testing' })}\n            footer={t({ id: 'DashboardPage.testing_footer', message: 'Testing Sites Near You' })}\n          >\n            <Icon slot=\"media\" f7=\"search\" />\n          </ListItem>\n        </List>\n      </Page>\n    )\n  }\n}\n","import React from 'reactn'\nimport {\n  Page,\n  Block,\n  Button,\n} from 'framework7-react'\n\nimport './SplashPage.css'\nimport { toggleLocale } from 'src/initializers/providers'\nimport { Trans } from '@lingui/macro'\nimport releaseData from 'src/data/releases'\nimport { paths } from 'src/routes'\n\nexport default class SplashPage extends React.Component<any, any> {\n  render() {\n    return (\n      <Page className=\"SplashPage\" noToolbar noNavbar noSwipeback loginScreen>\n        <Block>\n          <div className=\"welcome\">\n            <Trans id=\"SplashPage.welcome\">Welcome to</Trans>\n          </div>\n          <div className=\"logo\">\n            Greenlight\n            <span>.</span>\n          </div>\n\n          <Button outline href={paths.signInPath}>\n            <Trans id=\"SplashPage.sign_in\">\n              Sign In\n            </Trans>\n          </Button>\n\n          <Button outline href={paths.newUserPath}>\n            <Trans id=\"SplashPage.create_account\">\n              Create Account\n            </Trans>\n          </Button>\n          <Button outline href={paths.durhamRegistationPath}>\n            <Trans id=\"SplashPage.register_business\">\n              Register Business\n            </Trans>\n          </Button>\n\n          <Button outline onClick={() => toggleLocale()} style={{ border: 0 }}>\n            <Trans id=\"SplashPage.choose_language\">\n              En Español\n            </Trans>\n          </Button>\n        </Block>\n\n        <p className=\"copyright\">\n          &copy;\n          {(new Date()).getFullYear()}\n          {' '}\n          Greenlight Ready LLC<br />\n          <Trans id=\"Common.version\">Version</Trans>\n          {' '}\n          {releaseData[0].version}\n        </p>\n      </Page>\n    )\n  }\n}\n","import React from 'reactn'\nimport { ListInput } from 'framework7-react'\nimport { validEmail, validPhone } from 'src/util'\nimport { defineMessage } from '@lingui/macro'\n\nexport type EmailOrPhoneInputTypes = 'email' | 'phone' | 'blank' | 'unknown'\n\ninterface State {\n  inputType: EmailOrPhoneInputTypes\n  seenInput: boolean\n  errorMessage: string\n  errorMessageForce: boolean\n  value: string\n}\n\nexport default class EmailOrPhoneListInput extends React.Component<ListInput.Props, State> {\n  // Required for this to be collected in the List\n  static displayName = 'F7ListItem'\n\n  listInput = React.createRef<ListInput>()\n\n  state: State = {\n    inputType: 'blank',\n    seenInput: false,\n    errorMessage: '',\n    errorMessageForce: false,\n    value: String(this.props.value),\n  }\n\n  validate(value: string): boolean {\n    if (value === '') {\n      this.setState({\n        inputType: 'blank',\n        errorMessage: this.global.i18n._(\n          defineMessage({\n            id: 'EmailOrPhoneListInput.email_or_phone_missing',\n            message: 'Please enter your email or mobile number.',\n          }),\n        ),\n      })\n      this.setState({ errorMessageForce: true })\n      return false\n    }\n    if (validEmail(value)) {\n      this.setState({ inputType: 'email' })\n    }\n\n    if (validPhone(value)) {\n      this.setState({ inputType: 'phone' })\n    }\n\n    if (!validEmail(value) && !validPhone(value)) {\n      this.setState({\n        inputType: 'unknown',\n        errorMessage: this.global.i18n._(\n          defineMessage({\n            id: 'EmailOrPhoneListInput.email_or_phone_invalid',\n            message: 'Invalid email or mobile number.',\n          }),\n        ),\n      })\n      this.setState({ errorMessageForce: true })\n      return false\n    }\n\n    this.setState({ errorMessage: '' })\n    this.setState({ errorMessageForce: false })\n    return true\n  }\n\n  onBlur(e: React.ChangeEvent<HTMLInputElement>) {\n    if (this.state.seenInput === false) this.setState({ seenInput: true })\n    this.validate(e.target.value)\n  }\n\n  onChange(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({ value: e.target.value })\n    if (this.state.seenInput) this.validate(e.target.value)\n  }\n\n  render() {\n    return (\n      <ListInput\n        ref={this.listInput}\n        type=\"text\"\n        value={this.state.value}\n        validateOnBlur\n        onBlur={this.onBlur.bind(this)}\n        onChange={this.onChange.bind(this)}\n        errorMessage={this.state.errorMessage}\n        errorMessageForce={this.state.errorMessageForce}\n        placeholder={\n            this.global.i18n._(\n              defineMessage({ id: 'EmailOrPhoneListInput.email_or_phone_placeholder', message: 'Email or mobile phone number.' }),\n            )\n          }\n        onInput={this.props.onInput}\n      />\n    )\n  }\n}\n","import React from 'reactn'\n\nimport {\n  Page,\n  List,\n  ListInput,\n  Navbar,\n  Link,\n  Block,\n  Button,\n  BlockFooter,\n  ListItem,\n} from 'framework7-react'\n\nimport EmailOrPhoneListInput from 'src/components/EmailOrPhoneListInput'\nimport './SignInPage.css'\nimport { createSession, getCurrentUser } from 'src/api'\nimport { defineMessage, Trans } from '@lingui/macro'\nimport { paths, dynamicPaths } from 'src/routes'\nimport logger from 'src/logger'\n\ninterface SignInState {\n  emailOrMobile: string\n  password: string\n  rememberMe: boolean\n}\n\nexport default class SignInPage extends React.Component<Record<string, any>, SignInState> {\n  emailOrMobileRef = React.createRef<EmailOrPhoneListInput>()\n\n  passwordRef = React.createRef<ListInput>()\n\n  state: SignInState = {\n    emailOrMobile: '',\n    password: '',\n    rememberMe: false,\n  }\n\n  validate() {\n    const passwordValid = this.$f7.input.validateInputs('#sign-in-form')\n    const emailOrMobileValid = this.emailOrMobileRef.current?.validate(this.emailOrMobileRef.current?.state.value || '')\n    return passwordValid && emailOrMobileValid\n  }\n\n  // TODO: Refactor: Extract this pattern\n  // TODO: Improve error messages\n  async submit() {\n    if (!this.validate()) {\n      return\n    }\n    this.$f7.dialog.preloader(\n      this.global.i18n._(defineMessage({ id: 'SignInPage.signing_you_in', message: 'Signing you in...' })),\n    )\n    try {\n      await createSession(this.state.emailOrMobile, this.state.password, this.state.rememberMe)\n\n      const user = await getCurrentUser()\n      this.$f7.dialog.close()\n      this.setGlobal({ currentUser: user })\n      this.$f7router.navigate(dynamicPaths.currentUserHomePath())\n    } catch (error) {\n      this.$f7.dialog.close()\n      logger.error(error)\n      this.$f7.dialog.alert(\n        this.global.i18n._(defineMessage({ id: 'SignInPage.credentials_incorrect', message: 'The credentials your provided are incorrect.' })),\n        this.global.i18n._(defineMessage({ id: 'SignInPage.sign_in_failed', message: 'Sign In Failed' })),\n      )\n    }\n  }\n\n  render() {\n    return (\n      <Page className=\"SignInPage\" noToolbar>\n\n        <Navbar\n          title={\n          this.global.i18n._(\n            defineMessage({ id: 'SignInPage.title', message: 'Sign In' }),\n          )\n}\n        />\n\n        <div style={{ marginTop: '20px' }} className=\"greenlight-logo\">\n          Greenlight\n          <span>.</span>\n        </div>\n\n        <List form id=\"sign-in-form\">\n          <EmailOrPhoneListInput\n            ref={this.emailOrMobileRef}\n            value={this.state.emailOrMobile}\n            onInput={(e) => {\n              this.setState({ emailOrMobile: e.target.value })\n            }}\n          />\n          <ListInput\n            type=\"password\"\n            ref={this.passwordRef}\n            placeholder={\n              this.global.i18n._(\n                defineMessage({ id: 'SignInPage.password_placeholder', message: 'Password' }),\n              )\n            }\n            validateOnBlur\n            value={this.state.password}\n            required\n            onInput={(e) => {\n              this.setState({ password: e.target.value })\n            }}\n            errorMessage={\n              this.global.i18n._(\n                defineMessage({ id: 'SignInPage.password_missing', message: 'Please enter your password.' }),\n              )\n            }\n          />\n          <ListItem\n            checkbox\n            title={\n              this.global.i18n._(\n                defineMessage({ id: 'SignInPage.remember_me', message: 'Remember me' }),\n              )\n            }\n            onChange={(e) => {\n              this.setState({ rememberMe: e.target.checked })\n            }}\n          />\n          <Block>\n            <Button outline fill onClick={() => this.submit()}>\n              <Trans id=\"SignInPage.sign_in\">\n                Sign In\n              </Trans>\n            </Button>\n          </Block>\n        </List>\n        <List>\n          <BlockFooter>\n            <Link href={paths.magicSignInPath}>\n              <Trans id=\"SignInPage.forgot_password\">\n                Forgot password?\n              </Trans>\n            </Link>\n          </BlockFooter>\n        </List>\n      </Page>\n    )\n  }\n}\n","import React from 'reactn'\nimport {\n  Page,\n  List,\n  Navbar,\n  Block,\n  Button,\n  ListItem,\n} from 'framework7-react'\n\nimport { defineMessage, Trans } from '@lingui/macro'\n\nimport EmailOrPhoneListInput from 'src/components/EmailOrPhoneListInput'\nimport './MagicSignInPage.css'\nimport { Dict } from 'src/types'\nimport { createMagicSignIn } from 'src/api'\nimport { assertNotNull } from 'src/util'\nimport logger from 'src/logger'\n\ninterface State {\n  emailOrMobile: string\n  rememberMe: boolean\n  submitted: boolean\n}\n\nexport default class MagicSignInPage extends React.Component<Dict<any>, State> {\n  emailOrMobileRef = React.createRef<EmailOrPhoneListInput>()\n\n  state: State = {\n    emailOrMobile: '',\n    rememberMe: false,\n    submitted: false,\n  }\n\n  async submit() {\n    const input = this.emailOrMobileRef?.current\n\n    assertNotNull(input)\n\n    const isValid = input.validate(input.state.value || '')\n    if (!isValid) return\n    try {\n      await createMagicSignIn(this.state.emailOrMobile, this.state.rememberMe)\n      const alertTitle = this.global.i18n._(defineMessage({ id: 'MagicSignInPage.sign_in_sent', message: 'Magic Sign In Sent' }))\n      if (this.state.emailOrMobile.includes('@')) {\n        this.$f7.dialog.alert(\n          this.global.i18n._(\n            defineMessage({ id: 'MagicSignInPage.will_get_email', message: 'You should receive an email shortly with a magic sign in link.' }),\n          ),\n          alertTitle,\n        )\n      } else {\n        this.$f7.dialog.alert(\n          this.global.i18n._(\n            defineMessage({ id: 'MagicSignInPage.will_get_text', message: 'You should receive a text shortly with a magic sign in link.' }),\n          ),\n          alertTitle,\n        )\n      }\n    } catch (e) {\n      logger.error(e.response)\n      this.$f7.dialog.alert(\n        this.global.i18n._(\n          defineMessage({ id: 'MagicSignInPage.failed_setup', message: \"We couldn't set up a magic sign for that info.\" }),\n        ),\n        this.global.i18n._(\n          defineMessage({ id: 'MagicSignInPage.sign_in_failed', message: 'Magic Sign In Failed' }),\n        ),\n      )\n    }\n  }\n\n  render() {\n    return (\n      <Page className=\"MagicSignInPage\" noToolbar noSwipeback loginScreen>\n        <Navbar title={this.global.i18n._(defineMessage({ id: 'MagicSignInPage.title', message: 'Magic Sign In' }))} />\n        <div className=\"greenlight-logo\">\n          Greenlight\n          <span>.</span>\n        </div>\n        <List form>\n          <Block>\n            <Trans id=\"MagicSignInPage.directions\">\n              Enter your email or mobile number, and we'll send you a magic sign in link.\n            </Trans>\n          </Block>\n          <EmailOrPhoneListInput\n            value={this.state.emailOrMobile}\n            ref={this.emailOrMobileRef}\n            onInput={(e) => {\n              this.setState({ emailOrMobile: e.target.value })\n            }}\n          />\n          <ListItem\n            checkbox\n            title={this.global.i18n._(defineMessage({ id: 'MagicSignInPage.remember_me', message: 'Remember Me' }))}\n            onInput={(e) => {\n              this.setState({ rememberMe: e.target.value })\n            }}\n          />\n          <Block>\n            <Button outline fill onClick={() => { this.submit() }}>\n              <Trans id=\"MagicSignInPage.request_magic_link\">\n                Request Magic Link\n              </Trans>\n            </Button>\n          </Block>\n        </List>\n      </Page>\n    )\n  }\n}\n","export default __webpack_public_path__ + \"static/media/welcome-doctor.63bc47b7.svg\";","import * as React from 'react'\nimport logger from 'src/logger'\n\ninterface WhenProps {\n  children: any\n  // eslint-disable-next-line react/no-unused-prop-types\n  value?: any\n}\nexport function When({ children }: WhenProps) {\n  return <>{children === undefined ? null : children}</>\n}\n\ninterface Props {\n  test?: any\n  children: React.ReactNode[] | React.ReactNode\n}\n\nexport function Case({ test, children }: Props) {\n  const matches = React.Children.toArray(children).filter((child) => {\n    if (React.isValidElement(child)) {\n      return child.props.value === undefined || child.props.value === test\n    }\n    return false\n  })\n\n  if (matches.length === 0) {\n    return <></>\n  }\n  if (matches.length > 1) {\n    logger.dev(`<Case /> statement matched multiple children: ${test}`)\n  }\n  return <>{matches[0]}</>\n}\n","class ApplicationError extends Error {}\n/**\n * Raised when the current user is missing.\n */\nexport class NoCurrentUserError extends ApplicationError {\n  constructor(message?: string) {\n    message = message || 'Current user not found.'\n    super(message)\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unused-expressions */\nimport React from 'reactn'\n\nimport welcomeDoctorImage from 'src/images/welcome-doctor.svg'\n\nimport {\n  Page,\n  Block,\n  Button,\n  Toolbar,\n  Link,\n  Row,\n  Col,\n  Sheet,\n  PageContent,\n} from 'framework7-react'\n\nimport { Case, When } from 'src/components/Case'\n\nimport { esExclaim, greeting } from 'src/util'\nimport { User } from 'src/models/User'\nimport { paths } from 'src/routes'\nimport { ReactNComponent } from 'reactn/build/components'\nimport { NoCurrentUserError } from 'src/errors'\n\nimport { toggleLocale, signOut } from 'src/initializers/providers'\nimport {\n  plural, Trans,\n} from '@lingui/macro'\n\ninterface State {\n  termsOpened: boolean\n  currentUser: User\n}\n\nexport default class WelcomePage extends ReactNComponent<any, State> {\n  constructor(props: any) {\n    super(props)\n\n    if (!this.global.currentUser) {\n      throw new NoCurrentUserError()\n    }\n    this.state = {\n      termsOpened: false,\n      currentUser: this.global.currentUser,\n    }\n  }\n\n  totalLocations() {\n    const user = this.state.currentUser\n    return (\n      user.locations__HACK().length + user.children.map((x) => x.locations__HACK().length).reduce((x, y) => x + y, 0)\n    )\n  }\n\n  whoDoYouFillSurveysFor() {\n    const user = this.state.currentUser\n    const fillForSelf = user.locationAccounts.length > 0\n    const fillForChildren = user.children.length > 0\n    if (fillForSelf && fillForChildren) {\n      return (\n        <Trans id=\"WelcomePage.fill_for_self_and_children\">\n          Every day you'll need to fill out symptom surveys for you and your{' '}\n          {plural(user.children.length, { one: 'child', other: 'children' })}.\n        </Trans>\n      )\n    }\n    if (fillForSelf) {\n      return (\n        <Trans id=\"WelcomePage.fill_for_self\">Every day you'll need to fill out symptom surveys for yourself.</Trans>\n      )\n    }\n    if (fillForChildren) {\n      return (\n        <Trans id=\"WelcomePage.fill_children\">\n          Every day you'll need to fill out symptom surveys for your{' '}\n          {plural(user.children.length, { one: 'child', other: 'children' })}.\n        </Trans>\n      )\n    }\n\n    return (\n      <Trans id=\"WelcomePage.fill_for_no_one_error\">\n        It looks like your account has not been set up properly.\n        Please contact greenlight at <Link href=\"mailto:help@greenlightready.com\">help@greenlightready.com</Link>.\n      </Trans>\n    )\n  }\n\n  render() {\n    const user = this.state.currentUser\n    const locationCount = this.totalLocations()\n    return (\n      <Page>\n        <Block>\n          <h1>\n            {esExclaim()}{greeting()}! &nbsp;&nbsp;&nbsp;&nbsp;\n            <Link style={{ fontSize: '12px' }} onClick={() => toggleLocale()}>\n              <Trans id=\"WelcomePage.toggle_locale\">En Español</Trans>\n            </Link>\n          </h1>\n          <Case test={locationCount}>\n            <When value={0}>\n              <Trans id=\"WelcomePage.account_misconfigured\">\n                Your account hasn't been configured properly. Please contact us at help@greenlightready.com.\n              </Trans>\n            </When>\n            <When>\n              <p>\n                <Trans id=\"WelcomePage.welcome\">\n                  Hi {user.firstName}! You've been added\n                  by {plural(this.totalLocations(), { one: '# location', other: '# locations' })} to Greenlight's secure COVID-19 monitoring platform.\n                </Trans>\n              </p>\n              <p>\n                <Trans id=\"WelcomePage.instructions\">\n                  {this.whoDoYouFillSurveysFor()}\n                  We will not share any data without your\n                  permission.\n                </Trans>\n              </p>\n            </When>\n          </Case>\n\n          <img alt=\"Welcome to Greenlight!\" src={welcomeDoctorImage} />\n          <p>\n            <Trans id=\"WelcomePage.terms_and_conditions\">\n              By continuing, you accept Greenlight's{' '}\n              <Link\n                onClick={() => {\n                  this.setState({ termsOpened: true })\n                }}\n              > Terms and Conditions\n              </Link>.\n            </Trans>\n          </p>\n        </Block>\n        <Block>\n          <Row tag=\"p\">\n            <Col tag=\"span\">\n              <Button large onClick={() => signOut()}><Trans id=\"Common.sign_out\">Sign Out</Trans></Button>\n            </Col>\n            <Col tag=\"span\">\n              <Button\n                large\n                fill\n                href={paths.welcomeReviewPath}\n              >\n                <Trans id=\"Common.continue\">Continue</Trans>\n              </Button>\n            </Col>\n          </Row>\n        </Block>\n        <Sheet\n          opened={this.state.termsOpened}\n          onSheetClosed={() => {\n            this.setState({ termsOpened: false })\n          }}\n        >\n          <Toolbar>\n            <div className=\"left\" />\n            <div className=\"right\">\n              <Link sheetClose><Trans id=\"Common.close\">Close</Trans></Link>\n            </div>\n          </Toolbar>\n          {/*  Scrollable sheet content */}\n          <PageContent>\n            {/* TODO: Host this elsewhere. */}\n            <iframe src=\"/terms.html\" style={{ width: '100%', border: 0, height: '90%' }} />\n          </PageContent>\n        </Sheet>\n      </Page>\n    )\n  }\n}\n","import React from 'reactn'\nimport {\n  Page, Navbar, Block, List, ListItem, ListInput, Button,\n} from 'framework7-react'\n\nimport { updateUser } from 'src/api'\nimport { dynamicPaths, paths } from 'src/routes'\nimport { deleteBlanks } from 'src/util'\nimport { ReactNComponent } from 'reactn/build/components'\nimport { NoCurrentUserError } from 'src/errors'\n\nimport {\n  t, defineMessage, Trans, plural,\n} from '@lingui/macro'\nimport logger from 'src/logger'\nimport { User } from '../../models/User'\nimport { Case, When } from '../../components/Case'\n\ninterface State {\n  physicianName: string\n  physicianPhoneNumber: string\n  needsPhysician: boolean\n  currentUser: User\n}\n\nexport default class extends ReactNComponent<any, State> {\n  constructor(props: any) {\n    super(props)\n\n    if (!this.global.currentUser) {\n      throw new NoCurrentUserError()\n    }\n    this.state = {\n      physicianName: '',\n      physicianPhoneNumber: '',\n      needsPhysician: false,\n      currentUser: this.global.currentUser,\n    }\n  }\n\n  childIndex() {\n    const rawId = this.$f7route.params.id\n    if (!rawId) throw new Error('Child id missing')\n    return parseInt(rawId, 10)\n  }\n\n  child(): User {\n    return this.state.currentUser.sortedChildren()[this.childIndex()]\n  }\n\n  hasNextChild() {\n    return this.childIndex() < this.state.currentUser.children.length - 1\n  }\n\n  nextChild() {\n    if (!this.hasNextChild()) {\n      return null\n    }\n    return this.state.currentUser.children[this.childIndex()]\n  }\n\n  childCount() {\n    return this.state.currentUser.children.length\n  }\n\n  childrenNames() {\n    const { children } = this.state.currentUser\n    let names = ''\n    for (let i = 0; i < children.length; i += 1) {\n      names += children[i].firstName\n      if (i === children.length - 2) {\n        names += ', and '\n      }\n      if (i < children.length - 2) {\n        names += ', '\n      }\n    }\n    return names\n  }\n\n  async submit() {\n    // TODO: Move delete blanks into update user\n    const attrs = deleteBlanks({\n      physicianName: this.state.physicianName,\n      physicianPhoneNumber: this.state.physicianPhoneNumber,\n      needsPhysician: this.state.needsPhysician,\n    })\n\n    this.$f7.dialog.preloader(\n      this.global.i18n._(\n        defineMessage({ id: 'WelcomeChildPage.submitting_changes', message: 'Submitting changes...' }),\n      ),\n    )\n    try {\n      const user = await updateUser(this.child(), attrs as Partial<User>)\n      this.setGlobal({ currentUser: user })\n      this.$f7.dialog.close()\n\n      if (this.hasNextChild()) {\n        this.$f7router.navigate(dynamicPaths.welcomeChildIndexPath(this.childIndex() + 1))\n      } else {\n        this.$f7router.navigate(paths.welcomeSurveyPath)\n      }\n    } catch (error) {\n      this.$f7.dialog.close()\n      logger.error(error)\n      this.$f7.dialog.alert(\n        this.global.i18n._(defineMessage({ id: 'WelcomeChildPage.somethings_wrong', message: 'Something went wrong' })),\n        this.global.i18n._(defineMessage({ id: 'WelcomeChildPage.update_failed', message: 'Update Failed' })),\n      )\n    }\n  }\n\n  render() {\n    const user = this.state.currentUser\n    const child = this.child()\n\n    return (\n      <Page>\n        <Navbar\n          title={this.global.i18n._(\n            defineMessage({ id: 'WelcomeChildPage.review_child_title', message: t`Review ${child.firstName}'s Info` }),\n          )}\n        />\n\n        <Case test>\n          {/* First Child */}\n          <When value={user.sortedChildren()[0] === child}>\n            <Block>\n              <Trans id=\"WelcomeChildPage.review_children\">\n                We've found {plural(user.children.length, { one: 'child', other: 'children' })}\n                associated with you: {this.childrenNames()}. Let's take a moment to review their information.\n              </Trans>\n              <br />\n            </Block>\n          </When>\n          {/* Last Child */}\n          <When value={user.sortedChildren()[user.children.length - 1] === child}>\n            <Block>\n              <Trans id=\"WelcomeChildPage.review_child_last\">\n                Finally, take a moment to review {child.firstName}\n                's information.\n              </Trans>\n            </Block>\n          </When>\n          <When value>\n            <Block>\n              <Trans id=\"WelcomeChildPage.review_child\">\n                Take a moment to review {child.firstName}\n                's information.\n              </Trans>\n            </Block>\n          </When>\n        </Case>\n\n        <List noHairlines>\n          <ListItem\n            footer={this.global.i18n._(\n              defineMessage({\n                id: 'WelcomeChildPage.review_schools',\n                message: t`Review the schools ${child.firstName} will be attending.`,\n              }),\n            )}\n          >\n            <div slot=\"title\">\n              <b>\n                <Trans id=\"WelcomeChildPage.review_schools_title\">\n                  {child.firstName}\n                  's Schools and Places\n                </Trans>\n              </b>\n            </div>\n          </ListItem>\n          {child.locations__HACK().map((location) => (\n            <ListItem key={location.id} title={location.name || ''} smartSelect smartSelectParams={{ openIn: 'sheet' }}>\n              <select name=\"mac-windows\" defaultValue=\"attending\">\n                <option value=\"in-person\">\n                  {this.global.i18n._(defineMessage({ id: 'WelcomeChildPage.in_person', message: 'In Person' }))}\n                </option>\n                {/* TODO */}\n                {/* <option value=\"virtual\">Virtual</option>\n                <option value=\"mixed\">Mixed</option>\n                <option value=\"not-attending\">Not Attending</option> */}\n              </select>\n            </ListItem>\n          ))}\n        </List>\n        <List noHairlines>\n          <ListItem\n            footer={this.global.i18n._(\n              defineMessage({\n                id: 'WelcomeChildPage.doctor_footer',\n                message: t`Who is ${child.firstName}'s primary care doctor?`,\n              }),\n            )}\n          >\n            <div slot=\"title\">\n              <b>\n                <Trans id=\"WelcomeChildPage.doctor_title\">\n                  {child.firstName}\n                  's Primary Care (Optional)\n                </Trans>\n              </b>\n            </div>\n          </ListItem>\n          <ListItem\n            checkbox\n            header={this.global.i18n._(\n              defineMessage({ id: 'WelcomeChildPage.no_doctor', message: \"Don't have a primary care doctor?\" }),\n            )}\n            title={this.global.i18n._(\n              defineMessage({ id: 'WelcomeChildPage.find_doctor', message: 'Get help finding one' }),\n            )}\n            onChange={(e) => {\n              this.setState({ needsPhysician: e.target.checked })\n            }}\n          />\n          <ListInput\n            label={this.global.i18n._(\n              defineMessage({ id: 'WelcomeChildPage.doctor_name_label', message: 'Primary Care Doctor' }),\n            )}\n            placeholder={this.global.i18n._(\n              defineMessage({\n                id: 'WelcomeChildPage.doctor_name_placeholder',\n                message: t`${child.firstName}'s doctor's name`,\n              }),\n            )}\n            type=\"text\"\n            onInput={(e) => {\n              this.setState({ physicianName: e.target.value })\n            }}\n          />\n          <ListInput\n            label={this.global.i18n._(\n              defineMessage({ id: 'WelcomeChildPage.doctor_phone_label', message: 'Primary Care Doctor Phone' }),\n            )}\n            placeholder={this.global.i18n._(\n              defineMessage({\n                id: 'WelcomeChildPage.doctor_phone_placeholder',\n                message: t`${child.firstName}'s doctor's phone`,\n              }),\n            )}\n            type=\"tel\"\n            onInput={(e) => {\n              this.setState({ physicianPhoneNumber: e.target.value })\n            }}\n          />\n        </List>\n        <Block>\n          <Case test={this.hasNextChild()}>\n            <When value>\n              {/* TODO: FIXME DELAYED EVALUATION BUG */}\n              {this.hasNextChild() && (\n                <Button onClick={() => this.submit()} fill>\n                  <Trans id=\"WelcomeChildPage.continue_to_child\">Continue to {this.nextChild()?.firstName}</Trans>\n                </Button>\n              )}\n            </When>\n            <When value={false}>\n              <Button fill onClick={() => this.submit()}>\n                <Trans id=\"WelcomeChildPage.continue\">Continue</Trans>\n              </Button>\n            </When>\n          </Case>\n        </Block>\n      </Page>\n    )\n  }\n}\n","import React from 'reactn'\n\nimport { clone } from 'lodash'\nimport {\n  Page, Navbar, Block, Button, List, ListInput,\n} from 'framework7-react'\n\nimport { formatPhone, haveEqualAttrs, deleteBlanks } from 'src/util'\nimport { updateUser } from 'src/api'\nimport { paths } from 'src/routes'\nimport { ReactNComponent } from 'reactn/build/components'\nimport { NoCurrentUserError } from 'src/errors'\n\nimport { defineMessage, Trans } from '@lingui/macro'\nimport logger from 'src/logger'\nimport { toggleLocale } from 'src/initializers/providers'\nimport { User } from '../../models/User'\n\ninterface State {\n  originalEmail: string | null\n  originalPhone: string\n  updatedUser: User\n  // textOrEmailAlerts: 'text' | 'email'\n  showMobileNumberError: boolean\n  currentUser: User\n}\n\nexport default class WelcomeReviewUserPage extends ReactNComponent<any, State> {\n  constructor(props: any) {\n    super(props)\n\n    if (!this.global.currentUser) {\n      throw new NoCurrentUserError()\n    }\n\n    this.state = {\n      originalEmail: this.global.currentUser.email,\n      originalPhone: formatPhone(this.global.currentUser.mobileNumber),\n      updatedUser: (() => {\n        const user = clone(this.global.currentUser)\n        user.mobileNumber = formatPhone(user.mobileNumber)\n        return user\n      })(),\n      showMobileNumberError: false,\n      currentUser: this.global.currentUser,\n    }\n  }\n\n  validate() {\n    return this.$f7.input.validateInputs('#WelcomeReviewPage-form')\n  }\n\n  extractUpdateAttrs(user: User): Partial<User> {\n    return deleteBlanks({\n      firstName: user.firstName,\n      lastName: user.lastName,\n      locale: user.locale,\n      // dailyReminderType: user.dailyReminderType,\n    })\n  }\n\n  // TODO: Reactor: Extract this pattern\n  async submit() {\n    if (!this.validate()) {\n      return\n    }\n    const userAttrs = this.extractUpdateAttrs(this.state.currentUser)\n    const updatedUserAttrs = this.extractUpdateAttrs(this.state.updatedUser)\n\n    if (haveEqualAttrs(userAttrs, updatedUserAttrs)) {\n      this.$f7router.navigate(paths.welcomePasswordPath)\n      return\n    }\n\n    this.$f7.dialog.preloader(this.global.i18n._(defineMessage({ id: 'WelcomeReviewPage.submitting_changes', message: 'Submitting changes...' })))\n    try {\n      const user = await updateUser(this.state.currentUser, updatedUserAttrs)\n      this.setGlobal({ currentUser: user })\n      this.$f7.dialog.close()\n      this.$f7router.navigate(paths.welcomePasswordPath)\n    } catch (error) {\n      this.$f7.dialog.close()\n      logger.error(error)\n      // TODO: make errors smarter\n      this.$f7.dialog.alert(\n        this.global.i18n._(defineMessage({ id: 'WelcomeReviewPage.somethings_wrong', message: 'Something went wrong' })),\n        this.global.i18n._(defineMessage({ id: 'WelcomeReviewPage.update_failed', message: 'Update Failed' })),\n      )\n    }\n  }\n\n  render() {\n    const { updatedUser } = this.state\n    updatedUser.locale = this.global.locale\n    // const isDifferentEmail = updatedUser.email !== this.state.originalEmail\n    // const isDifferentMobileNumber =\n    //   updatedUser.mobileNumber !== this.state.originalEmail\n    return (\n      <Page>\n        <Navbar\n          title={this.global.i18n._(defineMessage({ id: 'WelcomeReviewPage.review_info', message: 'Review Your Info' }))}\n        />\n        <Block>\n          <p>\n            <Trans id=\"WelcomeReviewPage.info_on_file\">\n              Here is the information we have on file for you. Feel free to make\n              any changes.\n            </Trans>\n          </p>\n        </Block>\n\n        <List noHairlinesMd form id=\"WelcomeReviewPage-form\">\n          <ListInput\n            label={this.global.i18n._(defineMessage({ id: 'WelcomeReviewPage.first_name_label', message: 'First Name' }))}\n            type=\"text\"\n            placeholder={this.global.i18n._(defineMessage({ id: 'WelcomeReviewPage.first_name_placeholder', message: 'Your first name' }))}\n            value={updatedUser.firstName}\n            onChange={(e) => {\n              updatedUser.firstName = (e.target.value as string) || ''\n              this.setState({ updatedUser })\n            }}\n            validateOnBlur\n            required\n          />\n          <ListInput\n            label={this.global.i18n._(defineMessage({ id: 'WelcomeReviewPage.last_name_label', message: 'Last Name' }))}\n            type=\"text\"\n            placeholder={this.global.i18n._(defineMessage({ id: 'WelcomeReviewPage.last_name_placeholder', message: 'Your last name' }))}\n            value={updatedUser.lastName}\n            onChange={(e) => {\n              updatedUser.lastName = (e.target.value as string) || ''\n              this.setState({ updatedUser })\n            }}\n            validateOnBlur\n            required\n          />\n          {/* <ListInput\n            label={this.global.i18n._(defineMessage({ id: 'WelcomeReviewPage.reminders_label', message: 'Receive Reminders By' }))}\n            type=\"select\"\n            defaultValue=\"text\"\n            placeholder={this.global.i18n._(defineMessage({ id: 'WelcomeReviewPage.reminders_placeholder', message: 'Please choose...' }))}\n            onChange={(e) => {\n              updatedUser.dailyReminderType = e.target.value\n              this.setState({ updatedUser })\n            }}\n          >\n            <option value=\"text\">\n              {this.global.i18n._(defineMessage({ id: 'WelcomeReviewPage.text_message', message: 'Text Message' }))}\n            </option>\n            <option value=\"email\">\n              {this.global.i18n._(defineMessage({ id: 'WelcomeReviewPage.email', message: 'Email' }))}\n            </option>\n          </ListInput> */}\n          <ListInput\n            label={this.global.i18n._(defineMessage({ id: 'WelcomeReviewPage.language_label', message: 'Language' }))}\n            type=\"select\"\n            defaultValue={this.global.locale}\n            placeholder={this.global.i18n._(defineMessage({ id: 'WelcomeReviewPage.language_placeholder', message: 'Please choose...' }))}\n            onChange={(e) => {\n              toggleLocale()\n              updatedUser.locale = e.target.value\n              this.setState({ updatedUser })\n            }}\n          >\n            <option value=\"en\">\n              {this.global.i18n._(defineMessage({ id: 'WelcomeReviewPage.english', message: 'English' }))}\n            </option>\n            <option value=\"es\">\n              {this.global.i18n._(defineMessage({ id: 'WelcomeReviewPage.spanish', message: 'Español' }))}\n            </option>\n          </ListInput>\n          <ListInput\n            disabled\n            label={this.global.i18n._(defineMessage({ id: 'WelcomeReviewPage.email_label', message: 'Email' }))}\n            type=\"email\"\n            placeholder={this.global.i18n._(defineMessage({ id: 'WelcomeReviewPage.email_placeholder', message: 'Your email' }))}\n            value={updatedUser.email || ''}\n            // info={\n            //   isDifferentEmail\n            //     ? \"We'll need to verify this new email later.\"\n            //     : undefined\n            // }\n            info={\n              this.global.i18n._(\n                defineMessage({ id: 'WelcomeReviewPage.email_failed_to_change', message: \"Can't be changed at this time.\" }),\n              )\n            }\n            onChange={(e) => {\n              updatedUser.email = (e.target.value as string) || ''\n              this.setState({ updatedUser })\n            }}\n            required\n            validate\n          />\n          <ListInput\n            disabled\n            label={this.global.i18n._(defineMessage({ id: 'WelcomeReviewPage.phone_label', message: 'Mobile Number' }))}\n            type=\"tel\"\n            placeholder={this.global.i18n._(defineMessage({ id: 'WelcomeReviewPage.phone_placeholder', message: 'Your mobile number' }))}\n            value={updatedUser.mobileNumber || ''}\n            info={\n              this.global.i18n._(\n                defineMessage({ id: 'WelcomeReviewPage.phone_failed_to_change', message: \"Can't be changed at this time.\" }),\n              )\n            }\n            errorMessageForce={this.state.showMobileNumberError}\n\n            // info={\n            //   isDifferentMobileNumber\n            //     ? \"We'll need to verify this new phone number later.\"\n            //     : undefined\n            // }\n            onInput={(e) => {\n              updatedUser.mobileNumber = (e.target.value as string) || ''\n              this.setState({ updatedUser })\n            }}\n            required\n            validate\n          />\n\n          <Block>\n            <p><Trans id=\"WelcomeReviewPage.next_password\">Next you'll set your password.</Trans></p>\n            <Button onClick={() => this.submit()} fill>\n              <Trans id=\"Common.continue\">Continue</Trans>\n            </Button>\n            {/* TOOD: HACK: Preload password image. */}\n            <img\n              alt={this.global.i18n._(defineMessage({ id: 'WelcomeReviewPage.security_alt_text', message: 'Greenlight gives security the highest importance.' }))}\n              src=\"/images/welcome-secure.svg\"\n              style={{ display: 'none' }}\n            />\n          </Block>\n        </List>\n      </Page>\n    )\n  }\n}\n","export default __webpack_public_path__ + \"static/media/welcome-secure.c23167a1.svg\";","import React from 'reactn'\nimport {\n  Page, Navbar, Block, List, ListInput, Button, Toggle, ListItem,\n} from 'framework7-react'\nimport { SyntheticEvent } from 'react'\nimport { updateUser } from 'src/api'\nimport { dynamicPaths } from 'src/routes'\nimport { User } from 'src/models'\nimport { ReactNComponent } from 'reactn/build/components'\nimport { NoCurrentUserError } from 'src/errors'\n\nimport { defineMessage, Trans } from '@lingui/macro'\nimport logger from 'src/logger'\nimport passwordImage from 'src/images/welcome-secure.svg'\nimport { When, Case } from 'src/components/Case'\n\ninterface State {\n  password: string\n  errorMessage: string | null\n  showErrorMessage: boolean\n  isPasswordHidden: boolean\n  currentUser: User\n}\n\nexport default class extends ReactNComponent<any, State> {\n  constructor(props: any) {\n    super(props)\n\n    if (!this.global.currentUser) {\n      throw new NoCurrentUserError()\n    }\n\n    this.state = {\n      password: '',\n      errorMessage: null,\n      showErrorMessage: false,\n      isPasswordHidden: true,\n      currentUser: this.global.currentUser,\n    }\n  }\n\n  toggleReveal(e: SyntheticEvent) {\n    this.setState({ isPasswordHidden: !(e.target as any).checked })\n    // this.$f7.input.validateInputs('#WelcomePasswordPage-form')\n  }\n\n  async submit() {\n    if (this.state.password.length < 8) {\n      this.setState({\n        errorMessage: this.global.i18n._(defineMessage({ id: 'WelcomePasswordPage.short_password', message: 'Password is too short.' })),\n        showErrorMessage: true,\n      })\n      return\n    }\n    this.setState({ errorMessage: '', showErrorMessage: false })\n    this.$f7.input.validateInputs('#WelcomePasswordPage-form')\n\n    this.$f7.dialog.preloader(this.global.i18n._(defineMessage({ id: 'WelcomePasswordPage.submitting_changes', message: 'Submitting changes...' })))\n    try {\n      const user = await updateUser(this.state.currentUser, { password: this.state.password } as Partial<User>)\n      this.setGlobal({ currentUser: user })\n      this.$f7.dialog.close()\n      this.$f7router.navigate(dynamicPaths.afterWelcomePasswordPath())\n    } catch (error) {\n      this.$f7.dialog.close()\n      logger.error(error)\n      this.$f7.dialog.alert(\n        this.global.i18n._(defineMessage({ id: 'WelcomePasswordPage.somethings_wrong', message: 'Something went wrong' })),\n        this.global.i18n._(defineMessage({ id: 'WelcomePasswordPage.update_failed', message: 'Update Failed' })),\n      )\n    }\n  }\n\n  render() {\n    return (\n      <Page>\n        <Navbar title={this.global.i18n._(defineMessage({ id: 'WelcomePasswordPage.set_password', message: 'Set Your Password' }))} />\n        <Block>\n          <p>\n            <Trans id=\"WelcomePasswordPage.set_password_instructions\">\n              You can sign in with your email address or mobile number and this\n              password. It must be at least 8 characters long.\n            </Trans>\n          </p>\n        </Block>\n        <Block>\n          <List noHairlines form id=\"WelcomePasswordPage-form\">\n            <ListInput\n              label={this.global.i18n._(defineMessage({ id: 'WelcomePasswordPage.password_label', message: 'Password' }))}\n              type={this.state.isPasswordHidden ? 'password' : 'text'}\n              placeholder={this.global.i18n._(defineMessage({ id: 'WelcomePasswordPage.password_placeholder', message: 'Password' }))}\n              value={this.state.password}\n              errorMessage={this.state.errorMessage || ''}\n              errorMessageForce={this.state.showErrorMessage}\n              onChange={(e) => {\n                this.setState({ password: e.target.value })\n              }}\n              required\n              validate\n            />\n\n            <ListItem>\n              <span><Trans id=\"WelcomePassword.reveal_password\">Reveal Password</Trans></span>\n              {/*  TODO: This color is off */}\n              <Toggle color=\"green\" onChange={(e) => this.toggleReveal(e)} />\n            </ListItem>\n          </List>\n          <img\n            alt={this.global.i18n._(\n              defineMessage({ id: 'WelcomePasswordPage.security_alt_text', message: 'Greenlight gives security the highest importance.' }),\n            )}\n            src={passwordImage}\n          />\n\n          <Case test={this.state.currentUser.children.length > 0}>\n            <When value>\n              <p>\n                <Trans id=\"WelcomePasswordPage.next_children\">\n                  Next you'll review your children.\n                </Trans>\n              </p>\n\n            </When>\n            <When value={false}>\n              <p>\n                <Trans id=\"WelcomePasswordPage.next_survey\">\n                  Next you'll fill out your first survey!\n                </Trans>\n              </p>\n            </When>\n          </Case>\n\n          <Button large fill onClick={() => this.submit()}>\n            <Trans id=\"Common.continue\">Continue</Trans>\n          </Button>\n\n        </Block>\n      </Page>\n    )\n  }\n}\n","export default __webpack_public_path__ + \"static/media/fever.bb2004b9.svg\";","export default __webpack_public_path__ + \"static/media/fever-bright.bd783c0a.svg\";","export default __webpack_public_path__ + \"static/media/cough.6a768fcd.svg\";","export default __webpack_public_path__ + \"static/media/cough-bright.2b63ca30.svg\";","export default __webpack_public_path__ + \"static/media/chills.dc9f2225.svg\";","export default __webpack_public_path__ + \"static/media/chills-bright.998ca768.svg\";","export default __webpack_public_path__ + \"static/media/difficulty-breathing.1cc0388b.svg\";","export default __webpack_public_path__ + \"static/media/difficulty-breathing-bright.180005a1.svg\";","export default __webpack_public_path__ + \"static/media/taste-smell.7d3e313f.svg\";","export default __webpack_public_path__ + \"static/media/taste-smell-bright.3e774d01.svg\";","import React from 'reactn'\n\nimport {\n  Row,\n  Col,\n  Segmented,\n  Button, ListInput, List,\n} from 'framework7-react'\n\nimport { DateTime } from 'luxon'\nimport { defineMessage, Trans } from '@lingui/macro'\n\ninterface Props {\n  showErrors?: boolean\n  setYesNo: (yesNo: boolean) => void\n  setDate: (date: Date) => void\n}\n\ninterface State {\n  yesNo: boolean | null\n  date: Date | null\n}\n\nexport default class DatedYesNoButton extends React.Component<Props, State> {\n  state = {\n    yesNo: null,\n    date: null,\n  }\n\n  errorMessage() {\n    if (!this.props.showErrors) {\n      return <></>\n    }\n    if (this.state.yesNo === null) {\n      return <Trans id=\"DatedYesNoButton.yes_no_missing\">Please choose yes or no.</Trans>\n    }\n\n    if (this.state.yesNo === true && this.state.date === null) {\n      return <Trans id=\"DatedYesNoButton.date_missing\">Please set the date.</Trans>\n    }\n    return <></>\n  }\n\n  render() {\n    return (\n      <>\n        <Row>\n          <Col width=\"50\">\n            <Segmented tag=\"p\">\n              <Button\n                outline\n                fill={this.state.yesNo === true}\n                onClick={() => {\n                  this.setState({ yesNo: true })\n                  this.props.setYesNo(true)\n                }}\n              >\n                <Trans id=\"DatedYesNoButton.yes\">Yes</Trans>\n              </Button>\n              <Button\n                outline\n                fill={this.state.yesNo === false}\n                onClick={() => {\n                  this.setState({ yesNo: false })\n                  this.props.setYesNo(false)\n                }}\n              >\n                <Trans id=\"DatedYesNoButton.no\">No</Trans>\n              </Button>\n            </Segmented>\n          </Col>\n          <Col width=\"50\">\n            <List noHairlinesMd style={{ margin: '0', visibility: this.state.yesNo === true ? 'visible' : 'hidden' }}>\n              <ListInput\n                label=\"When?\"\n                calendarParams={{\n                  minDate: DateTime.local().minus({ days: 14 }).toJSDate(),\n                  maxDate: DateTime.local().toJSDate(),\n                  monthPicker: false,\n                  yearPicker: false,\n                  closeOnSelect: true,\n                  touchMove: false,\n                  direction: 'horizontal',\n                }}\n                onCalendarChange={(d) => {\n                  this.setState({ date: d[0] })\n                  this.props.setDate(d[0])\n                }}\n                type=\"datepicker\"\n                placeholder={this.global.i18n._(defineMessage({ id: 'DatedYesNoButton.select_date', message: 'Select date' }))}\n                readonly\n              />\n            </List>\n          </Col>\n          <p style={{ marginTop: '-10px', color: 'var(--f7-input-error-text-color)' }}>\n            {this.errorMessage() && <span>{this.errorMessage()}</span> }\n          </p>\n        </Row>\n\n      </>\n    )\n  }\n}\n","import React from 'reactn'\nimport {\n  Page, Navbar, Block, Button, Preloader,\n} from 'framework7-react'\nimport './SurveyNewPage.css'\nimport { paths } from 'src/routes'\nimport { MedicalEventTypes } from 'src/models/MedicalEvent'\nimport { CUTOFF_TIME } from 'src/models/GreenlightStatus'\nimport { createSymptomSurvey, getUser } from 'src/api'\nimport { User } from 'src/models'\nimport { NoCurrentUserError } from 'src/errors'\nimport { ReactNComponent } from 'reactn/build/components'\nimport { DateTime } from 'luxon'\nimport { defineMessage, t, Trans } from '@lingui/macro'\nimport { assertNotNull } from 'src/util'\nimport { reloadCurrentUser } from 'src/initializers/providers'\nimport logger from 'src/logger'\n\nimport fever from 'src/images/symptoms/fever.svg'\nimport feverBright from 'src/images/symptoms/fever-bright.svg'\nimport cough from 'src/images/symptoms/cough.svg'\nimport coughBright from 'src/images/symptoms/cough-bright.svg'\nimport chills from 'src/images/symptoms/chills.svg'\nimport chillsBright from 'src/images/symptoms/chills-bright.svg'\nimport difficultyBreathing from 'src/images/symptoms/difficulty-breathing.svg'\nimport difficultyBreathingBright from 'src/images/symptoms/difficulty-breathing-bright.svg'\nimport tasteSmell from 'src/images/symptoms/taste-smell.svg'\nimport tasteSmellBright from 'src/images/symptoms/taste-smell-bright.svg'\nimport { Case, When } from '../components/Case'\nimport DatedYesNoButton from '../components/DatedYesNoButton'\n\nconst buttonImages = {\n  cough,\n  coughBright,\n  fever,\n  feverBright,\n  chills,\n  chillsBright,\n  difficultyBreathing,\n  difficultyBreathingBright,\n  tasteSmell,\n  tasteSmellBright,\n}\n\ninterface SymptomButtonProps {\n  title: string\n  image: keyof typeof buttonImages\n  selected?: boolean\n  onClick?: (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void\n}\n\nfunction SymptomButton({\n  title, image, selected, onClick,\n}: SymptomButtonProps) {\n  return (\n    <div\n      className={`SymptomButton ${selected ? 'selected' : ''}`}\n      onClick={onClick}\n    >\n      <img alt={title} src={buttonImages[image]} />\n      <img alt={title} src={(buttonImages as any)[`${image}Bright`]} />\n      <br />\n      <span dangerouslySetInnerHTML={{ __html: title }} />\n    </div>\n  )\n}\n\ninterface SurveyProps {\n  currentUser: User\n  userId: string\n}\n\ninterface SurveyState {\n  isLoaded: boolean\n  hasFever: boolean\n  hasChills: boolean\n  hasNewCough: boolean\n  hasDifficultyBreathing: boolean\n  hasLossTasteSmell: boolean\n  hadDiagnosis: boolean | null\n  diagnosisDate: DateTime | null\n  hadContact: boolean | null\n  contactDate: DateTime | null\n  diagnosisError?: string | null\n  submitClicked?: boolean\n  showConfirmation: boolean\n  targetUser: User | null\n}\n\ntype Symptoms =\n  | 'hasFever'\n  | 'hasChills'\n  | 'hasNewCough'\n  | 'hasDifficultyBreathing'\n  | 'hasLossTasteSmell'\n\nexport default class SurveyNewPage extends ReactNComponent<SurveyProps, SurveyState> {\n  isSequence = false\n\n  currentUser: User\n\n  constructor(props: SurveyProps) {\n    super(props)\n    if (!this.global.currentUser) {\n      throw new NoCurrentUserError()\n    }\n\n    this.currentUser = this.global.currentUser\n\n    const { userId } = this.$f7route.params\n    if (!userId) { throw 'userId missing in url' }\n\n    if (userId === 'seq') {\n      this.isSequence = true\n    } else {\n      getUser(userId).then((user) => {\n        this.setState({ targetUser: user, isLoaded: true })\n      })\n    }\n\n    this.state = {\n      isLoaded: this.isSequence,\n      hasFever: false,\n      hasChills: false,\n      hasNewCough: false,\n      hasDifficultyBreathing: false,\n      hasLossTasteSmell: false,\n      diagnosisDate: null,\n      hadDiagnosis: null,\n      contactDate: null,\n      hadContact: null,\n      showConfirmation: false,\n      targetUser: null,\n    }\n  }\n\n  redirect() {\n    return this.$f7route.query.redirect || null\n  }\n\n  medicalEvents() {\n    const events = []\n    if (this.state.hasFever) {\n      events.push({\n        eventType: MedicalEventTypes.FEVER,\n        occurredAt: DateTime.local(),\n      })\n    }\n    if (this.state.hasChills) {\n      events.push({\n        eventType: MedicalEventTypes.CHILLS,\n        occurredAt: DateTime.local(),\n      })\n    }\n    if (this.state.hasNewCough) {\n      events.push({\n        eventType: MedicalEventTypes.NEW_COUGH,\n        occurredAt: DateTime.local(),\n      })\n    }\n    if (this.state.hasDifficultyBreathing) {\n      events.push({\n        eventType: MedicalEventTypes.DIFFICULTY_BREATHING,\n        occurredAt: DateTime.local(),\n      })\n    }\n    if (this.state.hasLossTasteSmell) {\n      events.push({\n        eventType: MedicalEventTypes.LOST_TASTE_SMELL,\n        occurredAt: DateTime.local(),\n      })\n    }\n    if (this.state.hadDiagnosis && this.state.diagnosisDate) {\n      events.push({\n        eventType: MedicalEventTypes.COVID_DIAGNOSIS,\n        occurredAt: this.state.diagnosisDate,\n      })\n    }\n    if (this.state.hadContact && this.state.contactDate) {\n      events.push({\n        eventType: MedicalEventTypes.COVID_EXPOSURE,\n        occurredAt: this.state.contactDate,\n      })\n    }\n    return events\n  }\n\n  submittingFor(): User | null {\n    if (this.isSequence) {\n      if (CUTOFF_TIME.isAfter(DateTime.local())) {\n        return this.currentUser.usersNotSubmitted()[0] || null\n      }\n      return this.currentUser.usersNotSubmittedForTomorrow()[0] || null\n    }\n    return this.state.targetUser\n  }\n\n  isSubmittingForSelf(): boolean {\n    return this.submittingFor() === this.currentUser\n  }\n\n  hasNextUser(): boolean {\n    if (!this.isSequence) return false\n    return this.currentUser.usersNotSubmitted().length > 1\n  }\n\n  nextUser(): User | null {\n    if (!this.isSequence) return null\n    return this.currentUser.usersNotSubmitted()[1] || null\n  }\n\n  setContacted(yesNo: boolean) {\n    this.setState({\n      showConfirmation: false,\n      hadContact: yesNo,\n    })\n  }\n\n  setDiagnosed(yesNo: boolean) {\n    this.setState({\n      showConfirmation: false,\n      hadDiagnosis: yesNo,\n    })\n  }\n\n  setDiagnosisDate(date: Date) {\n    this.setState({\n      showConfirmation: false,\n      diagnosisDate: DateTime.fromJSDate(date),\n    })\n  }\n\n  setContactDate(date: Date) {\n    this.setState({\n      showConfirmation: false,\n      contactDate: DateTime.fromJSDate(date),\n    })\n  }\n\n  toggleSymptom(symptom: Symptoms) {\n    this.setState({\n      ...this.state,\n      [symptom]: !this.state[symptom],\n    })\n  }\n\n  submit1() {\n    this.setState({\n      submitClicked: true,\n    })\n    if (this.validate()) {\n      this.setState({ showConfirmation: true })\n    }\n  }\n\n  async submit2() {\n    if (!this.validate()) {\n      this.setState({ showConfirmation: false })\n      return\n    }\n    const medicalEvents = this.medicalEvents()\n\n    this.$f7.dialog.preloader(\n      this.global.i18n._(defineMessage({ id: 'SurveyNewPage.submitting', message: 'Submitting...' })),\n    )\n    const redirect = this.redirect()\n    try {\n      // TODO: This should load the data\n      const target = this.submittingFor()\n      assertNotNull(target)\n      const status = await createSymptomSurvey(target, medicalEvents)\n      if (!status) {\n        throw 'This should never happen, but status was somehow nil.'\n      }\n      const user = await reloadCurrentUser() // Reload data\n      this.$f7.dialog.close()\n\n      if (redirect) {\n        this.$f7router.navigate(redirect, { reloadCurrent: true, ignoreCache: true })\n      } else if (this.isSequence && user.usersNotSubmitted().length > 0) {\n        this.$f7router.refreshPage()\n      } else {\n        this.$f7router.navigate(paths.surveysThankYouPath)\n      }\n    } catch (error) {\n      if (!error.response) {\n        throw error\n      }\n\n      if (error.response.status === 422) {\n        if (redirect) {\n          this.$f7router.navigate(redirect, { reloadCurrent: true, ignoreCache: true })\n        } else {\n          this.$f7router.navigate(paths.dashboardPath)\n        }\n      }\n\n      this.$f7.dialog.close()\n      logger.error(error)\n      // TODO: Make errors smarter\n      this.$f7.dialog.alert(\n        this.global.i18n._(defineMessage({ id: 'SurveyNewPage.submission_failed_message', message: 'Something went wrong. Maybe someone already submitted?' })),\n        this.global.i18n._(defineMessage({ id: 'SurveyNewPage.submission_failed_title', message: 'Submission Failed' })),\n      )\n    }\n  }\n\n  validate() {\n    const errors = [\n      this.state.hadContact === null,\n      this.state.hadContact === undefined,\n      this.state.hadDiagnosis === null,\n      this.state.hadDiagnosis === undefined,\n      this.state.hadContact === true\n      && !this.state.contactDate,\n      this.state.hadDiagnosis === true\n      && !this.state.diagnosisDate,\n    ]\n    return !errors.includes(true)\n  }\n\n  render() {\n    const user = this.currentUser\n    if (!user) {\n      // TODO: Flash message\n      this.$f7router.navigate('/')\n      return <></>\n    }\n    const submittingFor = this.submittingFor()\n\n    if (submittingFor === null) {\n      return (\n        <Page>\n          <Navbar title={this.global.i18n._(defineMessage({ id: 'SurveyNewPage.already_submitted_title', message: 'Already Submitted' }))} />\n          <Block>\n            <Trans id=\"SurveyNewPage.already_submitted_message\">\n              All surveys have already been submitted for today. Please check back later!\n            </Trans>\n          </Block>\n        </Page>\n      )\n    }\n\n    return (\n      <Page>\n        <Navbar\n          title={this.global.i18n._(defineMessage({ id: 'SurveyNewPage.title', message: t`Symptom Survey: ${submittingFor.fullName()}` }))}\n        />\n\n        {\n          this.state.isLoaded\n            ? (\n              <>\n                <Block>\n                  <div className=\"survey-title\">\n                    {\n                      this.isSubmittingForSelf()\n                        ? (\n                          <Trans id=\"SurveyNewPage.any_symptoms\">\n                            Do you have any of these symptoms?\n                          </Trans>\n                        )\n                        : (\n                          <Trans id=\"SurveyNewPage.any_symptoms_child\">\n                            Does\n                            {submittingFor?.firstName}\n                            have any of these symptoms?\n                          </Trans>\n                        )\n                    }\n                  </div>\n                </Block>\n                <div className=\"SymptomButtons\">\n                  <SymptomButton\n                    title={this.global.i18n._(defineMessage({ id: 'SurveyNewPage.fever', message: 'Fever' }))}\n                    image=\"fever\"\n                    onClick={() => this.toggleSymptom('hasFever')}\n                    selected={this.state.hasFever}\n                  />\n                  <SymptomButton\n                    title={this.global.i18n._(defineMessage({ id: 'SurveyNewPage.chills', message: 'Chills' }))}\n                    image=\"chills\"\n                    onClick={() => this.toggleSymptom('hasChills')}\n                    selected={this.state.hasChills}\n                  />\n                  <SymptomButton\n                    title={this.global.i18n._(defineMessage({ id: 'SurveyNewPage.new_cough', message: 'New Cough' }))}\n                    image=\"cough\"\n                    onClick={() => this.toggleSymptom('hasNewCough')}\n                    selected={this.state.hasNewCough}\n                  />\n                  <SymptomButton\n                    title={this.global.i18n._(defineMessage({ id: 'SurveyNewPage.difficulty_breathing', message: 'Difficulty<br />Breathing' }))}\n                    image=\"difficultyBreathing\"\n                    onClick={() => this.toggleSymptom('hasDifficultyBreathing')}\n                    selected={this.state.hasDifficultyBreathing}\n                  />\n                  <SymptomButton\n                    title={this.global.i18n._(defineMessage({ id: 'SurveyNewPage.loss_of_smell', message: 'Loss of<br />Taste/Smell' }))}\n                    image=\"tasteSmell\"\n                    onClick={() => this.toggleSymptom('hasLossTasteSmell')}\n                    selected={this.state.hasLossTasteSmell}\n                  />\n                </div>\n                <Block style={{ marginTop: 0 }}>\n                  <div className=\"survey-title\">\n                    <Trans id=\"SurveyNewPage.covid_contact_title\">COVID Contact?</Trans>\n                  </div>\n                  {\n              this.isSubmittingForSelf()\n                ? (\n                  <Trans id=\"SurveyNewPage.covid_contact\">\n                    Have you had close contact—within 6 feet for at least 15\n                    minutes—with someone diagnosed with COVID-19?\n                  </Trans>\n                )\n                : (\n                  <Trans id=\"SurveyNewPage.covid_contact_child\">\n                    Has {submittingFor?.firstName}\n                    had close contact—within 6 feet for at least 15\n                    minutes—with someone diagnosed with COVID-19?\n                  </Trans>\n                )\n            }\n                  <br />\n                  <DatedYesNoButton\n                    setYesNo={(yesNo: boolean) => this.setContacted(yesNo)}\n                    setDate={(date: Date) => this.setContactDate(date)}\n                    showErrors={this.state.submitClicked}\n                  />\n                  <div className=\"survey-title\">\n                    <Trans id=\"SurveyNewPage.covid_diagnosis_title\">COVID Diagnosis?</Trans>\n                  </div>\n                  {\n              this.isSubmittingForSelf()\n                ? (\n                  <Trans id=\"SurveyNewPage.covid_diagnosis\">\n                    Have you been diagnosed with or tested positive for COVID-19?\n                  </Trans>\n                )\n                : (\n                  <Trans id=\"SurveyNewPage.covid_diagnosis_child\">\n                    Has {submittingFor?.firstName}\n                    been diagnosed with or tested positive for\n                    COVID-19?\n                  </Trans>\n                )\n            }\n                  <DatedYesNoButton\n                    setYesNo={(yesNo: boolean) => this.setDiagnosed(yesNo)}\n                    setDate={(date: Date) => this.setDiagnosisDate(date)}\n                    showErrors={this.state.submitClicked}\n                  />\n\n                  <br />\n                  {!this.state.showConfirmation\n          && (\n          <Case test={this.hasNextUser()}>\n            <When value>\n              <Button\n                fill\n                onClick={\n                  () => this.submit1()\n                }\n              >\n                <Trans id=\"SurveyNewPage.continue\">\n                  Continue to {this.nextUser()?.firstName}\n                </Trans>\n              </Button>\n            </When>\n            <When value={false}>\n              <Button\n                fill\n                onClick={\n                () => this.submit1()\n              }\n              >\n                <Trans id=\"SurveyNewPage.finish\">Finish</Trans>\n              </Button>\n            </When>\n          </Case>\n          )}\n                  {this.state.showConfirmation\n            && (\n            <Button\n              fill\n              onClick={\n              () => this.submit2()\n            }\n            >\n              <Trans id=\"SurveyNewPage.confirmation\">Are you sure?</Trans>\n            </Button>\n            )}\n                </Block>\n              </>\n            )\n            : <Preloader />\n        }\n      </Page>\n\n    )\n  }\n}\n","import { Dict } from 'src/types'\n\nconst giphySchedule: Dict<string> = {\n  '12/2/2020': 'xT0BKsuDrhX7CDYO8U', // Wed\n  '12/1/2020': 'xThuWiJqEd2c44AjBu', // Tues\n  '11/30/2020': 'xT8qB15vyMbmlOVhsY', // Mon\n  '11/29/2020': '3owyp6z5IjCG9dZvtS', // Sun\n  '11/28/2020': '3o6gDREoETcSrm9Wog', // Sat\n  '11/27/2020': 'xFcFJAryrhO6s', // Fri\n  '11/26/2020': 'XGgkpVY62gcwXkOPml', // Thurs\n  '11/25/2020': 'QC1TssrPbkD2menNfz', // Wed\n  '11/24/2020': 'v2CaxWLFw4a5y', // Tues\n  '11/23/2020': 'l4JyZjdrJFkVn6x3y', // Mon\n  '11/22/2020': '126NMCvhKJfNN6', // Sun\n  '11/21/2020': '26wkQBBppNQ1ih584', // Sat\n  '11/20/2020': 'OcldYrF5srXoY', // Fri\n  '11/19/2020': 'hQKiGV6MG8WmsHg2yx', // Thurs\n  '11/18/2020': 'VzeJ8Zl5kdi9KAD4Xk', // Wed\n  '11/17/2020': 'NsEU83HMPEM2ekYwCj', // Tues\n  '11/16/2020': 'wqb5K5564JSlW', // Mon\n  '11/15/2020': '1wqqlaQ7IX3TXibXZE', // Sun\n  '11/14/2020': 'kiBcwEXegBTACmVOnE', // Sat\n  '11/13/2020': 'l0MYNB04rBb51QNtC', // Fri\n  '11/12/2020': 'CjmvTCZf2U3p09Cn0h', // Thurs\n  '11/11/2020': 'VbnUQpnihPSIgIXuZv', // Wed\n  '11/10/2020': '3oriO0OEd9QIDdllqo', // Tues\n  '11/9/2020': 'GqcUd29SEXpuM', // Mon\n  '11/8/2020': 'PkVHsFmmLeBfa', // Sun\n  '11/7/2020': 'lQeGS2LCeZg7m', // Sat\n  '11/6/2020': '1kkxWqT5nvLXupUTwK', // Fri\n  '11/5/2020': 'l2GsSPkKjx6ZW', // Thurs\n  '11/4/2020': 'OxvYf3jsq8bIc', // Wed\n  '11/3/2020': 'hKCgsmlQKNNO8', // Tues\n  '11/2/2020': '1pXVFWycDMoUw', // Mon\n  '11/1/2020': 'SqAM5xE1CNLxe', // Sun\n  '10/31/2020': 'l0MYxI1x4WyCLvUL6',\n  '10/30/2020': 'q4ICE9wYvOwBG',\n  '10/29/2020': 'LAmpwU0Adqaqc',\n  '10/28/2020': '3oz8xwooUvMqNB1zEs',\n  '10/27/2020': '26tP3M3i03hoIYL6M',\n  '10/26/2020': '1hqYk0leUMddBBkAM7',\n  '10/25/2020': 'rbyCkuoJ6qd7G',\n  '10/24/2020': 'WjldrOwZZ3EpW',\n  '10/23/2020': 'l4FGr3nzq5u0m02vm',\n  '10/22/2020': '3o7qE2VAxuXWeyvJIY',\n  '10/21/2020': 'uBLojRk2fnB84',\n  '10/20/2020': 'j6HJab8c5d8VG',\n  '10/19/2020': 'fV5W3pG7F7CwoI3i4B',\n  '10/18/2020': 'npFfmAk8yqZbi',\n  '10/17/2020': 'cdNSp4L5vCU7aQrYnV',\n  '10/16/2020': 'Xw6yFn7frR3Y4',\n  '10/15/2020': 'BZiSRzmpLYKiKo0yyf',\n  '10/14/2020': '10A0XQ5AOSrJao',\n  '10/13/2020': 'i34oXbluCO0G4',\n  '10/12/2020': 'tSaApE2vVQKE8',\n  '10/11/2020': '22YOkQog92fpS',\n}\n\nexport default giphySchedule\n","import React from 'react'\nimport { DateTime } from 'luxon'\nimport giphySchedule from 'src/data/giphySchedule'\n\nexport function giphyEmbedURL(id: string) {\n  return `https://giphy.com/embed/${id}`\n}\n\nexport function giphyVideoURL(id: string) {\n  return `https://media.giphy.com/media/${id}/giphy.mp4`\n}\n\nexport function giphyGifURL(id: string) {\n  return `https://media.giphy.com/media/${id}/giphy-downsized.gif`\n}\n\ninterface Props {\n  id: string\n  mode?: 'embed' | 'gif' | 'video'\n}\n\nexport default function Giphy({ id, mode }: Props) {\n  if (mode === 'gif') {\n    // TODO: Add a joke for screen readers\n    return <img src={giphyGifURL(id)} alt=\"Something funny\" style={{ width: '100%' }} />\n  }\n  if (mode === 'embed') {\n    return (\n      <div style={{\n        width: '100%', height: 0, paddingBottom: '100%', position: 'relative',\n      }}\n      >\n        <iframe src={giphyEmbedURL(id)} width=\"100%\" height=\"100%\" style={{ position: 'absolute' }} frameBorder=\"0\" className=\"giphy-embed\" allowFullScreen />\n      </div>\n    )\n  }\n\n  return (\n    <video width=\"100%\" autoPlay loop>\n      <source src={giphyVideoURL(id)} type=\"video/mp4\" />\n      <img src={giphyGifURL(id)} alt=\"GIF of the day! 😀\" style={{ width: '100%' }} />\n    </video>\n  )\n}\n\nfunction randomGiphyId() {\n  const ids = Object.values(giphySchedule)\n  return ids[Math.floor(Math.random() * ids.length)]\n}\n\nexport function GiphyForToday({ mode }: { mode?: 'embed' | 'gif' | 'video' }) {\n  const id = giphySchedule[DateTime.local().toLocaleString(DateTime.DATE_SHORT)] || randomGiphyId()\n  return <Giphy id={id} mode={mode} />\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\n\nimport { DateTime } from 'luxon'\nimport { GreenlightStatus, User } from 'src/models'\n\nconst REASON_REPLACEMENTS = {\n  '{you}': (status: GreenlightStatus, submittingUser: User, targetUser: User) => {\n    if (submittingUser === targetUser) {\n      return 'you'\n    }\n    return targetUser.firstName || ''\n  },\n  '{You}': (status: GreenlightStatus, submittingUser: User, targetUser: User) => {\n    if (submittingUser === targetUser) {\n      return 'You'\n    }\n    return targetUser.firstName || ''\n  },\n  '{usted}': (status: GreenlightStatus, submittingUser: User, targetUser: User) => {\n    if (submittingUser === targetUser) {\n      return 'usted'\n    }\n    return targetUser.firstName || ''\n  },\n  '{Usted}': (status: GreenlightStatus, submittingUser: User, targetUser: User) => {\n    if (submittingUser === targetUser) {\n      return 'Usted'\n    }\n    return targetUser.firstName || ''\n  },\n  '{date}': (status: GreenlightStatus, submittingUser: User, targetUser: User) => status.expirationDate.plus({ days: 1 }).toLocaleString(DateTime.DATE_SHORT),\n  '{days}': (status: GreenlightStatus, submittingUser: User, targetUser: User) => {\n    const count = status.expirationDate.diff(status.submissionDate, 'days').days + 1\n    if (count === 1) {\n      return '1 day'\n    }\n    return `${count} days`\n  },\n  '{días}': (status: GreenlightStatus, submittingUser: User, targetUser: User) => {\n    const count = status.expirationDate.diff(status.submissionDate, 'days').days + 1\n    if (count === 1) {\n      return '1 día'\n    }\n    return `${count} diás`\n  },\n}\n\nconst REASONS = {\n  en: {\n    recovery_asymptomatic_covid_exposure: {\n      title: 'Please Stay Home',\n      message: 'After a COVID-19 exposure, {you} will need to stay home for 14 days from first contact. You will be cleared to return in {days} on {date}.',\n    },\n    recovery_covid_exposure: {\n      title: 'Please Stay Home',\n      message: 'After a COVID-19 exposure, {you} will need to stay home for 14 days from first contact. You will be cleared to return in {days} on {date}.',\n    },\n    recovery_diagnosed_asymptomatic: {\n      title: 'Please Stay Home',\n      message: '{You} can return 10 days if no symptoms develop. {You} should be able to return in {days} on {date}.',\n    },\n    recovery_from_diagnosis: {\n      title: 'Please Stay Home',\n      message: 'Get well soon! {You} should stay home for at least {days}. If symptoms improve, {you} can return on {date}.',\n    },\n    pending_needs_diagnosis: {\n      title: 'Seek Care',\n      message: 'You should get in touch with a doctor immediately and schedule a test. {You} should be able to return in {days} on {date}. If you need help accessing resources, contact COVID-19 support from the home screen.',\n    },\n    recovery_not_covid_has_fever: {\n      title: 'Please Stay Home',\n      message: 'Due to the fever, {you} should stay home until 24 hours after the fever subsides.',\n    },\n    recovery_return_tomorrow: {\n      title: 'One More Day!',\n      message: 'The recovery period is almost done! {You} should stay home today, but {you} should be cleared to return tomorrow if your symptoms continue to improve.',\n    },\n  },\n  es: {\n    recovery_covid_exposure: {\n      title: 'Por favor, quédese en casa',\n      message: 'Después de una exposición al COVID-19, {usted} necesita quedarse en casa durante 14 días desde el primer contacto. {Usted} tendrá autorización para regresar en {días} el {date}.',\n    },\n    recovery_asymptomatic_covid_exposure: {\n      title: 'Por favor, quédese en casa',\n      message: 'Después de una exposición al COVID-19, {usted} necesita quedarse en casa durante 14 días desde el primer contacto. {Usted} tendrá autorización para regresar en {días} el {date}.',\n    },\n    recovery_diagnosed_asymptomatic: {\n      title: 'Por favor, quédese en casa',\n      message: '{Usted} puede regresar 10 días si no se presentan síntomas. {Usted} debería poder regresar en {días} el {date}.',\n    },\n    recovery_from_diagnosis: {\n      title: 'Por favor, quédese en casa',\n      message: '¡Mejorate pronto! {Usted} debería quedarse en casa durante al menos {días}. Si los síntomas mejoran, {usted} puede regresar el {date}.',\n    },\n    pending_needs_diagnosis: {\n      title: 'Busque atención',\n      message: 'Debe ponerse en contacto con un médico de inmediato y programar una prueba. {Usted} debería poder regresar en {días} el {date}. Si necesita ayuda para acceder a los recursos, comuníquese con el soporte de COVID-19 desde la pantalla de inicio.',\n    },\n    recovery_not_covid_has_fever: {\n      title: 'Por favor, quédese en casa',\n      message: 'Debido a la fiebre, {usted} debe quedarse en casa hasta 24 horas después de que la fiebre desaparezca.',\n    },\n    recovery_return_tomorrow: {\n      title: '¡Un día mas!',\n      message: 'El período de recuperación casi ha terminado. {Usted} debería quedarse en casa hoy, pero {usted} debería tener autorización para regresar mañana.',\n    },\n  },\n}\n\nfunction interpolate(value: string, status: GreenlightStatus, submittingUser: User, targetUser: User) {\n  for (const [key, replacer] of Object.entries(REASON_REPLACEMENTS)) {\n    (\n      value = value.replace(key, replacer(status, submittingUser, targetUser))\n    )\n  }\n  return value\n}\n\nexport function reasonTitle(targetUser: User, submittingUser: User) {\n  const status = targetUser.greenlightStatus()\n  const bundle = (REASONS[submittingUser.locale || 'en'] as any)[status.reason]\n  return interpolate(bundle?.title || '', status, submittingUser, targetUser)\n}\n\nexport function reasonMessage(targetUser: User, submittingUser: User) {\n  const status = targetUser.greenlightStatus()\n  const bundle = (REASONS[submittingUser.locale || 'en'] as any)[status.reason]\n  return interpolate(bundle?.message || '', status, submittingUser, targetUser)\n}\n","export default __webpack_public_path__ + \"static/media/doctors.165b782e.svg\";","import React, { getGlobal } from 'reactn'\nimport { ReactNComponent } from 'reactn/build/components'\nimport {\n  Page, Navbar, Block, Button, BlockTitle,\n} from 'framework7-react'\nimport { GiphyForToday } from 'src/components/Giphy'\nimport { defineMessage, Trans } from '@lingui/macro'\nimport { NoCurrentUserError } from 'src/errors'\nimport { User } from 'src/models'\nimport { paths } from 'src/routes'\nimport { reasonMessage, reasonTitle } from 'src/misc/reasons'\nimport doctorsImage from 'src/images/doctors.svg'\n\nexport default class SurveyThankYouPage extends ReactNComponent<any, any> {\n  currentUser: User\n\n  constructor(props: any) {\n    super(props)\n\n    if (!this.global.currentUser) {\n      throw new NoCurrentUserError()\n    }\n    this.currentUser = this.global.currentUser\n  }\n\n  anyMissing() {\n    return this.currentUser.usersExpectedToSubmit().map((x) => x.greenlightStatus()).some((x) => x.isUnknown())\n  }\n\n  allCleared() {\n    return this.currentUser.areUsersCleared()\n  }\n\n  renderAllCleared() {\n    return (\n      <Page>\n        <Navbar\n          title={this.global.i18n._(defineMessage({ id: 'SurveyThankYouPage.cleared_title', message: 'All Clear!' }))}\n        />\n\n        <Block>\n          <p>\n            <Trans id=\"SurveyThankYouPage.thank_you\">\n              Thanks for submitting your survey! Here's something we hope will make you smile. 😃\n            </Trans>\n          </p>\n          <GiphyForToday />\n          <Button large fill href={paths.dashboardPath}>\n            <Trans id=\"Common.back_home\">\n              Back Home\n            </Trans>\n          </Button>\n        </Block>\n      </Page>\n    )\n  }\n\n  renderStatusBreakdownNotSubmitted() {\n    // TODO: This needs to be improved\n    return (\n      <Page>\n        <Navbar\n          title={this.global.i18n._(defineMessage({ id: 'SurveyThankYouPage.more_to_submit_title', message: 'More to Submit' }))}\n        />\n        <Block>\n          <p style={{ fontWeight: 'bold' }}>\n            <Trans id=\"SurveyThankYouPage.more_to_submit_message\">\n              You still have more surveys to submit.\n            </Trans>\n          </p>\n          <ul>\n            {\n             this.currentUser.usersExpectedToSubmit().map((u) => (\n               <li key={u.id}>\n                 {u.fullName()}\n                 :\n                 {' '}\n                 {u.greenlightStatus().title()}\n               </li>\n             ))\n           }\n          </ul>\n          <br />\n          <p>\n            <img alt=\"Doctors\" src={doctorsImage} />\n          </p>\n          <Button large fill href={paths.dashboardPath}>\n            <Trans id=\"Common.back_home\">\n              Back Home\n            </Trans>\n          </Button>\n        </Block>\n      </Page>\n    )\n  }\n\n  renderStatusBreakdown() {\n    return (\n      <Page>\n        <Navbar\n          title={getGlobal().i18n._(defineMessage({ id: 'SurveyThankYouPage.not_all_cleared_title', message: 'Connect to Services' }))}\n        />\n        <Block>\n          <p style={{ fontWeight: 'bold' }}>\n            <Trans id=\"SurveyThankYouPage.not_all_cleared_heading\">Not everyone was cleared.</Trans>\n          </p>\n          <p>\n            <Trans id=\"SurveyThankYouPage.not_all_cleared_message\">\n              Your surveys indicates that someone should stay home and seek attention.\n              To schedule an appointment and a test, contact the Duke triage hotline from your home screen.\n            </Trans>\n          </p>\n          {\n            this.currentUser.usersExpectedToSubmit().map((u) => (\n              <>\n                <p style={{ fontWeight: 'bold' }}>\n                  {u.fullName()}\n                  :\n                  {' '}\n                  {u.greenlightStatus().title()}\n                </p>\n\n                <p>{reasonMessage(u, this.currentUser)}</p>\n              </>\n            ))\n          }\n          <p>\n            <img alt=\"Doctors\" src={doctorsImage} />\n          </p>\n          <Button large fill href={paths.dashboardPath}>\n            <Trans id=\"Common.back_home\">\n              Back Home\n            </Trans>\n          </Button>\n        </Block>\n      </Page>\n    )\n  }\n\n  renderStatus() {\n    const title = reasonTitle(this.currentUser, this.currentUser)\n    const message = reasonMessage(this.currentUser, this.currentUser)\n    // TODO: This needs to be improved\n    return (\n      <Page>\n        <Navbar\n          title={title}\n        />\n        <BlockTitle>\n          Status:{' '}\n          {this.currentUser.greenlightStatus().title()}\n        </BlockTitle>\n        <Block>\n          <p>\n            {message}\n          </p>\n          <br />\n          <p>\n            <img alt=\"Doctors\" src={doctorsImage} />\n          </p>\n          <br />\n          <Button large fill href={paths.dashboardPath}>\n            <Trans id=\"Common.back_home\">\n              Back Home\n            </Trans>\n          </Button>\n        </Block>\n      </Page>\n    )\n  }\n\n  render() {\n    if (this.anyMissing()) {\n      return this.renderStatusBreakdownNotSubmitted()\n    }\n    if (this.allCleared()) {\n      return this.renderAllCleared()\n    }\n\n    if (this.currentUser.hasChildren()) {\n      return this.renderStatusBreakdown()\n    }\n    return this.renderStatus()\n  }\n}\n","import React from 'reactn'\nimport {\n  Page,\n  Navbar,\n  Block,\n  Link,\n} from 'framework7-react'\n\nimport { Case, When } from 'src/components/Case'\n\nimport { defineMessage, Trans } from '@lingui/macro'\n\nimport { Dict } from 'src/types'\nimport { getCurrentUser, magicSignIn } from 'src/api'\nimport { dynamicPaths, paths } from 'src/routes'\nimport logger from 'src/logger'\n\ninterface State {\n  hasReceivedResponse: boolean\n  isSuccess: boolean\n}\n\nexport default class MagicSignInAuthPage extends React.Component<Dict<any>, State> {\n  state = {\n    hasReceivedResponse: true,\n    isSuccess: false,\n  }\n\n  async authorize() {\n    const { token } = this.$f7route.params\n    const rememberMe = this.$f7route.params.remember === 'y'\n\n    if (!token) return\n\n    this.$f7.dialog.preloader('Signing in...')\n\n    try {\n      await magicSignIn(token, rememberMe)\n      const user = await getCurrentUser()\n      this.setState({ hasReceivedResponse: true, isSuccess: true })\n      this.$f7.dialog.close()\n      this.setGlobal({ currentUser: user })\n      this.$f7router.navigate(dynamicPaths.currentUserHomePath())\n    } catch (error) {\n      logger.error(error)\n      this.setState({ hasReceivedResponse: true, isSuccess: false })\n      this.$f7.dialog.close()\n    }\n  }\n\n  componentDidMount() {\n    this.authorize()\n  }\n\n  render() {\n    return (\n      <Page className=\"MagicSignInAuthPage\" noToolbar noSwipeback loginScreen>\n        <Navbar title={this.global.i18n._(defineMessage({ id: 'MagicSignInAuthPage.title', message: 'Magic Sign In' }))} backLink=\"Back\" />\n\n        <Block>\n          <Case test={this.state.hasReceivedResponse && !this.state.isSuccess}>\n            <When value>\n              <Trans id=\"SignInAuthPage.magic_link_failed\">\n                That magic sign in link didn't work. It may have expired.\n              </Trans>\n              <Link href={paths.rootPath}>\n                <Trans id=\"SignInAuthPage.try_again\">\n                  Try again?\n                </Trans>\n              </Link>\n            </When>\n            <When value={false}>\n              <Trans id=\"SignInAuthPage.signing_in\">\n                Signing in...\n              </Trans>\n            </When>\n          </Case>\n        </Block>\n      </Page>\n    )\n  }\n}\n","import React from 'react'\nimport { Page, Navbar, Block } from 'framework7-react'\nimport Giphy from 'src/components/Giphy'\nimport giphySchedule from 'src/data/giphySchedule'\nimport { DateTime } from 'luxon'\n\nfunction dateString(date: string) {\n  return DateTime.fromFormat(date, 'L/d/yy').toLocaleString(DateTime.DATE_HUGE)\n}\n\nexport default function GiphySchedulePage() {\n  return (\n    <Page>\n      <Navbar title=\"Giphys on Deck\" />\n      <Block strong>\n        Here's what's coming up.\n        {Object.entries(giphySchedule).map(([date, id]) => (\n          <div key={id}>\n            <p>\n              {dateString(date)}\n              :\n              {' '}\n              {id}\n            </p>\n            <Giphy id={id} mode=\"video\" />\n          </div>\n        ))}\n      </Block>\n    </Page>\n  )\n}\n","import React from 'react'\nimport * as jdenticon from 'jdenticon'\nimport { DateTime } from 'luxon'\nimport { GreenlightStatusTypes } from '../models/GreenlightStatus'\n\nconst configs: { [k in GreenlightStatusTypes]: jdenticon.JdenticonConfig } = {\n  recovery: {\n    hues: [328],\n    lightness: {\n      color: [0.5, 1],\n      grayscale: [1, 1],\n    },\n    saturation: {\n      color: 0.5,\n      grayscale: 1,\n    },\n    backColor: '#feecfe',\n  },\n  pending: {\n    hues: [50],\n    lightness: {\n      color: [0.5, 1],\n      grayscale: [1, 1],\n    },\n    saturation: {\n      color: 0.5,\n      grayscale: 1,\n    },\n    backColor: '#f9f1bb',\n  },\n  cleared: {\n    hues: [146],\n    lightness: {\n      color: [0.5, 1],\n      grayscale: [1, 1],\n    },\n    saturation: {\n      color: 0.5,\n      grayscale: 1,\n    },\n    backColor: '#abe8d6',\n  },\n  unknown: {\n    hues: [146],\n    lightness: {\n      color: [0.6, 0.9],\n      grayscale: [1, 1],\n    },\n    saturation: {\n      color: 0.0,\n      grayscale: 0.0,\n    },\n    backColor: '#eeeeee',\n  },\n  absent: {\n    hues: [216],\n    lightness: {\n      color: [0.5, 1],\n      grayscale: [1, 1],\n    },\n    saturation: {\n      color: 0.5,\n      grayscale: 0,\n    },\n    backColor: '#ecf2fe',\n  },\n}\n\ntype Props = {\n  date: DateTime\n  status: GreenlightStatusTypes\n  size: number\n}\n\nconst StatusJDenticon = ({ date, status, size }: Props) => {\n  jdenticon.configure(configs[status])\n  return (\n    <div\n      // dangerouslySetInnerHTML={{ __html: jdenticon.toSvg(user.id, size) }}\n      style={{\n        // border: '1px solid #00000022',\n        borderRadius: `${size}px`,\n        background: `url(data:image/svg+xml;base64,${btoa(\n          jdenticon.toSvg(date.toLocaleString(DateTime.DATE_SHORT), size),\n        )})`,\n        backgroundPosition: 'center',\n        height: `${size}px`,\n        width: `${size}px`,\n        textAlign: 'center',\n        lineHeight: `${size}px`,\n        fontWeight: 'bold',\n        fontSize: `${Math.floor(size / 6)}px`,\n        color: 'var(--gl-color-dark)',\n      }}\n    >\n      {date.toLocaleString(DateTime.DATE_SHORT)}\n    </div>\n  )\n}\n\nexport default StatusJDenticon\n","import React from 'reactn'\nimport {\n  Page, Navbar, Block, Chip,\n} from 'framework7-react'\nimport { store } from 'src/api'\nimport { User } from 'src/models'\n\nimport './UserGreenlightPassPage.css'\nimport StatusJDenticon from 'src/components/StatusJDenticon'\nimport { Case, When } from 'src/components/Case'\n\nimport { defineMessage, Trans } from '@lingui/macro'\nimport { DateTime } from 'luxon'\n\nexport default class UserGreenlightPassPage extends React.Component<any, any> {\n  user() {\n    const { userId } = this.$f7route.params\n\n    if (!userId) throw new Error('Missing user id')\n    const user = store.findEntity<User>(`user-${userId}`)\n    if (!user) throw new Error(`Could not finder user for id ${userId}`)\n    return user\n  }\n\n  render() {\n    const user = this.user()\n    const status = user.greenlightStatus()\n\n    return (\n      <Page className=\"UserGreenlightPassPage\">\n        <Navbar\n          title={this.global.i18n._(defineMessage({ id: 'UserGreenlightPassPage.pass_title', message: 'Greenlight Pass' }))}\n        />\n\n        <Block className=\"text-center\">\n          <h1>\n            {user.fullName()}\n            {' '}\n            <Chip text={status.title().toUpperCase()} />\n          </h1>\n          <div id=\"status-icon\">\n            <StatusJDenticon date={DateTime.local()} status={status.status} size={250} />\n          </div>\n          <p>\n            <Case test={status.createdAt.isValid}>\n              <When value>\n                <Trans id=\"UserGreenlightPassPage.submitted\">\n                  Submitted at {status.createdAt.toLocaleString(DateTime.DATETIME_SHORT)}\n                </Trans>\n              </When>\n              <When value={false}>\n                <Trans id=\"UserGreenlightPassPage.not_submitted\">\n                  Status has not been submitted for today.\n                </Trans>\n              </When>\n            </Case>\n          </p>\n        </Block>\n      </Page>\n    )\n  }\n}\n","import { defineMessage } from '@lingui/macro'\nimport {\n  AccordionContent, Icon, Link, List, ListGroup, ListItem, Navbar, NavRight, Page, Searchbar, Subnavbar,\n} from 'framework7-react'\nimport React, { getGlobal } from 'reactn'\nimport { ReactNComponent } from 'reactn/build/components'\nimport { getUsersForLocation } from 'src/api'\nimport { User } from 'src/models'\nimport { Dict } from 'src/types'\nimport UserJDenticon from 'src/components/UserJDenticon'\nimport { dynamicPaths, paths } from 'src/routes'\nimport { assertNotUndefined, sortBy } from 'src/util'\nimport { NoCurrentUserError } from 'src/errors'\nimport { Router } from 'framework7/modules/router/router'\n\ninterface Props {\n  users: User[]\n  route: Router.Route\n}\n\nclass UsersList extends React.Component<Props, any> {\n  groupByLetter() {\n    const grouped: Dict<User[]> = {}\n    for (const user of this.props.users) {\n      const letter = user.lastName[0]\n      if (!grouped[letter]) grouped[letter] = []\n      grouped[letter].push(user)\n    }\n    return grouped\n  }\n\n  userItem(user: User) {\n    return (\n      <ListItem\n        key={user.id}\n        accordionItem\n        link=\"#\"\n        title={user.reversedName()}\n        after={\n        user.greenlightStatus().title()\n      }\n      >\n        <div slot=\"media\">\n          <UserJDenticon user={user} size={29} key={user.id} />\n        </div>\n        <AccordionContent key={user.id}>\n          <List>\n            {/* <ListItem\n          link={`/users/${user.id}/covid-test`}\n          title=\"Submit COVID Test\"\n        ></ListItem> */}\n            {user.hasNotSubmittedOwnSurvey() && (\n            <ListItem\n              link={dynamicPaths.userSurveysNewPath(user.id, { redirect: this.props.route.path })}\n              title=\"Check-In\"\n            />\n            )}\n            <ListItem\n              link={dynamicPaths.userGreenlightPassPath(user.id)}\n              title={getGlobal().i18n._(defineMessage({ id: 'DashboardPage.greenlight_pass', message: 'Greenlight Pass' }))}\n            />\n            {/* <ListItem\n          link={`/users/${user.id}/absence`}\n          title=\"Schedule Absence\"\n        ></ListItem> */}\n          </List>\n        </AccordionContent>\n      </ListItem>\n    )\n  }\n\n  render() {\n    const grouped = this.groupByLetter()\n    return (\n      <Page>\n        <Navbar title=\"Users\">\n          <Subnavbar inner={false}>\n            <Searchbar\n              searchContainer=\".search-list\"\n              searchIn=\".item-title\"\n            />\n          </Subnavbar>\n\n          <NavRight>\n            <Link onClick={() => window.location.reload()}>\n              <Icon f7=\"arrow_2_circlepath\" />\n            </Link>\n          </NavRight>\n        </Navbar>\n        <List className=\"searchbar-not-found\">\n          <ListItem key=\"blank\" title=\"Nothing found\" />\n        </List>\n        <List className=\"search-list searchbar-found\" contactsList>\n          {\n          sortBy(Object.entries(grouped), (x) => x[0]).map(([letter, users]) => (\n            <ListGroup key={letter}>\n              <ListItem title={letter} groupTitle key={letter} />\n              {sortBy(users, (u) => u.reversedName()).map((user) => this.userItem(user))}\n            </ListGroup>\n          ))\n        }\n        </List>\n      </Page>\n    )\n  }\n}\n\ninterface State {\n  users: User[]\n  isLoaded: boolean\n}\n\nexport default class AdminUsersPage extends ReactNComponent<any, State> {\n  user: User\n\n  locationId: string\n\n  constructor(props: any) {\n    super(props)\n    if (!this.global.currentUser) {\n      throw new NoCurrentUserError()\n    }\n    const locatonId = this.$f7route.params.locationId\n    assertNotUndefined(locatonId)\n    this.locationId = locatonId\n\n    this.user = this.global.currentUser\n    this.state = {\n      users: [],\n      isLoaded: false,\n    }\n  }\n\n  async fetchUsers() {\n    const users = await getUsersForLocation(this.locationId)\n    this.setState({ users, isLoaded: true })\n  }\n\n  componentDidMount() {\n    this.$f7.preloader.show()\n\n    this.fetchUsers().finally(() => {\n      this.$f7.preloader.hide()\n    })\n  }\n\n  render() {\n    return <UsersList users={this.state.users} route={this.$f7route} />\n  }\n}\n","export default __webpack_public_path__ + \"static/media/online-checkup.5bc07d01.svg\";","/* eslint-disable @typescript-eslint/no-unused-expressions */\n// TODO: Translate\nimport React from 'reactn'\n\nimport {\n  Page,\n  Block,\n  Button,\n  Navbar, BlockTitle,\n} from 'framework7-react'\n\nimport { joinWords } from 'src/util'\nimport { User } from 'src/models/User'\nimport { paths } from 'src/routes'\nimport { ReactNComponent } from 'reactn/build/components'\nimport { NoCurrentUserError } from 'src/errors'\n\nimport { defineMessage, Trans } from '@lingui/macro'\nimport { completeWelcomeUser } from 'src/api'\n\nimport onlineCheckupImage from 'src/images/online-checkup.svg'\n\ninterface State {\n  termsOpened: boolean\n  currentUser: User\n}\n\nexport default class WelcomeSurveyPage extends ReactNComponent<any, State> {\n  user: User\n\n  constructor(props: any) {\n    super(props)\n\n    if (!this.global.currentUser) {\n      throw new NoCurrentUserError()\n    }\n    this.user = this.global.currentUser\n\n    completeWelcomeUser(this.user)\n  }\n\n  render() {\n    return (\n      <Page>\n        <Navbar\n          title={this.global.i18n._(defineMessage({ id: 'WelcomeSurveyPage.title', message: 'Symptom Surveys' }))}\n        />\n\n        <BlockTitle>\n          <Trans id=\"WelcomeSurveyPage.heading\">\n            Your First Symptom Check-In\n          </Trans>\n        </BlockTitle>\n        <Block>\n          <p>\n            <Trans id=\"WelcomeSurveyPage.thank_you\">\n              Thanks for providing that information!\n            </Trans>\n          </p>\n\n          <p>\n            <Trans id=\"WelcomeSurvyePage.instructions\">\n              Greenlight helps keep your community safe by monitoring everyone's health.\n              We need your help! You should fill out this survey every day especially.\n            </Trans>\n          </p>\n          <br />\n          <img src={onlineCheckupImage} alt=\"Daily Check-In\" />\n\n          <br />\n          <br />\n          <Trans id=\"WelcomeSurveyPage.next_screen\">\n            On the next screen, you'll fill out your first survey.\n          </Trans>\n          <br />\n          <br />\n          <Button href={paths.userSeqSurveysNewPath} fill>\n            <Trans id=\"WelcomeSurveyPage.continue\">Continue to Surveys</Trans>\n          </Button>\n        </Block>\n      </Page>\n    )\n  }\n}\n","import React from 'react'\nimport { Navbar, Page, Block } from 'framework7-react'\nimport releases, { ReleaseData } from 'src/data/releases'\nimport { defineMessage, Trans } from '@lingui/macro'\nimport { getGlobal } from 'reactn'\nimport { DateTime } from 'luxon'\nimport { GLLocales } from 'src/i18n'\n\nclass Release {\n  releaseData: ReleaseData\n\n  locale: GLLocales\n\n  whatsNew: string[]\n\n  bugFixes: string[]\n\n  notes: string\n\n  constructor(releaseData: ReleaseData) {\n    this.releaseData = releaseData\n    this.locale = getGlobal().locale\n    this.whatsNew = this.locale === 'en' ? this.releaseData.whatsNewEn : this.releaseData.whatsNewEs\n    this.bugFixes = this.locale === 'en' ? this.releaseData.bugFixesEn : this.releaseData.bugFixesEs\n    this.notes = this.locale === 'en' ? this.releaseData.notesEn : this.releaseData.notesEs\n  }\n\n  title() {\n    const version = getGlobal().i18n._(defineMessage({ id: 'Common.version', message: 'Version' }))\n    return `${version} ${this.releaseData.version}`\n  }\n\n  hasNotes() {\n    return this.notes.length > 0\n  }\n\n  hasWhatsNew() {\n    return this.whatsNew.length > 0\n  }\n\n  hasBugFixes() {\n    return this.bugFixes.length > 0\n  }\n\n  whatsNewList() {\n    return (\n      <ul>\n        {this.whatsNew.map((item) => (\n          <li dangerouslySetInnerHTML={{ __html: item }} />\n        ))}\n      </ul>\n    )\n  }\n\n  bugFixesList() {\n    return (\n      <ul>\n        {this.bugFixes.map((item) => (\n          <li dangerouslySetInnerHTML={{ __html: item }} />\n        ))}\n      </ul>\n    )\n  }\n}\n\nexport default function ReleaseNotesPage() {\n  return (\n    <Page className=\"ReleaseNotesPage\" noToolbar>\n      <Navbar\n        title={getGlobal().i18n._(defineMessage({ id: 'ReleaseNotesPage.title', message: 'Greenlight Release Notes' }))}\n        sliding\n      />\n      <Block>\n        {releases\n          .map((releaseData: ReleaseData) => new Release(releaseData))\n          .map((release: Release) => (\n            <div>\n              <h2>{release.title()}</h2>\n              <p style={{ fontWeight: 'bold' }}>\n                {release.releaseData.date.setLocale(getGlobal().locale).toLocaleString(DateTime.DATE_FULL)}\n              </p>\n              {release.hasNotes() && <p dangerouslySetInnerHTML={{ __html: release.notes }} />}\n              {release.hasWhatsNew() && (\n                <>\n                  <p style={{ fontWeight: 'bold' }}>\n                    <Trans id=\"ReleaseNotesPage.whats_new\">What's New</Trans>\n                  </p>\n                  {release.whatsNewList()}\n                </>\n              )}\n              {release.hasBugFixes() && (\n                <>\n                  <p style={{ fontWeight: 'bold' }}><Trans id=\"ReleaseNotesPage.bug_fixes\">Bug Fixes</Trans></p>\n                  {release.bugFixesList()}\n                </>\n              )}\n            </div>\n          ))}\n      </Block>\n    </Page>\n  )\n}\n","import React, { useEffect, useRef } from 'reactn'\nimport { Page, Navbar, Block } from 'framework7-react'\nimport ReactEcharts from 'echarts-for-react'\nimport echarts from 'echarts/lib/echarts'\n\nimport states from 'src/data/states.json'\n\nconst state = 'North Carolina'\n// const county = 'Durham'\n\nconst MapPage = ({}) => {\n  const mapRef = useRef(null)\n  useEffect(() => {\n    const stateInfo = states.find((stateItem) => stateItem.label === state)\n    const geoData = require(`src/data/geo_data/${stateInfo!.value}.json`)\n    echarts.registerMap('filteredState', geoData)\n  }, [])\n\n  return (\n    <Page>\n      <Navbar title=\"Map\" backLink=\"Back\" />\n      <Block>\n        <ReactEcharts ref={mapRef} option={{}} style={{ flex: 1 }} />\n      </Block>\n    </Page>\n  )\n}\n\nexport default MapPage\n\nconst chartOption = {\n  title: {\n    text: 'USA Estimates',\n    subtext: 'GeoJSON Data from Eric Celeste',\n    sublink: 'https://eric.clst.org/tech/usgeojson/',\n  },\n  tooltip: {\n    trigger: 'item',\n    showDelay: 0,\n    transitionDuration: 0.2,\n    formatter(params: any) {\n      const value = (`${params.value}`).split('.')[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,')\n      return `${params.seriesName}<br/>${params.name}: ${value}`\n    },\n  },\n  visualMap: {\n    min: 0,\n    max: 10000,\n    inRange: {\n      color: [\n        '#313695',\n        '#4575b4',\n        '#74add1',\n        '#abd9e9',\n        '#e0f3f8',\n        '#ffffbf',\n        '#fee090',\n        '#fdae61',\n        '#f46d43',\n        '#d73027',\n        '#a50026',\n      ],\n    },\n    text: ['High', 'Low'],\n    calculable: true,\n  },\n  toolbox: {\n    show: true,\n    left: 'right',\n    top: 'top',\n    feature: {\n      dataView: { readOnly: false },\n      restore: {},\n      saveAsImage: {},\n    },\n  },\n  series: [\n    {\n      name: 'USA Estimates',\n      map: 'filteredState',\n      type: 'map',\n      zoom: 4,\n      roam: true,\n      label: {\n        show: true,\n      },\n      emphasis: {\n        label: {\n          show: true,\n        },\n      },\n    },\n  ],\n}\n","import React from 'reactn'\nimport {\n  Page, Navbar, List, ListItem,\n} from 'framework7-react'\n\nimport { t } from '@lingui/macro'\nimport { paths } from 'src/routes'\nimport releaseData from 'src/data/releases'\n\nconst SettingsPage = () => (\n  <Page>\n    <Navbar title={t({ id: 'AboutPage.title', message: 'About' })} />\n    <List noHairlines>\n      <ListItem\n        title={t({ id: 'AboutPage.greenlight_version', message: 'Greenlight Version' })}\n        footer={releaseData[0].version}\n        noChevron\n      />\n      <ListItem\n        link=\"https://medium.com/greenlightready\"\n        title={t({ id: 'AboutPage.visit_the_blog', message: 'Visit the Blog' })}\n        external\n      />\n      <ListItem\n        link=\"https://greenlightready.com\"\n        title={t({ id: 'AboutPage.visit_our_site', message: 'Visit our Website' })}\n        external\n      />\n      <ListItem\n        link={paths.openSourcePath}\n        title={t({ id: 'AboutPage.open_source_licenses', message: 'Open Source Licenses' })}\n      />\n      <ListItem\n        link=\"https://greenlighted.org/privacy\"\n        title={t({ id: 'AboutPage.privacy_policy', message: 'Privacy Policy' })}\n        external\n      />\n      <ListItem\n        link=\"https://app.greenlightready.com/terms\"\n        title={t({ id: 'AboutPage.terms_of_service', message: 'Terms of Service' })}\n        external\n      />\n    </List>\n  </Page>\n)\n\nexport default SettingsPage\n","import { t } from '@lingui/macro'\nimport Framework7 from 'framework7'\nimport logger from 'src/logger'\n\nexport default class SubmissionHandler {\n  f7: Framework7\n\n  onSubmitMessage: string\n\n  onErrorTitle: string\n\n  onErrorMessage: string\n\n  onSuccess: () => void\n\n  onError: (error: any) => void\n\n  constructor(f7: Framework7, options: Partial<SubmissionHandler> = {}) {\n    this.f7 = f7\n\n    this.onSubmitMessage = options.onSubmitMessage || t({ id: 'Common.submitting', message: 'Submitting...' })\n    this.onErrorTitle = options.onErrorTitle || t({ id: 'Common.submission_failed', message: 'Submission Failed' })\n    this.onErrorMessage = options.onErrorMessage || t({ id: 'Common.somethings_wrong', message: 'Something went wrong' })\n    this.onSuccess = options.onSuccess || (() => {})\n    this.onError = options.onError || (() => {})\n  }\n\n  async submit(action: () => Promise<any>) {\n    this.f7.dialog.preloader(this.onSubmitMessage)\n\n    try {\n      await action()\n      this.f7.dialog.close()\n    } catch (error) {\n      this.f7.dialog.close()\n      logger.error(error)\n      this.f7.dialog.alert(this.onErrorTitle, this.onErrorMessage)\n    }\n  }\n}\n","import React, { useGlobal } from 'reactn'\nimport {\n  Page, Navbar, f7, List, ListInput, Block, Button, ListItem,\n} from 'framework7-react'\n\nimport { t, Trans } from '@lingui/macro'\nimport { useFormik, FormikProvider } from 'formik'\nimport * as Yup from 'yup'\nimport { DateTime } from 'luxon'\n\nimport { store, updateUser } from 'src/api'\nimport { reloadCurrentUser } from 'src/initializers/providers'\n\nimport { paths } from 'src/routes'\n\nimport {\n  assertNotNull, formatPhone, isBlank,\n} from 'src/util'\nimport { User } from 'src/models'\nimport SubmissionHandler from 'src/misc/SubmissionHandler'\nimport { FunctionComponent, F7Props } from '../types'\n\ninterface EditUserInput {\n  firstName: string\n  lastName: string\n  email: string\n  mobileNumber: string\n  zipCode: string\n  birthDate: Date | null\n  physicianName: string\n  physicianPhoneNumber: string\n  needsPhysician: boolean\n}\n\nconst schema = Yup.object<EditUserInput>().shape({\n  firstName: Yup.string().required(),\n  lastName: Yup.string().required(),\n  zipCode: Yup.string().matches(/^\\d{5}$/, {\n    excludeEmptyString: true,\n    message: t({ id: 'EditUserPage.invalid_zip_code', message: 'Zip code should be 5 digits' }),\n  }),\n})\n\nconst UserEditPage: FunctionComponent<F7Props> = ({ f7route, f7router }) => {\n  const [currentUser] = useGlobal('currentUser')\n  assertNotNull(currentUser)\n  const submissionHandler = new SubmissionHandler(f7)\n\n  const { userId } = f7route.params\n\n  const user = store.findEntity<User>(`user-${userId}`)\n\n  if (!user) {\n    f7router.navigate(paths.notFoundPath)\n    return <></>\n  }\n\n  const formik = useFormik<EditUserInput>({\n    validationSchema: schema,\n    validateOnChange: true,\n    initialValues: {\n      firstName: user.firstName || '',\n      lastName: user.lastName || '',\n      email: user.email || '',\n      mobileNumber: user.mobileNumber || '',\n      zipCode: user.zipCode || '',\n      birthDate: user.birthDate?.isValid ? user.birthDate.toJSDate() : null,\n      physicianName: user.physicianName || '',\n      physicianPhoneNumber: user.physicianPhoneNumber || '',\n      needsPhysician: user.needsPhysician || false,\n    },\n    onSubmit: (values) => {\n      submissionHandler.submit(async () => {\n        if (formik.dirty) {\n          await updateUser(user, {\n            ...values,\n            birthDate: values.birthDate ? DateTime.fromJSDate(values.birthDate) : null,\n          })\n          await reloadCurrentUser()\n        }\n        f7router.back()\n      })\n    },\n  })\n\n  return (\n    <Page>\n      <Navbar title={t({ id: 'EditUserPage.title', message: 'Edit User' })} />\n\n      <FormikProvider value={formik}>\n        <List form id=\"EditUserPage-form\" onSubmit={formik.handleSubmit} noHairlines>\n          <ListInput\n            name=\"firstName\"\n            label={t({ id: 'EditUserPage.first_name_label', message: 'First Name' })}\n            validateOnBlur\n            value={formik.values.firstName}\n            required\n            onInput={formik.handleChange}\n            errorMessage={t({ id: 'EditUserPage.first_name_missing', message: 'Please enter your first name.' })}\n          />\n          <ListInput\n            name=\"lastName\"\n            label={t({ id: 'EditUserPage.last_name_label', message: 'Last Name' })}\n            validateOnBlur\n            value={formik.values.lastName}\n            required\n            onInput={formik.handleChange}\n            errorMessage={t({ id: 'EditUserPage.last_name_missing', message: 'Please enter your last name.' })}\n          />\n          <ListInput\n            name=\"email\"\n            label={t({ id: 'EditUserPage.email_label', message: 'Email' })}\n            validateOnBlur\n            value={formik.values.email}\n            onInput={formik.handleChange}\n            info={t({ id: 'EditUserPage.cant_be_changed', message: \"Can't be changed at this time.\" })}\n            disabled\n          />\n          <ListInput\n            name=\"mobileNumber\"\n            label={t({ id: 'EditUserPage.mobile_number_label', message: 'Mobile Number' })}\n            validateOnBlur\n            value={formatPhone(formik.values.mobileNumber)}\n            onInput={formik.handleChange}\n            info={t({ id: 'EditUserPage.cant_be_changed', message: \"Can't be changed at this time.\" })}\n            disabled\n          />\n\n          <ListInput\n            name=\"zipCode\"\n            label={t({ id: 'EditUserPage.zip_code_label', message: 'Zip Code' })}\n            errorMessageForce\n            errorMessage={formik.errors.zipCode}\n            value={formik.values.zipCode}\n            onInput={formik.handleChange}\n            onBlur={formik.handleBlur}\n          />\n\n          <ListInput\n            label={t({ id: 'EditUserPage.date_of_birth_label', message: 'Date of Birth' })}\n            value={isBlank(formik.values.birthDate) ? [] : [formik.values.birthDate]}\n            type=\"datepicker\"\n            clearButton\n            calendarParams={{\n              locale: currentUser.locale,\n              routableModals: false,\n            }}\n            onCalendarChange={(d) => {\n              formik.handleChange({\n                target: {\n                  name: 'birthDate',\n                  value: d === [] ? null : d[0],\n                },\n              })\n            }}\n          />\n\n          <ListInput\n            name=\"physicianName\"\n            label={t({ id: 'EditUserPage.primary_care_physician_name_label', message: 'Primary Care Physician Name' })}\n            value={formik.values.physicianName}\n            onInput={formik.handleChange}\n          />\n\n          <ListInput\n            name=\"physicianPhoneNumber\"\n            label={t({\n              id: 'EditUserPage.primary_care_physician_phone_number_label',\n              message: 'Primary Care Physician Phone Number',\n            })}\n            value={formik.values.physicianPhoneNumber}\n            type=\"tel\"\n            onInput={formik.handleChange}\n          />\n\n          <ListItem\n            name=\"needsPhysician\"\n            checkbox\n            title={t({ id: 'EditUserPage.need_help_finding_physician', message: 'Need help finding a physician?' })}\n            checked={formik.values.needsPhysician}\n            onChange={formik.handleChange}\n          />\n\n          <Block>\n            <Button type=\"submit\" outline fill>\n              <Trans id=\"Common.submit\">Submit</Trans>\n            </Button>\n          </Block>\n        </List>\n      </FormikProvider>\n    </Page>\n  )\n}\n\nexport default UserEditPage\n","import { FormikErrors, useField } from 'formik'\nimport { ListInput } from 'framework7-react'\nimport React, { ReactNode } from 'react'\nimport { FormikInstance } from 'src/types'\nimport { assertNotUndefined, isPresent } from 'src/util'\n\nfunction processError(\n  error: string | FormikErrors<any> | string[] | FormikErrors<any>[] | undefined,\n): string | undefined {\n  if (typeof error === 'string' || !error) {\n    return error\n  }\n  if (Array.isArray(error)) {\n    // FIXME: error could be a FormikErrors<any>[]\n    return error.join('; ')\n  }\n  // FIXME: error could be a FormikErrors<any>\n  return error.toString()\n}\n\nexport default function FormikInput(props: ListInput.Props & { children?: ReactNode }) {\n  assertNotUndefined(props.name)\n  const [field, meta] = useField(props.name)\n  const errorMessage = processError(meta.error)\n\n  const newProps = {\n    onBlur: field.onBlur,\n    onChange: field.onChange,\n    name: props.name,\n    value: field.value,\n    errorMessage,\n    autocomplete: 'off',\n    autocorrect: 'off',\n    autocapitalize: 'off',\n    spellcheck: 'false',\n    errorMessageForce: isPresent(errorMessage) && meta.touched,\n    ...props,\n  }\n\n  // delete newProps.formik\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return <ListInput {...newProps} />\n}\n\n// We do this to prevent Framework7 from wrapping the list input in a ul\nFormikInput.displayName = 'F7ListInput'\n","import { useField } from 'formik'\nimport { ListItem } from 'framework7-react'\nimport React from 'react'\nimport { assertNotUndefined } from 'src/util'\n\nexport default function FormikItem(props: ListItem.Props) {\n  assertNotUndefined(props.name)\n  const [field] = useField(props.name)\n  const newProps = {\n    ...props,\n    onChange: field.onChange,\n    name: props.name,\n  }\n\n  if (props.checkbox) {\n    newProps.checked = field.value\n  }\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return <ListItem {...newProps} />\n}\nFormikItem.displayName = 'F7ListItem'\n","import React from 'react'\n\nexport const SUPPORT_EMAIL = 'help@greenlightready.com'\n\ninterface Props {\n  email: string\n  text?: string\n}\n\nexport default function EmailLink({ email, text }: Props) {\n  return (\n    <a href={`mailto:${email}`}>{text || email}</a>\n  )\n}\n","import { t, Trans } from '@lingui/macro'\nimport {\n  Block, Navbar, Page, Preloader,\n} from 'framework7-react'\nimport React from 'react'\nimport EmailLink, { SUPPORT_EMAIL } from 'src/components/EmailLink'\nimport './LoadingPage.css'\n\nexport default function LoadingPage({ title }: { title?: string}): JSX.Element {\n  return (\n    <Page>\n      <Navbar title={title || t({ id: 'LoadingPage.title', message: 'Loading...' })} />\n      <Block className=\"LoadingPage container\">\n        <div className=\"LoadingPage item\"><Preloader /></div>\n      </Block>\n      <Block>\n        <p>\n          <Trans id=\"LoadingPage.message\">\n            Stuck here for too long? Try refreshing the page. If you still need help please email us at <EmailLink email={SUPPORT_EMAIL} />.\n          </Trans>\n        </p>\n      </Block>\n    </Page>\n  )\n}\n","import React, { useState, useEffect } from 'reactn'\nimport {\n  Page, Navbar, BlockTitle, Badge, Block, Button, Preloader, Link,\n} from 'framework7-react'\nimport { Trans, t } from '@lingui/macro'\n\nimport { FunctionComponent, F7Props } from 'src/types'\nimport { assertNotNull, assertNotUndefined, formatPhone } from 'src/util'\nimport { paths } from 'src/routes'\n\nimport './LocationPage.css'\nimport { Location } from 'src/models'\nimport { getLocation } from 'src/api'\nimport LoadingPage from './LoadingPage'\n\nconst LocationPage: FunctionComponent<F7Props> = ({ f7route, f7router }) => {\n  const { locationId } = f7route.params\n  assertNotUndefined(locationId)\n\n  const [location, setLocation] = useState<Location | null>()\n  const [error, setError] = useState<any>(null)\n\n  useEffect(() => {\n    getLocation(locationId).then(setLocation).catch(setError)\n  }, [locationId])\n\n  if (!location && !error) {\n    return (\n      <LoadingPage />\n    )\n  }\n\n  if (!location && error) {\n    return (\n      <Page>\n        <Block>\n          Something went wrong.\n        </Block>\n      </Page>\n    )\n  }\n\n  assertNotNull(location)\n  assertNotUndefined(location)\n\n  return (\n    <Page>\n      <Block>\n        <BlockTitle medium className=\"title\">\n          <b>{location.name}</b>\n          <Badge className=\"title-badge\">\n            {location.category}\n          </Badge>\n        </BlockTitle>\n        <ul>\n          {location.website && <li>Website: <Link href={location.website}>{location.website}</Link><br /></li>}\n          {location.phoneNumber && <li>Phone Number: <Link href={`tel:${location.phoneNumber}`}>{formatPhone(location.phoneNumber)}</Link></li>}\n          {location.email && <li>Email: <Link href={`mailto:${location.email}`}>{location.email}</Link></li>}\n        </ul>\n        <p>\n          This location will only have access to your status (cleared, pending, recovery) and your COVID test results.\n          You can revoke access at any time.\n        </p>\n        <Button fill>\n          <Trans id=\"Location.register\">\n            Register\n          </Trans>\n        </Button>\n      </Block>\n    </Page>\n  )\n}\n\nexport default LocationPage\n","import React, { useState } from 'reactn'\nimport {\n  f7, Page, Navbar, Block, Button, List, ListInput, ListItem,\n} from 'framework7-react'\nimport { Trans, t } from '@lingui/macro'\nimport { useFormik, FormikProvider } from 'formik'\nimport ReactCodeInput from 'react-verification-code-input'\nimport * as Yup from 'yup'\n\nimport { FunctionComponent, F7Props } from 'src/types'\nimport SubmissionHandler from 'src/misc/SubmissionHandler'\n\nimport './MobileVerificationPage.css'\n\ninterface MobileInput {\n  mobileNumber: string\n  mobileCarrier: string\n}\n\nconst schema = Yup.object<MobileInput>().shape({\n  mobileNumber: Yup.string()\n    .required()\n    .matches(/^\\(?(\\d{3})\\)?[-\\. ]?(\\d{3})[-\\. ]?(\\d{4})( x\\d{4})?$/gm, {\n      excludeEmptyString: true,\n      message: t({ id: 'MobileVerificationPage.invalid_phone_number', message: 'Invalid Phone Number' }),\n    }),\n  mobileCarrier: Yup.string().required(),\n})\n\nconst submissionHandler = new SubmissionHandler(f7)\n\nconst MobileVerificationPage: FunctionComponent<F7Props> = () => {\n  const [isCodeSent, setCodeSent] = useState(false)\n  const [verificationCodeInput, setVerificationCodeInput] = useState({\n    value: '',\n    isValid: false,\n    touched: false,\n  })\n\n  const formik = useFormik<MobileInput>({\n    validationSchema: schema,\n    validateOnChange: true,\n    validateOnBlur: true,\n    initialValues: {\n      mobileNumber: '',\n      mobileCarrier: '',\n    },\n    onSubmit: (values) => {\n      submissionHandler.submit(async () => {\n        console.log('submit', values)\n        setCodeSent(true)\n        return Promise.resolve()\n      })\n    },\n  })\n\n  return (\n    <Page>\n      <Navbar title={t({ id: 'MobileVerificationPage.title', message: 'Mobile Verification' })} />\n\n      <FormikProvider value={formik}>\n        <List form id=\"MobileVerificationPage-form\" onSubmit={formik.handleSubmit} noHairlines>\n          <ListInput\n            name=\"mobileNumber\"\n            label={t({ id: 'MobileVerificationPage.mobile_number_label', message: 'Mobile Number' })}\n            value={formik.values.mobileNumber}\n            onInput={formik.handleChange}\n            onBlur={formik.handleBlur}\n            errorMessage={formik.errors.mobileNumber}\n            errorMessageForce\n          />\n\n          <ListInput\n            name=\"mobileCarrier\"\n            label={t({ id: 'MobileVerificationPage.mobile_carrier_label', message: 'Mobile Carrier' })}\n            type=\"select\"\n            value={formik.values.mobileCarrier}\n            onInput={formik.handleChange}\n            onBlur={formik.handleBlur}\n            errorMessage={formik.errors.mobileCarrier}\n            errorMessageForce\n          >\n            <option value=\"something1\">Something1</option>\n            <option value=\"something2\">Something2</option>\n            <option value=\"something3\">Something3</option>\n            <option value=\"something4\">Something4</option>\n            <option value=\"something5\">Something5</option>\n          </ListInput>\n\n          {isCodeSent && (\n            <ListInput\n              label={t({ id: 'MobileVerificationPage.verification_code', message: 'Verification Code' })}\n              input={false}\n              errorMessage={\n                !verificationCodeInput.isValid && verificationCodeInput.touched\n                  ? t({\n                    id: 'MobileVerificationPage.verification_code_required',\n                    message: 'Verification Code is Required',\n                  })\n                  : undefined\n              }\n              errorMessageForce\n            >\n              <div slot=\"input\">\n                <ReactCodeInput\n                  fields={6}\n                  className=\"verification-input\"\n                  onChange={(v) => setVerificationCodeInput((originalValue) => ({ ...originalValue, value: v, isValid: false }))}\n                  onComplete={(v) => setVerificationCodeInput({ value: v, isValid: true, touched: true })}\n                />\n              </div>\n            </ListInput>\n          )}\n\n          {isCodeSent && (\n            <ListItem>\n              <div>\n                <span>\n                  <Trans id=\"MobileVerificationPage.code_not_received\">Didn't receive one?</Trans>\n                </span>\n                <span onClick={() => formik.handleSubmit()} className=\"resend-code\">\n                  <Trans id=\"MobileVerificationPage.click_here_to_resend\">Click here to try again</Trans>\n                </span>\n              </div>\n            </ListItem>\n          )}\n\n          <Block>\n            {isCodeSent ? (\n              <Button\n                type=\"button\"\n                outline\n                fill\n                onClick={() => {\n                  setVerificationCodeInput((v) => ({ ...v, touched: true }))\n                }}\n              >\n                <Trans id=\"Common.submit\">Submit</Trans>\n              </Button>\n            ) : (\n              <Button type=\"submit\" outline fill>\n                <Trans id=\"Common.send_code\">Send Code</Trans>\n              </Button>\n            )}\n          </Block>\n        </List>\n      </FormikProvider>\n    </Page>\n  )\n}\n\nexport default MobileVerificationPage\n","import React from 'reactn'\nimport {\n  f7, Page, Navbar, Block, Button, List, ListInput,\n} from 'framework7-react'\nimport { Trans, t } from '@lingui/macro'\nimport { useFormik, FormikProvider } from 'formik'\nimport * as Yup from 'yup'\n\nimport { FunctionComponent, F7Props } from 'src/types'\nimport SubmissionHandler from 'src/misc/SubmissionHandler'\n\ninterface RegistrationInput {\n  firstName: string\n  lastName: string\n  email: string\n  registrationCode: string\n}\n\nconst schema = Yup.object<RegistrationInput>().shape({\n  firstName: Yup.string().required(\n    t({ id: 'LocationRegistrationPage.first_name_required', message: 'Please input first name' }),\n  ),\n  lastName: Yup.string().required(\n    t({ id: 'LocationRegistrationPage.last_name_required', message: 'Please input last name' }),\n  ),\n  email: Yup.string().email(\n    t({ id: 'LocationRegistrationPage.invalid_email', message: 'Please input valid email address' }),\n  ),\n  registrationCode: Yup.string().required(\n    t({ id: 'LocationRegistrationPage.registration_code_required', message: 'Please input registration code' }),\n  ),\n})\n\nconst submissionHandler = new SubmissionHandler(f7)\n\nconst LocationRegistrationPage: FunctionComponent<F7Props> = () => {\n  const formik = useFormik<RegistrationInput>({\n    validationSchema: schema,\n    validateOnChange: true,\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      registrationCode: '',\n    },\n    onSubmit: (values) => {\n      submissionHandler.submit(async () => {\n        console.log('submit', values)\n        return Promise.resolve()\n      })\n    },\n  })\n\n  return (\n    <Page>\n      <Navbar title={t({ id: 'LocationRegistrationPage.title', message: 'GreenLight Cafe Registration' })} />\n\n      <FormikProvider value={formik}>\n        <List form id=\"LocationRegistrationPage-form\" onSubmit={formik.handleSubmit} noHairlines>\n          <ListInput\n            name=\"firstName\"\n            label={t({ id: 'LocationRegistrationPage.first_name', message: 'First Name' })}\n            value={formik.values.firstName}\n            onInput={formik.handleChange}\n            onBlur={formik.handleBlur}\n            errorMessage={formik.errors.firstName}\n            errorMessageForce\n          />\n\n          <ListInput\n            name=\"lastName\"\n            label={t({ id: 'LocationRegistrationPage.last_name', message: 'Last Name' })}\n            value={formik.values.lastName}\n            onInput={formik.handleChange}\n            onBlur={formik.handleBlur}\n            errorMessage={formik.errors.lastName}\n            errorMessageForce\n          />\n\n          <ListInput\n            name=\"email\"\n            label={t({ id: 'LocationRegistrationPage.email', message: 'Email' })}\n            value={formik.values.email}\n            onInput={formik.handleChange}\n            onBlur={formik.handleBlur}\n            errorMessage={formik.errors.email}\n            errorMessageForce\n          />\n\n          <ListInput\n            name=\"registrationCode\"\n            label={t({ id: 'LocationRegistrationPage.registration_code', message: 'Registration Code' })}\n            value={formik.values.registrationCode}\n            onInput={formik.handleChange}\n            onBlur={formik.handleBlur}\n            errorMessage={formik.errors.registrationCode}\n            errorMessageForce\n          />\n\n          <Block>\n            <Button type=\"submit\" outline fill>\n              <Trans id=\"Common.submit\">Submit</Trans>\n            </Button>\n          </Block>\n        </List>\n      </FormikProvider>\n    </Page>\n  )\n}\n\nexport default LocationRegistrationPage\n","import { t, Trans } from '@lingui/macro'\nimport { Block, BlockTitle, Button, f7, Link, List, ListItem, ListItemCell, ListItemRow } from 'framework7-react'\nimport { Router } from 'framework7/modules/router/router'\nimport React, { useState } from 'react'\nimport FormikInput from 'src/components/FormikInput'\nimport FormikItem from 'src/components/FormikItem'\nimport { LocationCategories } from 'src/models/Location'\nimport { FormikInstance } from 'src/types'\nimport { Location } from 'src/models'\nimport * as Yup from 'yup'\nimport 'yup-phone'\nimport SubmissionHandler from 'src/misc/SubmissionHandler'\nimport { useFormik, FormikProvider } from 'formik'\nimport { reloadCurrentUser } from 'src/initializers/providers'\nimport { createLocation, createUserAndSignIn } from 'src/api'\nimport { assertNotNull, isBlank, isPresent } from 'src/util'\nimport { useGlobal } from 'reactn'\nimport { paths } from 'src/routes'\n\nclass LocationInput {\n  name: string | null = null\n\n  zipCode: string | null = null\n\n  email: string | null = null\n\n  phoneNumber: string | null = null\n\n  website: string | null = null\n\n  permalink: string | null = null\n\n  category: LocationCategories | null = null\n\n  employeeCount: number | null = null\n\n  dailyReminderHour = 8\n\n  dailyReminderAMPM: 'am' | 'pm' = 'am'\n\n  remindMon = true\n\n  remindTue = true\n\n  remindWed = true\n\n  remindThu = true\n\n  remindFri = true\n\n  remindSat = true\n\n  remindSun = true\n}\n\nexport default function LocationForm({ location, f7router }: { location?: Location; f7router: Router.Router }) {\n  const [almostFinished, setAlmostFinished] = useState(false)\n  const [currentUser] = useGlobal('currentUser')\n  assertNotNull(currentUser)\n  const cantBeBlankMessage = t({ id: 'Form.error_blank', message: \"Can't be blank\" })\n  const invalidMessage = t({ id: 'Form.error_invalid', message: 'Is invalid' })\n\n  const submissionHandler = new SubmissionHandler(f7)\n\n  const formik = useFormik<LocationInput>({\n    validationSchema: Yup.object<LocationInput>().shape({\n      name: Yup.string().required(cantBeBlankMessage),\n      // website: Yup.string(),\n      // email: Yup.string()\n      //   .email(invalidMessage).nullable(),\n      // phoneNumber: Yup.string()\n      //   .phone('US', undefined, t({ id: 'Form.error_invalid', message: 'Is invalid' })).nullable(),\n      permalink: Yup.string()\n        .matches(/^[a-z0-9-]+$/, {\n          message: t({ id: 'Form.error_invalid2', message: 'only lowercase letters, dashes for spaces, and numbers' }),\n        })\n        .min(3)\n        .required(cantBeBlankMessage),\n      zipCode: Yup.string()\n        .matches(/^\\d{5}$/, {\n          excludeEmptyString: true,\n          message: t({ id: 'EditUserPage.invalid_zip_code', message: 'Zip code should be 5 digits' }),\n        })\n        .nullable(),\n      employeeCount: Yup.number().min(1).required(cantBeBlankMessage),\n    }),\n    initialValues: new LocationInput(),\n    onSubmit: (values) => {\n      submissionHandler.submit(async () => {\n        if (formik.dirty) {\n          await createLocation({\n            ...values,\n            dailyReminderTime: values.dailyReminderHour + (values.dailyReminderAMPM === 'pm' ? 12 : 0),\n          })\n          await reloadCurrentUser()\n          setAlmostFinished(true)\n        }\n      })\n    },\n  })\n\n  if (!almostFinished) {\n    return (\n      <FormikProvider value={formik}>\n        <List\n          form\n          onSubmit={(e) => {\n            e.preventDefault()\n            formik.handleSubmit(e)\n          }}\n        >\n          <LocationBlock formik={formik} />\n          <LocationNotificationsBlock formik={formik} />\n          <Button fill type=\"submit\">\n            <Trans id=\"LocationForm.create_location\">Create Your Location</Trans>\n          </Button>\n        </List>\n      </FormikProvider>\n    )\n  } else {\n    const location = currentUser?.locations__HACK()[currentUser?.locations__HACK().length - 1]\n\n    if (!location) {\n      return (\n        <Block>\n          <h1>Your Location Has Been Created</h1>\n          <p>\n            Check your email for more information about how to register your employees. For now, let's fill out your\n            first survey.\n          </p>\n          <Button fill href={paths.welcomeSurveyPath}>\n            Learn About Surveys\n          </Button>\n        </Block>\n      )\n    }\n\n    const url = `https://app.greenlightready.com/l/${location.permalink}/code/${location.registrationCode}`\n\n    return (\n      <Block>\n        <h1>Your Location Has Been Created</h1>\n        <p>\n          Your employees can now create their accounts by visitng the following link:\n          <br />\n          <b>{url}</b>\n          <br />\n          <br />\n          They can also sign up by visiting the app, clicking create account, and signing in with the following location\n          id and registration code:\n          <br />\n          <br />\n          Location ID: {location.permalink}\n          <br />\n          Registration Code: {location.registrationCode} (case insensitive)\n          <br />\n          <br />\n          If you have any questions, feel free to email us at help@greenlightready.com\n          <br />\n          <br />\n          You will also receive an email with these instructions.\n        </p>\n        <Button fill href={paths.welcomeSurveyPath}>\n          Learn About Surveys\n        </Button>\n      </Block>\n    )\n  }\n}\n\nfunction LocationBlock({ formik }: { formik: FormikInstance<any> }) {\n  const [currentUser] = useGlobal('currentUser')\n  assertNotNull(currentUser)\n  const ownerCount = currentUser.locationAccounts.filter((x) => x.permissionLevel === 'owner').length\n  return (\n    <>\n      <Block>\n        <BlockTitle>Your Business's Information</BlockTitle>\n        Please fill out the form below with information about your business.{' '}\n        {ownerCount > 0 && (\n          <span>\n            Note you already have registered {ownerCount} business. If you're having trouble with access send us an\n            email help@greenlightready.com\n          </span>\n        )}\n      </Block>\n      <List\n        noHairlines\n        form\n        onSubmit={() => {\n          formik.submitForm()\n        }}\n      >\n        <FormikInput label={t({ id: 'Forms.location_name', message: 'Location Name' })} name=\"name\" type=\"text\" />\n        <FormikInput\n          label={t({ id: 'Forms.location_id', message: 'Location ID (Used for Links)' })}\n          name=\"permalink\"\n          placeholder=\"Lowercase letters, numbers, and dashes only\"\n          type=\"text\"\n        />\n        {isPresent(formik.values.permalink) && isBlank(formik.errors.permalink) && (\n          <ListItem>\n            Users will be able to register for your location by visiting:\n            <br />\n            https://app.greenlightready.com/l/{formik.values.permalink}\n          </ListItem>\n        )}\n        <FormikInput label={t({ id: 'Forms.zip_code', message: 'Zip Code' })} name=\"zipCode\" type=\"text\" />\n        <FormikInput label=\"Number of employees\" name=\"employeeCount\" type=\"number\" min={1} />\n        {formik.values.employeeCount >= 70 && (\n          <ListItem>\n            Given your business's size, we recommend that you contact as after registration: help@greenlightready.com\n          </ListItem>\n        )}\n        {/* <FormikInput\n          label={t({ id: 'Forms.email_optional', message: 'Email (Optional)' })}\n          name=\"email\"\n          type=\"email\"\n          \n        />\n        <FormikInput\n          label={t({ id: 'Forms.phone_number_optional', message: 'Phone Number (Optional)' })}\n          name=\"phoneNumber\"\n          type=\"tel\"\n          \n        /> */}\n      </List>\n    </>\n  )\n}\n\nfunction LocationNotificationsBlock({ formik }: { formik: FormikInstance<any> }) {\n  return (\n    <Block>\n      <BlockTitle>\n        <Trans id=\"NotificationsPage.daily_reminders_title\">Daily Reminders</Trans>\n      </BlockTitle>\n      <p>\n        <Trans id=\"LocationsNewPage.days_to_remind_footer\">\n          We send daily reminders to you and your employees to fill out their symptom surveys. We recommend that they\n          fill them out daily. After employees sign up, they can change the time and days they're notified.\n        </Trans>\n      </p>\n      <List accordionList form onSubmit={formik.handleSubmit} noHairlines>\n        <ListItem\n          title={t({\n            id: 'LocationsNewPage.time_to_remind',\n            message: 'What time would you like send survey reminders?',\n          })}\n        />\n        <ListItemRow>\n          <ListItemCell>\n            <FormikInput name=\"dailyReminderHour\" label=\"Hour\" type=\"number\" min=\"1\" max=\"12\" />\n          </ListItemCell>\n          <ListItemCell>\n            <FormikInput name=\"dailyReminderAMPM\" label=\"AM/PM\" type=\"select\">\n              <option value=\"am\">AM</option>\n              <option value=\"pm\">PM</option>\n            </FormikInput>\n          </ListItemCell>\n        </ListItemRow>\n        <List style={{ marginTop: 0 }}>\n          <ListItem\n            title={t({\n              id: 'LocationsNewPage.days_to_remind',\n              message: 'What days would you like send survey reminders?',\n            })}\n          />\n          <FormikItem title={t({ id: 'Weekday.monday', message: 'Monday' })} name=\"remindMon\" checkbox />\n          <FormikItem title={t({ id: 'Weekday.tuesday', message: 'Tuesday' })} name=\"remindTue\" checkbox />\n          <FormikItem title={t({ id: 'Weekday.wednesday', message: 'Wednesday' })} name=\"remindWed\" checkbox />\n          <FormikItem title={t({ id: 'Weekday.thursday', message: 'Thursday' })} name=\"remindThu\" checkbox />\n          <FormikItem title={t({ id: 'Weekday.friday', message: 'Friday' })} name=\"remindFri\" checkbox />\n          <FormikItem title={t({ id: 'Weekday.saturday', message: 'Saturday' })} name=\"remindSat\" checkbox />\n          <FormikItem title={t({ id: 'Weekday.sunday', message: 'Sunday' })} name=\"remindSun\" checkbox />\n        </List>\n      </List>\n    </Block>\n  )\n}\n","import { t, Trans } from '@lingui/macro'\nimport { useFormik, FormikProvider } from 'formik'\nimport { Block, BlockTitle, Button, f7, List, ListInput, ListItem, Toggle } from 'framework7-react'\nimport { Router } from 'framework7/modules/router/router'\nimport React, { useState } from 'react'\nimport { getGlobal, useGlobal } from 'reactn'\nimport { createUserAndSignIn, getCurrentUser } from 'src/api'\nimport FormikInput from 'src/components/FormikInput'\nimport FormikItem from 'src/components/FormikItem'\nimport { GLLocales } from 'src/i18n'\nimport SubmissionHandler from 'src/misc/SubmissionHandler'\nimport { User } from 'src/models'\nimport * as Yup from 'yup'\n\nclass UserInput {\n  firstName: string = ''\n\n  lastName: string = ''\n\n  email: string = ''\n\n  mobileNumber: string = ''\n\n  password: string = ''\n\n  physicanName: string = ''\n\n  physicianPhoneNumber: string = ''\n\n  needsPhysician: boolean = false\n\n  locale: GLLocales = 'en'\n}\n\nexport default function UserForm({ user, f7router }: { user?: User; f7router: Router.Router }) {\n  const submissionHandler = new SubmissionHandler(f7)\n  const [revealPassword, setRevealPassword] = useState(false)\n  const [locale, setLocale] = useGlobal('locale')\n  const formik = useFormik<UserInput>({\n    validationSchema: Yup.object<UserInput>().shape({\n      firstName: Yup.string().required(t({ id: 'Form.error_blank', message: \"Can't be blank\" })),\n      lastName: Yup.string().required(t({ id: 'Form.error_blank', message: \"Can't be blank\" })),\n      email: Yup.string()\n        .email(t({ id: 'Form.error_invalid', message: 'Is invalid' }))\n        .required(t({ id: 'Form.error_blank', message: \"Can't be blank\" })),\n      mobileNumber: Yup.string()\n        .phone('US', undefined, t({ id: 'Form.error_invalid', message: 'Is invalid' }))\n        .required(t({ id: 'Form.error_blank', message: \"Can't be blank\" })),\n      password: Yup.string().min(8),\n    }),\n    initialValues: new UserInput(),\n    onSubmit: (values) => {\n      submissionHandler.submit(async () => {\n        if (formik.dirty) {\n          await createUserAndSignIn(values)\n          await getCurrentUser()\n          f7router.refreshPage()\n          // FIXME: We shouldn't have to do a hard refresh\n          window.location.reload()\n        }\n      })\n    },\n  })\n\n  return (\n    <FormikProvider value={formik}>\n      <List\n        noHairlines\n        form\n        onSubmit={(e) => {\n          e.preventDefault()\n          formik.submitForm()\n        }}\n      >\n        <FormikInput label={t({ id: 'Forms.first_name', message: 'First Name' })} name=\"firstName\" type=\"text\" />\n        <FormikInput label={t({ id: 'Forms.last_name', message: 'Last Name' })} name=\"lastName\" type=\"text\" />\n        <FormikInput label={t({ id: 'Forms.email', message: 'Email' })} name=\"email\" type=\"email\" />\n        <FormikInput\n          label={t({ id: 'Forms.mobile_number', message: 'Mobile Number' })}\n          name=\"mobileNumber\"\n          type=\"tel\"\n        />\n\n        <FormikInput\n          label={t({ id: 'Forms.password', message: 'Password' })}\n          name=\"password\"\n          type={revealPassword ? 'text' : 'password'}\n        />\n\n        <ListItem>\n          <span>Reveal Password</span>\n          <Toggle color=\"green\" checked={revealPassword} onChange={() => setRevealPassword(!revealPassword)} />\n        </ListItem>\n        {/* <FormikInput\n          label={t({ id: 'WelcomeReviewPage.language_label', message: 'Language' })}\n          type=\"select\"\n          defaultValue={locale}\n          placeholder={t({ id: 'WelcomeReviewPage.language_placeholder', message: 'Please choose...' })}\n          onChange={(e) => {\n            // toggleLocale()\n            // updatedUser.locale = e.target.value\n            // this.setState({ updatedUser })\n          }}\n        >\n          <option value=\"en\">\n            {t({ id: 'WelcomeReviewPage.english', message: 'English' })}\n          </option>\n          <option value=\"es\">\n            {t({ id: 'WelcomeReviewPage.spanish', message: 'Español' })}\n          </option>\n        </FormikInput> */}\n\n        {/* <FormikInput\n        name=\"physicianName\"\n        label={t({ id: 'EditUserPage.primary_care_physician_name_label2', message: 'Primary Care Physician Name (Optional)' })}\n        \n      />\n\n      <FormikInput\n        name=\"physicianPhoneNumber\"\n        label={t({\n          id: 'EditUserPage.primary_care_physician_phone_number_label2',\n          message: 'Primary Care Physician Phone Number (Optional)',\n        })}\n        type=\"tel\"\n        \n      />\n\n      <FormikItem\n        name=\"needsPhysician\"\n        checkbox\n        title={t({ id: 'EditUserPage.need_help_finding_physician', message: 'Need help finding a physician?' })}\n        checked={false}\n        \n      /> */}\n        <br />\n        <br />\n        <Button type=\"submit\" outline fill>\n          <Trans id=\"Common.register\">Register</Trans>\n        </Button>\n      </List>\n    </FormikProvider>\n  )\n}\n","import React, {\n  getGlobal, useEffect, useGlobal, useState,\n} from 'reactn'\nimport {\n  assertNotNull, assertNotUndefined, esExclaim, greeting,\n} from 'src/util'\n\nimport welcomeDoctorImage from 'src/images/welcome-doctor.svg'\nimport {\n  Page, Block, Sheet, Row, Button, Col, Link, PageContent, Toolbar, List, ListInput,\n} from 'framework7-react'\nimport { Trans } from '@lingui/macro'\nimport { toggleLocale } from 'src/initializers/providers'\nimport { User, Location } from 'src/models'\nimport { F7Props } from 'src/types'\nimport { getLocation, joinLocation } from 'src/api'\nimport { paths } from 'src/routes'\nimport UserForm from './UsersForm'\nimport LoadingPage from './LoadingPage'\n\nexport default function UsersNewPage(props: F7Props) {\n  const [page, setPage] = useState('')\n  const [termsOpened, setTermsOpened] = useState(false)\n  const { permalink, registrationCode } = props.f7route.params\n\n  const [location, setLocation] = useState<Location | null>()\n  const [error, setError] = useState<any>(null)\n  const [error2, setError2] = useState<any>(null)\n\n  const [myPermalink, setMyPermalink] = useState('')\n  // setMyPermalink(permalink)\n  const [myCode, setMyCode] = useState('')\n  // setMyCode(registrationCode)\n  const [currentUser] = useGlobal('currentUser')\n  useEffect(() => {\n    // HACK: This actually reveals the permalink since its in the payload\n    if (!permalink) return\n    console.log(permalink)\n    console.log(location)\n    getLocation(permalink).then(setLocation).catch(setError)\n  }, [permalink])\n\n  if (permalink && registrationCode && !location && !error) {\n    return (\n      <LoadingPage />\n    )\n  }\n\n  if (!permalink || !registrationCode || error) {\n    return (\n      <Page>\n        <Block>\n          <h1>Look Up A Business</h1>\n          <p>\n            You should have received a link from or code from your business or school.\n            If you received a code, enter it below. The code is not case sensitive.\n          </p>\n          {\n            error && <p style={{ color: 'red' }}>There was an error looking up the business. Please make sure your information is correct.</p>\n          }\n          <List noHairlines>\n            <ListInput type=\"text\" label=\"Location ID\" placeholder=\"Location ID\" required onChange={(e) => setMyPermalink(e.target.value)} />\n            <ListInput type=\"text\" label=\"Registration Code\" placeholder=\"Enter Your Registration Code Here\" required onChange={(e) => setMyCode(e.target.value)} />\n            <br />\n            <Button href={`/l/${myPermalink}/code/${myCode}`} fill>\n              Lookup Location\n            </Button>\n          </List>\n        </Block>\n      </Page>\n    )\n  }\n\n  if (currentUser && location && currentUser.locationAccounts.filter((la) => la.locationId?.toString() === location.id).length > 0) {\n    return (\n      <Block>\n        <h1>Registered for This Location</h1>\n        <p>\n          You are registered to submit survey to {location.name}.\n        </p>\n        {\n          currentUser.hasCompletedWelcome()\n            ? <Button fill href={paths.dashboardPath}>Return to Dashboard</Button>\n            : <Button fill href={paths.welcomeSurveyPath}>Submit Your First Survey</Button>\n        }\n\n      </Block>\n    )\n  }\n\n  if (currentUser && location) {\n    return (\n      <Block>\n        <h1>Join {location.name}</h1>\n        <p>\n          Click the button below to allow {location.name} to receive your survey results.\n        </p>\n        {error2 && <p>Something went wrong. Please try again or contact us at help@greenlightready.com</p>}\n        <Button\n          fill\n          onClick={() => {\n            joinLocation(location).then(() => { window.location.reload() }).catch(setError2)\n          }}\n        >Join Business\n        </Button>\n      </Block>\n    )\n  }\n\n  if (!currentUser && permalink && registrationCode && page === 'register') {\n    assertNotNull(location)\n    assertNotUndefined(location)\n    return (\n      <Page>\n        <Block>\n          <h1>Create Your Account</h1>\n          <p>\n            Fill in the information below to create your account for {location.name}\n          </p>\n          <UserForm user={new User()} f7router={props.f7router} />\n        </Block>\n      </Page>\n    )\n  }\n\n  if (!currentUser && permalink && registrationCode && page === '') {\n    return (\n      <Page>\n        <Block>\n          <h1>\n            {esExclaim()}{greeting()}!&nbsp;&nbsp;\n            {/* <Link style={{ fontSize: '12px' }} onClick={() => toggleLocale()}>\n              <Trans id=\"WelcomePage.toggle_locale\">En Español</Trans>\n            </Link> */}\n          </h1>\n          <p>\n            You're about to join Greenlight's secure COVID-19 monitoring platform.\n            Every day you'll need to fill out symptom surveys for yourself.\n            You will also get access to health and social support in your community.\n          </p>\n          <p>\n            Your data is secure and stored by a HIPAA and FERPA-compliant cloud provider.\n            {' '}\n            <i>We will not share any data without your permission.</i>\n          </p>\n          <img alt=\"Welcome to Greenlight!\" src={welcomeDoctorImage} />\n          <p>\n            <Trans id=\"WelcomePage.terms_and_conditions\">\n              By continuing, you accept Greenlight's{' '}\n              <Link\n                onClick={() => {\n                  setTermsOpened(true)\n                }}\n              > Terms and Conditions\n              </Link>.\n            </Trans>\n          </p>\n        </Block>\n        <Block>\n          <Row tag=\"p\">\n            <Col tag=\"span\">\n              <Button\n                large\n                fill\n                onClick={() => {\n                  setPage('register')\n                }}\n              >\n                <Trans id=\"Common.continue\">Continue</Trans>\n              </Button>\n            </Col>\n          </Row>\n        </Block>\n        <Sheet\n          opened={termsOpened}\n          onSheetClosed={() => {\n            setTermsOpened(false)\n          }}\n        >\n          <Toolbar>\n            <div className=\"left\" />\n            <div className=\"right\">\n              <Link sheetClose><Trans id=\"Common.close\">Close</Trans></Link>\n            </div>\n          </Toolbar>\n          {/*  Scrollable sheet content */}\n          <PageContent>\n            {/* TODO: Host this elsewhere. */}\n            <iframe src=\"/terms.html\" style={{ width: '100%', border: 0, height: '90%' }} />\n          </PageContent>\n        </Sheet>\n      </Page>\n    )\n  }\n\n  return <></>\n}\n","import NotFoundPage from 'src/pages/NotFoundPage'\nimport DashboardPage from 'src/pages/DashboardPage'\n\nimport SplashPage from 'src/pages/SplashPage'\nimport SignInPage from 'src/pages/SignInPage'\nimport MagicSignInPage from 'src/pages/MagicSignInPage'\n\nimport WelcomePage from 'src/pages/welcome/WelcomePage'\nimport WelcomeChildPage from 'src/pages/welcome/WelcomeChildPage'\nimport WelcomeReviewPage from 'src/pages/welcome/WelcomeReviewPage'\nimport WelcomePasswordPage from 'src/pages/welcome/WelcomePasswordPage'\n\nimport SurveyNewPage from 'src/pages/SurveyNewPage'\nimport SurveyThankYouPage from 'src/pages/SurveyThankYouPage'\n\nimport { getGlobal } from 'reactn'\nimport { User } from 'src/models'\nimport { Router } from 'framework7/modules/router/router'\nimport MagicSignInAuthPage from 'src/pages/MagicSignInAuthPage'\nimport { resolvePath } from 'src/util'\nimport GiphySchedulePage from 'src/pages/GiphySchedulePage'\nimport UserGreenlightPassPage from 'src/pages/UserGreenlightPassPage'\nimport DebugPage from 'src/pages/DebugPage'\nimport AdminUsersPage from 'src/pages/admin/AdminUsersPage'\nimport WelcomeSurveyPage from 'src/pages/welcome/WelcomeSurveyPage'\nimport { isSignedIn } from 'src/initializers/providers'\nimport ReleaseNotesPage from 'src/pages/ReleaseNotesPage'\nimport SettingsPage from 'src/pages/SettingsPage'\nimport CovidCountyMapPage from 'src/pages/CovidCountyMapPage'\nimport AboutPage from 'src/pages/AboutPage'\nimport UserEditPage from 'src/pages/UserEditPage'\nimport DukeScheduleTestPage from 'src/pages/DukeScheduleTestPage'\nimport OpenSourceLicensesPage from 'src/pages/OpenSourceLicensesPage'\nimport NotificationsPage from 'src/pages/NotificationsPage'\nimport LocationPage from './pages/LocationPage'\nimport MobileVerificationPage from './pages/MobileVerificationPage'\nimport LocationRegistrationPage from './pages/LocationRegistrationPage'\nimport NCStatewideStatsPage from './pages/NCStatewideStatsPage'\nimport { Dict } from './types'\nimport LocationsNewPage from './pages/LocationsNewPage'\nimport UsersNewPage from './pages/UsersNewPage'\nimport CHWRequestPage from './pages/CHWRequestPage'\n\nconst beforeEnter = {\n  // eslint-disable-next-line @typescript-eslint/ban-types, @typescript-eslint/no-unused-vars\n  requireSignIn(\n    this: Router.Router,\n    routeTo: Router.Route,\n    routeFrom: Router.Route,\n    resolve: Function,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    reject: Function,\n  ) {\n    if (isSignedIn()) {\n      resolve()\n    } else {\n      resolve()\n\n      this.navigate(paths.rootPath)\n    }\n  },\n  // eslint-disable-next-line @typescript-eslint/ban-types, @typescript-eslint/no-unused-vars\n  redirectHomeIfSignedIn(\n    this: Router.Router,\n    routeTo: Router.Route,\n    routeFrom: Router.Route,\n    resolve: Function,\n    reject: Function,\n  ) {\n    if (isSignedIn()) {\n      reject()\n      this.navigate(dynamicPaths.currentUserHomePath())\n    } else {\n      resolve()\n    }\n  },\n}\n\nconst routeMap = {\n  rootPath: {\n    path: '/',\n    component: SplashPage,\n    beforeEnter: beforeEnter.redirectHomeIfSignedIn,\n  },\n  signInPath: {\n    path: '/sign-in',\n    component: SignInPage,\n    beforeEnter: beforeEnter.redirectHomeIfSignedIn,\n  },\n  magicSignInPath: {\n    path: '/magic-sign-in',\n    component: MagicSignInPage,\n    beforeEnter: beforeEnter.redirectHomeIfSignedIn,\n  },\n  magicSignInAuthPath: {\n    path: '/mgk/:token/:remember',\n    component: MagicSignInAuthPage,\n    beforeEnter: beforeEnter.redirectHomeIfSignedIn,\n  },\n  // passwordResetSubmitPath: {\n  //   path: '/pwdrst/:token',\n  //   component: PasswordResetSubmitPage,\n  //   beforeEnter: beforeEnter.redirectHomeIfSignedIn,\n  // },\n  dashboardPath: {\n    path: '/dashboard',\n    component: DashboardPage,\n    beforeEnter: beforeEnter.requireSignIn,\n  },\n  settingsPath: {\n    path: '/settings',\n    component: SettingsPage,\n    beforeEnter: beforeEnter.requireSignIn,\n  },\n  aboutPath: {\n    path: '/about',\n    component: AboutPage,\n    beforeEnter: beforeEnter.requireSignIn,\n  },\n  notificationsPath: {\n    path: '/notifications',\n    component: NotificationsPage,\n    beforeEnter: beforeEnter.requireSignIn,\n  },\n  welcomePath: {\n    path: '/welcome',\n    component: WelcomePage,\n    beforeEnter: beforeEnter.requireSignIn,\n  },\n  splashPath: {\n    path: '/splash',\n    component: SplashPage,\n  },\n  welcomeReviewPath: {\n    path: '/welcome/review',\n    component: WelcomeReviewPage,\n    beforeEnter: beforeEnter.requireSignIn,\n  },\n  welcomePasswordPath: {\n    path: '/welcome/password',\n    component: WelcomePasswordPage,\n    beforeEnter: beforeEnter.requireSignIn,\n  },\n  welcomeSurveyPath: {\n    path: '/welcome/survey',\n    component: WelcomeSurveyPage,\n    beforeEnter: beforeEnter.requireSignIn,\n  },\n  welcomeChildPath: {\n    path: '/welcome/children/:id',\n    component: WelcomeChildPage,\n    beforeEnter: beforeEnter.requireSignIn,\n  },\n  userSurveysNewPath: {\n    path: '/users/:userId/surveys/new',\n    component: SurveyNewPage,\n    beforeEnter: beforeEnter.requireSignIn,\n  },\n  userSeqSurveysNewPath: {\n    path: '/users/seq/surveys/new',\n    component: SurveyNewPage,\n    beforeEnter: beforeEnter.requireSignIn,\n  },\n  surveysThankYouPath: {\n    path: '/surveys/thank-you',\n    component: SurveyThankYouPage,\n    beforeEnter: beforeEnter.requireSignIn,\n  },\n  userGreenlightPassPath: {\n    path: '/users/:userId/greenlight-pass',\n    component: UserGreenlightPassPage,\n    beforeEnter: beforeEnter.requireSignIn,\n  },\n  locationPath: {\n    path: '/l/:locationId',\n    component: LocationPage,\n  },\n  locationRegistrationPath: {\n    path: '/l/:locationId/registrations',\n    component: LocationRegistrationPage,\n  },\n  mobileVerificationPath: {\n    path: '/mobile-verifications',\n    component: MobileVerificationPage,\n  },\n  adminUsersPath: {\n    path: '/admin/locations/:locationId/users',\n    component: AdminUsersPage,\n    beforeEnter: beforeEnter.requireSignIn,\n  },\n  debugPath: {\n    path: '/debug',\n    component: DebugPage,\n  },\n  dukeScheduleTestPath: {\n    path: '/schedule-test-at-duke',\n    component: DukeScheduleTestPage,\n    beforeEnter: beforeEnter.requireSignIn,\n  },\n  ncStatewideStatsPath: {\n    path: '/nc-statewide-stats',\n    component: NCStatewideStatsPage,\n    beforeEnter: beforeEnter.requireSignIn,\n  },\n  giphySchedulePath: {\n    path: '/giphy-schedule',\n    component: GiphySchedulePage,\n  },\n  releasesPath: {\n    path: '/releases',\n    component: ReleaseNotesPage,\n  },\n  openSourcePath: {\n    path: '/open-source',\n    component: OpenSourceLicensesPage,\n  },\n  mapPath: {\n    path: '/covid-county-map',\n    component: CovidCountyMapPage,\n  },\n  newUserPath: {\n    path: '/users/new',\n    component: UsersNewPage,\n  },\n  newLocationUserPath: {\n    path: '/l/:permalink/code/:registrationCode',\n    component: UsersNewPage,\n  },\n  editUserPath: {\n    path: '/users/:userId/edit',\n    component: UserEditPage,\n  },\n  editChildrenPath: {\n    path: '/users/:userId/children/:childId',\n    component: UserEditPage,\n  },\n  notFoundPath: {\n    path: '/not-found',\n    component: NotFoundPage,\n  },\n  durhamRegistationPath: {\n    path: '/durham',\n    component: LocationsNewPage,\n  },\n  chwRequestPath: {\n    path: '/chw-request',\n    component: CHWRequestPage,\n    // beforeEnter: beforeEnter.requireSignIn,\n  },\n  catchAllPath: {\n    path: '(.*)',\n    component: NotFoundPage,\n  },\n}\n\ntype DynamicPath = (substitutions?: any, query?: any) => string\n\n/**\n * Builds a callable path that will resolve itslev given substitutions.\n * @param path\n */\nexport function buildDynamicPath(path: string): DynamicPath {\n  return (substitutions?: any, query?: any): string => resolvePath(path, substitutions, query)\n}\n\nexport const paths = {} as { [k in keyof typeof routeMap]: string }\ntype PathsDynamized = {\n  [k in keyof typeof routeMap]: (substitutions?: any, query?: any) => string\n}\nconst pathsDynamized = {} as PathsDynamized\n\nObject.keys(routeMap).forEach((key) => {\n  const k = key as keyof typeof routeMap\n  paths[k] = routeMap[k].path\n  pathsDynamized[k] = buildDynamicPath(paths[k])\n})\n\nexport const dynamicPaths = {\n  currentUserHomePath: () => {\n    const user: User | null | undefined = getGlobal().currentUser\n    if (!user) return paths.rootPath\n    if (user.hasCompletedWelcome()) {\n      return paths.dashboardPath\n    }\n    return paths.welcomePath\n  },\n  afterWelcomePasswordPath: () => {\n    const user: User | null | undefined = getGlobal().currentUser\n    if (!user) return paths.rootPath\n    if (user.hasChildren()) {\n      return dynamicPaths.welcomeChildIndexPath(0)\n    }\n    return paths.welcomeSurveyPath\n  },\n  welcomeChildIndexPath: (index: number): string => {\n    const user: User | null | undefined = getGlobal().currentUser\n    if (!user) return paths.rootPath\n    const children = user.sortedChildren()\n    if (index < children.length) {\n      return dynamicPaths.welcomeChildPath(index)\n    }\n    return dynamicPaths.welcomeChildIndexPath(0)\n  },\n  userSurveysNewIndexPath: (index: number) => {\n    const user: User | null | undefined = getGlobal().currentUser\n    if (!user) return paths.rootPath\n    const people = [user, ...user.sortedChildren()]\n    if (index < people.length) {\n      return resolvePath(paths.userSurveysNewPath, [index])\n    }\n    return paths.surveysThankYouPath\n  },\n  ...pathsDynamized,\n}\n\nexport default Object.values(routeMap)\n","import React, { useGlobal } from 'reactn'\nimport {\n  Page, Navbar, List, ListItem, AccordionContent,\n} from 'framework7-react'\n\nimport { toggleLocale, signOut } from 'src/initializers/providers'\nimport { t } from '@lingui/macro'\nimport { assertNotNull } from 'src/util'\nimport { dynamicPaths, paths } from 'src/routes'\nimport { User } from 'src/models'\n\nexport default function SettingsPage() {\n  const [currentUser] = useGlobal('currentUser')\n  assertNotNull(currentUser)\n\n  return (\n    <Page>\n      <Navbar\n        title={t({ id: 'SettingsPage.title', message: 'Settings' })}\n        sliding\n      />\n      <List accordionList noHairlines>\n        <ListItem\n          link={dynamicPaths.editUserPath({ userId: currentUser.id })}\n          title={t({ id: 'SettingsPage.profile', message: 'Profile' })}\n        />\n        {/*\n        {currentUser.isAdmin() && (\n          <ListItem accordionItem title={t({ id: 'SettingsPage.admin', message: 'Admin' })}>\n            <AccordionContent>\n              <List>\n                <ListItem\n                  link=\"/admin/plumbing\"\n                  title={t({ id: 'SettingsPage.ACMEPlumbing', message: 'ACME Plumbing' })}\n                />\n              </List>\n            </AccordionContent>\n          </ListItem>\n        )} */}\n\n        {currentUser.hasChildren() && (\n          <ListItem\n            accordionItem\n            title={t({ id: 'SettingsPage.my_children', message: 'My Children' })}\n          >\n            <AccordionContent>\n              <List>\n                {currentUser.sortedChildren().map((child) => (\n                  <ListItem\n                    key={child.id}\n                    link={`/users/${child.id}`}\n                    title={child.firstName}\n                  />\n                ))}\n              </List>\n            </AccordionContent>\n          </ListItem>\n        )}\n        {\n          currentUser.isAdminSomewhere()\n\n        && (\n        <ListItem\n          accordionItem\n          title=\"Admin\"\n        >\n          <AccordionContent>\n            <List>\n              {\n                currentUser.adminLocations().map((location) => (\n                  <ListItem\n                    key={location.id}\n                    link={dynamicPaths.adminUsersPath({ locationId: location.id })}\n                    title={location.name || ''}\n                  />\n                ))\n              }\n            </List>\n          </AccordionContent>\n        </ListItem>\n        )\n      }\n\n        <ListItem\n          link={paths.notificationsPath}\n          title={t({ id: 'SettingsPage.notifications', message: 'Notifications' })}\n        />\n\n        <ListItem\n          link\n          noChevron\n          onClick={() => toggleLocale()}\n          title={t({ id: 'Common.toggle_locale', message: 'En Español' })}\n        />\n\n        <ListItem\n          link=\"mailto:help@greenlightready.com\"\n          title={t({ id: 'SettingsPage.support', message: 'Support' })}\n        />\n\n        <ListItem\n          link={paths.releasesPath}\n          title={t({ id: 'SettingsPage.what_new', message: 'Whats New' })}\n        />\n\n        <ListItem\n          link={paths.aboutPath}\n          title={t({ id: 'SettingsPage.about', message: 'About' })}\n        />\n\n        <ListItem\n          link\n          onClick={() => signOut()}\n          title={t({ id: 'Common.sign_out', message: 'Sign Out' })}\n        />\n      </List>\n    </Page>\n  )\n}\n","import { t, Trans } from '@lingui/macro'\nimport { useFormik, FormikProvider } from 'formik'\nimport FormikInput from 'src/components/FormikInput'\nimport FormikItem from 'src/components/FormikItem'\n\nimport {\n  Block,\n  BlockTitle,\n  Button,\n  f7,\n  List,\n  ListItem,\n  ListItemCell,\n  ListItemRow,\n  Navbar,\n  Page,\n} from 'framework7-react'\nimport React, { useGlobal } from 'reactn'\nimport { UserSettings } from 'src/models'\nimport { F7Props } from 'src/types'\nimport { assertNotNull } from 'src/util'\nimport SubmissionHandler from 'src/misc/SubmissionHandler'\nimport { updateUserSettings } from 'src/api'\nimport { reloadCurrentUser } from 'src/initializers/providers'\nimport { DailyReminderType } from 'src/models/UserSettings'\n\ninterface NotificationsForm {\n  dailyReminderType: DailyReminderType\n  overrideLocationReminders: boolean\n  dailyReminderHour: number\n  dailyReminderAMPM: 'am' | 'pm'\n  remindMon: boolean\n  remindTue: boolean\n  remindWed: boolean\n  remindThu: boolean\n  remindFri: boolean\n  remindSat: boolean\n  remindSun: boolean\n}\n\nexport default function NotificationsPage(props: F7Props) {\n  const submissionHandler = new SubmissionHandler(f7)\n\n  const [user] = useGlobal('currentUser')\n  assertNotNull(user)\n  const settings = user.settingsReified()\n  const formik = useFormik<NotificationsForm>({\n    validateOnChange: true,\n    initialValues: {\n      dailyReminderType: settings.dailyReminderType,\n      dailyReminderHour: settings.dailyReminderHour(),\n      dailyReminderAMPM: settings.dailyReminderAMPM(),\n      overrideLocationReminders: settings.overrideLocationReminders,\n      remindMon: settings.remindMon,\n      remindTue: settings.remindTue,\n      remindWed: settings.remindWed,\n      remindThu: settings.remindThu,\n      remindFri: settings.remindFri,\n      remindSat: settings.remindSat,\n      remindSun: settings.remindSun,\n    },\n    onSubmit: (values) => {\n      submissionHandler.submit(async () => {\n        if (formik.dirty) {\n          const valuesToSubmit: Partial<UserSettings> = {\n            dailyReminderType: values.dailyReminderType,\n            overrideLocationReminders: values.overrideLocationReminders,\n            remindMon: values.remindMon,\n            remindTue: values.remindTue,\n            remindWed: values.remindWed,\n            remindThu: values.remindThu,\n            remindFri: values.remindFri,\n            remindSat: values.remindSat,\n            remindSun: values.remindSun,\n            dailyReminderTime: values.dailyReminderHour + (values.dailyReminderAMPM === 'pm' ? 12 : 0),\n          }\n\n          await updateUserSettings(user, {\n            ...valuesToSubmit,\n          })\n          await reloadCurrentUser()\n        }\n        props.f7router.back()\n      })\n    },\n  })\n\n  return (\n    <Page>\n      <Navbar title={t({ id: 'NotificationsPage.title', message: 'Notifications' })} />\n      <Block>\n        <BlockTitle>\n          <Trans id=\"NotificationsPage.daily_reminders_title\">Daily Reminders</Trans>\n        </BlockTitle>\n        <FormikProvider value={formik}>\n          <List accordionList form id=\"EditUserPage-form\" onSubmit={formik.handleSubmit} noHairlines>\n            <FormikInput\n              name=\"dailyReminderType\"\n              label={t({ id: 'NotificationsPage.how_to_remind', message: 'How should we send you reminders?' })}\n              type=\"select\"\n            >\n              <option value={DailyReminderType.TEXT}>\n                {t({ id: 'DailyReminder.send_via_text', message: 'Send Reminders via Text' })}\n              </option>\n              {user.email && (\n                <option value={DailyReminderType.EMAIL}>\n                  {t({ id: 'DailyReminder.send_via_email', message: 'Send Reminders via Email' })}\n                </option>\n              )}\n              <option value={DailyReminderType.NONE}>\n                {t({ id: 'DailyReminder.disable_all', message: 'Disable All Reminders' })}\n              </option>\n            </FormikInput>\n            <FormikItem\n              name=\"overrideLocationReminders\"\n              title={t({\n                id: 'NotificationsPage.override_location_reminders_title',\n                message: 'Set my own reminder times',\n              })}\n              footer={t({\n                id: 'NotificationsPage.override_location_reminders_footer',\n                message: 'Set my own reminder times',\n              })}\n              checkbox\n            />\n            {formik.values.overrideLocationReminders && (\n              <ListItemRow>\n                <ListItemCell>\n                  <FormikInput name=\"dailyReminderHour\" label=\"Hour\" type=\"number\" min=\"1\" max=\"12\" />\n                </ListItemCell>\n                <ListItemCell>\n                  <FormikInput name=\"dailyReminderAMPM\" label=\"AM/PM\" type=\"select\">\n                    <option value=\"am\">AM</option>\n                    <option value=\"pm\">PM</option>\n                  </FormikInput>\n                </ListItemCell>\n              </ListItemRow>\n            )}\n            {formik.values.overrideLocationReminders && (\n              <List>\n                <ListItem\n                  title={t({\n                    id: 'NotificationsPage.days_to_remind',\n                    message: 'What days would you like to be reminded?',\n                  })}\n                />\n                <FormikItem\n                  title={t({ id: 'Weekday.monday', message: 'Monday' })}\n                  name=\"remindMon\"\n                  onChange={formik.handleChange}\n                  checkbox\n                />\n                <FormikItem title={t({ id: 'Weekday.tuesday', message: 'Tuesday' })} name=\"remindTue\" checkbox />\n                <FormikItem title={t({ id: 'Weekday.wednesday', message: 'Wednesday' })} name=\"remindWed\" checkbox />\n                <FormikItem title={t({ id: 'Weekday.thursday', message: 'Thursday' })} name=\"remindThu\" checkbox />\n                <FormikItem title={t({ id: 'Weekday.friday', message: 'Friday' })} name=\"remindFri\" checkbox />\n                <FormikItem title={t({ id: 'Weekday.saturday', message: 'Saturday' })} name=\"remindSat\" checkbox />\n                <FormikItem title={t({ id: 'Weekday.sunday', message: 'Sunday' })} name=\"remindSun\" checkbox />\n              </List>\n            )}\n            <Block>\n              <Button type=\"submit\" outline fill>\n                <Trans id=\"Common.submit\">Submit</Trans>\n              </Button>\n            </Block>\n          </List>\n        </FormikProvider>\n      </Block>\n    </Page>\n  )\n}\n","import React, { useGlobal } from 'reactn'\nimport {\n  Page, Navbar, Block, ListItem, List, AccordionContent,\n} from 'framework7-react'\n\nexport default function DebugPage() {\n  const [currentUser] = useGlobal('currentUser')\n\n  return (\n    <Page>\n      <Navbar title=\"Debug\" />\n      <List accordionList>\n        <ListItem accordionItem title=\"Current User\">\n          <AccordionContent>\n            <Block>\n              <pre>\n                {\n                  !currentUser ? 'Not Found' : JSON.stringify(currentUser, null, 2)\n                }\n              </pre>\n            </Block>\n          </AccordionContent>\n        </ListItem>\n      </List>\n    </Page>\n  )\n}\n","import React from 'react'\nimport {\n  Page, Navbar, Block, Link,\n} from 'framework7-react'\nimport { defineMessage, Trans } from '@lingui/macro'\nimport { getGlobal } from 'reactn'\n\nexport default function DukeScheduleTestPage() {\n  return (\n    <Page>\n      <Navbar\n        title={getGlobal().i18n._(defineMessage({ id: 'DukeScheduleTestPage.title', message: 'Schedule a Test' }))}\n      />\n      <Block strong>\n        <p>\n          <Trans id=\"DukeScheduleTestPage.instructions1\">\n            From 8:00am to 5pm, please call the number below to schedule a test.\n            Dial 2 when you here the automated voice to reach the patient line.\n          </Trans>\n        </p>\n\n        <p style={{ fontSize: '1.5rem', textAlign: 'center', fontWeight: 'bold' }}>\n          <Trans id=\"DukeScheduleTestPage.instructions2\">Call <a href=\"tel:919-385-0429\">919-385-0429</a>, then Dial 2</Trans>\n        </p>\n\n        <p><Trans id=\"DukeScheduleTestPage.instructions3\">Tell whomever you speak with that you need to schedule a test and you use the Greenlight app.</Trans></p>\n\n        <p>\n          <Trans id=\"DukeScheduleTestPage.instructions4\">\n            You should be scheduled within 24 hours and recieve a result the following day.\n            You should not need to schedule an appointment before the test.\n          </Trans>\n        </p>\n\n        <p><Trans id=\"DukeScheduleTestPage.resources_title\">More resources:</Trans></p>\n        <ul>\n          <li>\n            <Link external href=\"https://covid19.ncdhhs.gov/about-covid-19/testing/steps-take-after-covid-19-testing\">\n              <Trans id=\"DukeScheduleTestPage.steps_after_test\">Steps to take after a test</Trans>\n            </Link>\n          </li>\n          <li>\n            <Link external href=\"https://www.mayoclinic.org/vid-20483784\">\n              <Trans id=\"DukeScheduleTestPage.supporting_child\">Supporting Your Child During COVID-19 Nasal Swab Testing</Trans>\n            </Link>\n          </li>\n        </ul>\n        <p>\n\n          <Trans id=\"DukeScheduleTestPage.support\">\n            Still need help? Contact Greenlight support <a href=\"mailto:help@greenlightready.com\">help@greenlightready.com</a>\n          </Trans>\n        </p>\n      </Block>\n    </Page>\n  )\n}\n","import { t } from '@lingui/macro'\nimport {\n  Navbar, Page, Toolbar, Link, Block, Tab, Tabs,\n} from 'framework7-react'\nimport React from 'react'\nimport './NCStatewideStatsPage.css'\n\nexport default function NCStatewideStatsPage() {\n  return (\n    <Page className=\"NCStatwideStatsPage\">\n      <Navbar title={t({ id: 'NCStatewideStatsPage.nc_statewide_stats_title', message: 'NC COVID-19 Statistics' })} backLink />\n      <Toolbar tabbar bottom>\n        <Link tabLink=\"#tab-1\" tabLinkActive>Cases Map</Link>\n        <Link tabLink=\"#tab-2\">By Day</Link>\n        <Link tabLink=\"#tab-3\">Deaths Map</Link>\n      </Toolbar>\n      <Tabs>\n        <Tab id=\"tab-1\" className=\"page-content\" tabActive>\n          <Block>\n            <iframe src=\"https://datawrapper.dwcdn.net/Q8ZFj/26/\" scrolling=\"no\" frameBorder=\"0\" />\n          </Block>\n        </Tab>\n        <Tab id=\"tab-2\" className=\"page-content\">\n          <Block>\n            <iframe src=\"https://datawrapper.dwcdn.net/pdW1c/120/\" scrolling=\"no\" frameBorder=\"0\" />\n          </Block>\n        </Tab>\n        <Tab id=\"tab-3\" className=\"page-content\">\n          <Block>\n            <iframe\n              src=\"https://datawrapper.dwcdn.net/WVXuJ/1/\"\n              scrolling=\"no\"\n              frameBorder=\"0\"\n            />\n          </Block>\n\n        </Tab>\n      </Tabs>\n    </Page>\n  )\n}\n","import { t, Trans } from '@lingui/macro'\nimport licenses from 'src/data/licenses.json'\nimport { Block, Navbar, Page } from 'framework7-react'\nimport React from 'reactn'\n\nexport default function OpenSourceLicensesPage() {\n  return (\n    <Page>\n      <Navbar title={t({ id: 'OpenSourceLicensesPage.title', message: 'Open Source Licenses' })} />\n      <Block strong noHairlines>\n        <p>\n          <Trans id=\"OpenSourceLicensesPage.message\">\n            Greenlight is built using a lot of free and open source software.\n            As such, we want to give credit to all of the wonderful projects\n            we use. We've tried our best to list them all below.\n          </Trans>\n        </p>\n        <ul>\n          {\n            licenses.map((l) => <li>{l.name} by {l.author} under the {l.licenseType} license</li>)\n          }\n        </ul>\n      </Block>\n    </Page>\n  )\n}\n","import { t } from '@lingui/macro'\nimport {\n  Block, Link, Navbar, Page,\n} from 'framework7-react'\nimport React, { useGlobal } from 'reactn'\nimport If from 'src/components/If'\nimport { Location, User } from 'src/models'\n\nimport { paths } from 'src/routes'\nimport { F7Props } from 'src/types'\n\nimport 'yup-phone'\nimport LocationForm from './LocationForm'\nimport UsersNewBlock from './UsersForm'\n\nexport default function LocationsNewPage(props: F7Props): JSX.Element {\n  const [currentUser] = useGlobal('currentUser')\n\n  return (\n    <Page>\n      <Navbar title={t({ id: 'LocationsNewPage.title', message: 'Greenlight Durham' })} />\n      <Block>\n\n        <If test={currentUser === null}>\n          <p>\n            Welcome to Greenlight! Greenlight is brought to you by funding from the NC DHHS, Durham City and County, and our partner Curamericas Global.\n          </p>\n          <p>\n            Before you register your business or school with Greenlight, you will need to create an account.\n            If you have an account, you can <Link href={paths.rootPath}>sign in from the home screen</Link>.\n          </p>\n          <UsersNewBlock user={currentUser || new User()} f7router={props.f7router} />\n        </If>\n        <If test={currentUser !== null}>\n          <p>\n            Welcome to Greenlight! Greenlight is brought to you by funding from the NC DHHS, Durham City and County, and our partner Curamericas Global.\n          </p>\n          <p>\n            Fill out the form below to create your new location.\n          </p>\n          <LocationForm location={new Location()} f7router={props.f7router} />\n        </If>\n      </Block>\n\n    </Page>\n  )\n}\n","import {\n  Page,\n} from 'framework7-react'\nimport React from 'react'\n\nexport default function CHWRequestPage() {\n  return (\n    <Page>\n      <iframe className=\"airtable-embed\" src=\"https://airtable.com/embed/shrIt4hurTNBrZD0g?backgroundColor=purple\" frameBorder=\"0\" width=\"100%\" height=\"100%\" style={{ background: 'transparent', border: '1px solid #ccc' }} />\n    </Page>\n  )\n}\n","import { dynamicPaths, paths } from 'src/routes'\nimport { DateTime } from 'luxon'\nimport { currentUser } from 'src/initializers/providers'\nimport * as api from 'src/api'\nimport { ModelRegistry } from 'src/models'\nimport { CUTOFF_TIME } from 'src/models/GreenlightStatus'\nimport { Dict } from 'src/types'\nimport CookieJar from 'src/misc/CookieJar'\nimport { f7 } from 'framework7-react'\nimport Honeybadger from './honeybadger'\n/**\n * Namespace on which to hang globals\n * for debugging.\n */\nconst GL: Dict<any> = {}\n\nGL.ModelRegistry = ModelRegistry\nGL.api = api\nGL.currentUser = currentUser\n\nGL.CUTOFF_TIME = CUTOFF_TIME\nGL.DateTime = DateTime\n\nGL.dynamicPaths = dynamicPaths\nGL.paths = paths\nGL.Honeybadger = Honeybadger\n\nGL.CookieJar = CookieJar\nGL.f7 = f7\n\nexport default GL;\n(window as any).GL = GL\n","import React from 'reactn'\nimport { Page, Block, Button } from 'framework7-react'\nimport { Trans } from '@lingui/macro'\nimport logger from './logger'\nimport EmailLink, { SUPPORT_EMAIL } from './components/EmailLink'\n\nexport class ErrorBoundary extends React.Component<any, any> {\n  state = {\n    hasError: false,\n    message: '',\n  }\n\n  static getDerivedStateFromError(error: any) {\n    const message = typeof error === 'string' ? error : error.message\n\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true, message }\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    logger.error(error, errorInfo)\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <Page>\n          <Block>\n            <h1>\n              <Trans id=\"ErrorBoundary.something_went_wrong\">\n                Something went wrong.\n              </Trans>\n            </h1>\n            <pre>\n              <Trans id=\"ErrorBoundary.error_message\">Error Message:</Trans>\n              {' '}\n              {this.state.message}\n            </pre>\n            <p>\n              If this continues to happen please contact us at <EmailLink email={SUPPORT_EMAIL} />\n            </p>\n            <Button fill onClick={() => { window.location.href = '/' }}>\n              <Trans id=\"ErrorBoundary.return_home\">Return Home</Trans>\n            </Button>\n          </Block>\n        </Page>\n      )\n    }\n\n    return this.props.children\n  }\n}\n","import { Trans } from '@lingui/macro'\nimport React, { useEffect, useGlobal } from 'reactn'\nimport { v1 } from 'src/api'\nimport { ping, setIntervalSafely } from 'src/util'\nimport './OnlineStatus.css'\n\nconst ONLINE_TEST_URL = 'http://neverssl.com/'\n/** How long to wait for a response in milisecconds */\nconst TIMEOUT = 5000\n\n/** How long to wait in between checks */\nconst CHECK_AFTER_SECS = 60\nconst HAS_ONLINE_SUPPORT = 'onLine' in navigator\n\nfunction testInternet(): Promise<boolean> {\n  if (HAS_ONLINE_SUPPORT) {\n    return Promise.resolve(navigator.onLine)\n  }\n  return ping(ONLINE_TEST_URL, TIMEOUT)\n}\n\nexport default function OnlineStatus(): JSX.Element {\n  const [isAPIOnline, setIsAPIOnline] = useGlobal('isAPIOnline')\n  const [isInternetOnline, setIsInternetOnline] = useGlobal('isInternetOnline')\n\n  function checkConnection(checkApi: boolean = false) {\n    testInternet().then((internetStatus) => {\n      setIsInternetOnline(internetStatus)\n      if (internetStatus && checkApi) {\n        v1.get('ping').then(() => setIsAPIOnline(true)).catch(() => setIsAPIOnline(false))\n      }\n    })\n  }\n\n  useEffect(() => {\n    const timerId = setIntervalSafely(() => {\n      checkConnection()\n    }, CHECK_AFTER_SECS * 1000)\n\n    return () => { window.clearTimeout(timerId) }\n  }, [])\n\n  // We need explicit false checks because it is undefined by default\n  if (isInternetOnline === false) {\n    return (\n      <div className=\"OnlineStatus\">\n        <Trans id=\"OnlineStatus.internet_offline\">\n          You're internet is disconnected.\n        </Trans>\n        <button\n          type=\"button\"\n          className=\"retry\"\n          onClick={() => checkConnection(true)}\n        >Retry\n        </button>\n      </div>\n    )\n  }\n\n  // We need explicit false checks because it is undefined by default\n  if (isAPIOnline === false) {\n    return (\n      <div className=\"OnlineStatus\">\n        <Trans id=\"OnlineStatus.api_offline\">\n          Can't connect to Greenlight.\n          <button\n            type=\"button\"\n            className=\"retry\"\n            onClick={() => checkConnection(true)}\n          >Retry\n          </button>\n        </Trans>\n      </div>\n    )\n  }\n\n  return <></>\n}\n","import { Trans } from '@lingui/macro'\nimport React from 'react'\nimport { useState } from 'reactn'\nimport './SupportedBrowserBar.css'\n\n// Generate this list with: npx browserslist-useragent-regexp --allowHigherVersions\n// eslint-disable-next-line\nexport const supportedBrowsers = /((CPU[ +]OS|iPhone[ +]OS|CPU[ +]iPhone|CPU IPhone OS)[ +]+(10[_.]3|10[_.]([4-9]|\\d{2,})|(1[1-9]|[2-9]\\d|\\d{3,})[_.]\\d+|11[_.]4|11[_.]([5-9]|\\d{2,})|(1[2-9]|[2-9]\\d|\\d{3,})[_.]\\d+|12[_.]0|12[_.]([1-9]|\\d{2,})|12[_.]4|12[_.]([5-9]|\\d{2,})|(1[3-9]|[2-9]\\d|\\d{3,})[_.]\\d+|13[_.]0|13[_.]([1-9]|\\d{2,})|13[_.]3|13[_.]([4-9]|\\d{2,})|13[_.]7|13[_.]([8-9]|\\d{2,})|(1[4-9]|[2-9]\\d|\\d{3,})[_.]\\d+|14[_.]0|14[_.]([1-9]|\\d{2,})|(1[5-9]|[2-9]\\d|\\d{3,})[_.]\\d+)(?:[_.]\\d+)?)|(CFNetwork\\/8.* Darwin\\/16\\.5\\.\\d+)|(CFNetwork\\/8.* Darwin\\/16\\.6\\.\\d+)|(CFNetwork\\/8.* Darwin\\/16\\.7\\.\\d+)|(SamsungBrowser\\/(11\\.1|11\\.([2-9]|\\d{2,})|(1[2-9]|[2-9]\\d|\\d{3,})\\.\\d+|12\\.0|12\\.([1-9]|\\d{2,})|(1[3-9]|[2-9]\\d|\\d{3,})\\.\\d+))|(Edge\\/(18(?:\\.0)?|18(?:\\.([1-9]|\\d{2,}))?|(19|[2-9]\\d|\\d{3,})(?:\\.\\d+)?|85(?:\\.0)?|85(?:\\.([1-9]|\\d{2,}))?|(8[6-9]|9\\d|\\d{3,})(?:\\.\\d+)?))|((Chromium|Chrome)\\/(49\\.0|49\\.([1-9]|\\d{2,})|([5-9]\\d|\\d{3,})\\.\\d+|80\\.0|80\\.([1-9]|\\d{2,})|(8[1-9]|9\\d|\\d{3,})\\.\\d+|83\\.0|83\\.([1-9]|\\d{2,})|(8[4-9]|9\\d|\\d{3,})\\.\\d+)(?:\\.\\d+)?([\\d.]+$|.*Safari\\/(?![\\d.]+ Edge\\/[\\d.]+$)))|(Version\\/(13\\.0|13\\.([1-9]|\\d{2,})|(1[4-9]|[2-9]\\d|\\d{3,})\\.\\d+|14\\.0|14\\.([1-9]|\\d{2,})|(1[5-9]|[2-9]\\d|\\d{3,})\\.\\d+)(?:\\.\\d+)? Safari\\/)|(Trident\\/7\\.0)|(Firefox\\/(79\\.0|79\\.([1-9]|\\d{2,})|([8-9]\\d|\\d{3,})\\.\\d+)\\.\\d+)|(Firefox\\/(79\\.0|79\\.([1-9]|\\d{2,})|([8-9]\\d|\\d{3,})\\.\\d+)(pre|[ab]\\d+[a-z]*)?)|(([MS]?IE) (11\\.0|11\\.([1-9]|\\d{2,})|(1[2-9]|[2-9]\\d|\\d{3,})\\.\\d+))/\n\nexport default function SupportedBrowserBar(): JSX.Element {\n  const [hidden, setHidden] = useState(false)\n  if (supportedBrowsers.test(navigator.userAgent) || hidden) {\n    return <></>\n  }\n\n  return (\n    <div className=\"SupportedBrowserBar\">\n      <Trans id=\"SupportedBrowserBar.error\">\n        Your browser isn't supported. Some things might not work!\n      </Trans>\n      <button type=\"button\" className=\"close\" onClick={() => setHidden(true)}>\n        <Trans id=\"Common.hide\">Hide</Trans>\n      </button>\n    </div>\n  )\n}\n","import React, { useGlobal } from 'reactn'\n\nexport default function FlashMessage() {\n  const [flashMessage] = useGlobal('flashMessage')\n  // f7.notification.create({\n  //   icon: '<i class=\"icon demo-icon\">7</i>',\n  //   title: 'Framework7',\n  //   titleRightText: 'now',\n  //   subtitle: 'Notification with close on click',\n  //   text: flashMessage,\n  //   closeOnClick: true,\n  // })\n  if (flashMessage) {\n    return <p>{flashMessage}</p>\n  }\n  return <></>\n}\n","import React, { Fragment, useGlobal } from 'reactn'\n\nimport './App.css'\n\nimport { App, View } from 'framework7-react'\n\nimport { Framework7Params } from 'framework7/components/app/app-class'\n\nimport { I18nProvider, useLingui } from '@lingui/react'\nimport routes from './routes'\nimport { i18n as globalI18n } from './i18n'\nimport { ErrorBoundary } from './ErrorBoundary'\nimport OnlineStatus from './components/OnlineStatus'\nimport SupportedBrowserBar from './components/SupportedBrowserBar'\nimport { isCordova } from './util'\nimport FlashMessage from './components/FlashMessage'\n\nfunction I18nWatchLocale({ children }: { children: React.ReactNode }) {\n  const { i18n } = useLingui()\n\n  // Skip render when locale isn't loaded\n  if (!i18n.locale) return null\n  // Force re-render by using active locale as an element key.\n  return <Fragment key={i18n.locale}>{children}</Fragment>\n}\n\n// Framework7 parameters here\nconst f7params: Framework7Params = {\n  id: 'com.greenlightready.mobile', // App bundle ID\n  name: 'Greenlight', // App name\n  theme: 'auto', // Automatic theme detection\n  routes,\n}\n\nif (!isCordova()) {\n  f7params.view = {\n    pushState: true,\n    pushStateSeparator: '',\n  }\n}\n\nexport default function Main() {\n  const [locale] = useGlobal('locale')\n\n  return (\n    <I18nProvider i18n={globalI18n}>\n      <I18nWatchLocale>\n        <App key={locale} params={f7params} className=\"App\">\n          <SupportedBrowserBar />\n          <OnlineStatus />\n          <ErrorBoundary>\n\n            <View id=\"main-view\" url=\"/\" main className=\"safe-areas\">\n              <FlashMessage />\n            </View>\n          </ErrorBoundary>\n        </App>\n      </I18nWatchLocale>\n    </I18nProvider>\n\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\nimport logger from './logger'\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      logger.dev(\n        'No internet connection found. App is running in offline mode.',\n      )\n    })\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href,\n    )\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          logger.dev(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker === null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              logger.dev(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              logger.dev('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      logger.dev('Error during service worker registration:', error)\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        logger.dev(error.message)\n      })\n  }\n}\n","import './initializers'\n\nimport React, { setGlobal } from 'reactn'\nimport ReactDOM from 'react-dom'\n\nimport Framework7 from 'framework7/framework7.esm.bundle'\nimport Framework7React from 'framework7-react'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nimport 'framework7/css/framework7.bundle.css'\nimport 'framework7-icons'\n\nimport './fonts/Poppins/index.css'\nimport './index.css'\n\nimport { getCurrentUser } from './api'\nimport logger from './logger'\n\n// Init Framework7-React plugin\nFramework7.use(Framework7React)\n\nfunction render() {\n  ReactDOM.render(<App />, document.getElementById('root'))\n}\n\nfunction startApp() {\n  getCurrentUser()\n    .then((user) => {\n      setGlobal({ currentUser: user, locale: user.locale })\n    })\n    .catch((err) => {\n      if (err.response && err.response.status !== 401) {\n        logger.error(err)\n      } else {\n        throw err\n      }\n    })\n    .finally(() => {\n      render()\n    })\n}\n\nif ((window as any).cordova) {\n  document.addEventListener('deviceready', startApp, false)\n  document.addEventListener('resume', () => {\n    (window as any).codePush.sync()\n  })\n} else {\n  startApp()\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}