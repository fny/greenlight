daemon off;
# Heroku dynos have at least 4 cores.
worker_processes <%= ENV.fetch('NGINX_WORKERS', 4) %>;

events {
    use epoll;
    accept_mutex on;
    worker_connections <%= ENV.fetch('NGINX_WORKER_CONNECTIONS', 1024) %>;
}

http {
    gzip on;
    gzip_comp_level 2;
    gzip_min_length 512;

    server_tokens off;

    log_format l2met 'measure#nginx.service=$request_time request_id=$http_x_request_id';
    access_log <%= ENV.fetch('NGINX_ACCESS_LOG_PATH', 'logs/nginx/access.log') %> l2met;
    error_log <%= ENV.fetch('NGINX_ERROR_LOG_PATH', 'logs/nginx/error.log') %>;

    include mime.types;
    default_type application/octet-stream;
    sendfile on;

    # Must read the body in 5 seconds.
    client_body_timeout 5;

    upstream app_server {
        server unix:/tmp/nginx.socket fail_timeout=0;
    }
<% if ENV.key?('HEROKU_APP_NAME') %>
    server {
        listen <%= ENV.fetch('PORT') %>;
        server_name <%= ENV.fetch('HEROKU_APP_NAME') %>.herokuapp.com;
        keepalive_timeout 5;

        root <%= File.expand_path("../client/build", __dir__) %>;
        index index.html index.htm;

        location / {
          try_files $uri /index.html;
        }

        location /api {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_redirect off;
            proxy_pass http://app_server;
        }
    }
<% else %>
    server {
        listen <%= ENV.fetch('PORT') %>;
        server_name <%= URI(ENV.fetch('API_URL')).host %>;
        keepalive_timeout 5;

        location / {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_redirect off;
            proxy_pass http://app_server;
        }
    }

    server {
        listen <%= ENV.fetch('PORT') %>;
        server_name <%= URI(ENV.fetch('APP_URL')).host %>;
        keepalive_timeout 5;
        root <%= File.expand_path("../client/build", __dir__) %>;
        index index.html index.htm;
        location / {
          try_files $uri /index.html;
        }
    }
<% end %>
}
